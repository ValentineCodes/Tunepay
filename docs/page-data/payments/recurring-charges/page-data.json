{"componentChunkName":"component---src-templates-post-template-js","path":"/payments/recurring-charges/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Recurring Charges\",\n  \"date\": \"2019-01-24T00:00:00.000Z\",\n  \"published\": true\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar Callout = makeShortcode(\"Callout\");\nvar Link = makeShortcode(\"Link\");\nvar OrderedList = makeShortcode(\"OrderedList\");\nvar ApiLink = makeShortcode(\"ApiLink\");\nvar Tabs = makeShortcode(\"Tabs\");\nvar RequestResponse = makeShortcode(\"RequestResponse\");\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"header\", null, mdx(\"h1\", null, \"Recurring Charges\"), mdx(Callout, {\n    type: \"summary\",\n    title: \"In a nutshell\",\n    mdxType: \"Callout\"\n  }, \"Once a customer has made the first successful payment with their card, you can store the customer's card authorization and use it for subsequent transactions. \", mdx(\"strong\", null, \"This currently only works for card!\"))), mdx(\"h2\", {\n    \"id\": \"charge-the-first-transaction\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#charge-the-first-transaction\",\n    \"aria-label\": \"charge the first transaction permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Charge the first transaction\"), mdx(\"p\", null, \"You can initialize this first charge from web or your mobile app. Check out the different \", mdx(Link, {\n    to: \"/libraries-and-plugins\",\n    mdxType: \"Link\"\n  }, \"integration methods for web and mobile\"), \".\"), mdx(\"h3\", {\n    \"id\": \"why-do-i-need-to-charge-the-user-to-add-their-cards\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h3\"\n  }, {\n    \"href\": \"#why-do-i-need-to-charge-the-user-to-add-their-cards\",\n    \"aria-label\": \"why do i need to charge the user to add their cards permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Why do I need to charge the user to add their cards?\"), mdx(OrderedList, {\n    items: [mdx(\"span\", null, \"Local regulations require that users authenticate the card through \", mdx(\"code\", null, \"2FA\"), \" in an initial transaction before we can charge the card subsequently.\"), mdx(\"span\", null, \"It allows us to ensure that the card is valid and can be charged for subsequent transactions.\")],\n    mdxType: \"OrderedList\"\n  }), mdx(Callout, {\n    type: \"warning\",\n    title: \"Minimum charge amount\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, \"The minimum amount we recommend for the first charge is \", mdx(\"strong\", null, \"NGN 50.00\"), \", \", mdx(\"strong\", null, \"GHS 0.10\"), \" or \", mdx(\"strong\", null, \"USD 0.20\"), \". Lower amounts are not guaranteed to work on all card brands or banks.\"), mdx(\"p\", null, \"It is standard practice to credit the user back with value (in your app) worth the tokenization amount, or simply refund the money back.\")), mdx(\"h2\", {\n    \"id\": \"get-the-card-authorization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#get-the-card-authorization\",\n    \"aria-label\": \"get the card authorization permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Get the Card authorization\"), mdx(\"p\", null, \"If the first transaction is successful, you can listen to events on \", mdx(Link, {\n    to: \"/payments/webhooks\",\n    mdxType: \"Link\"\n  }, \"your webhook endpoint\"), \". Alternatively, you can use the \", mdx(ApiLink, {\n    title: \"Verify Transaction\",\n    path: \"transaction-verify\",\n    mdxType: \"ApiLink\"\n  }), \" endpoint to confirm the status of the transaction. In either case, the response looks like the sample below:\"), mdx(Tabs, {\n    links: {\n      json: \"JSON\"\n    },\n    filepath: \"/payments/recurring-charges/authorization.js\",\n    mdxType: \"Tabs\"\n  }), mdx(\"p\", null, \"You'll notice that the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"data\"), \" object in the response contains an \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"authorization\"), \" object within it, which contains the details of the payment instrument (card in this case) that the user paid with. \"), mdx(\"table\", null, mdx(\"thead\", null, mdx(\"tr\", null, mdx(\"th\", null, \"Property\"), mdx(\"th\", null, \"Description\"))), mdx(\"tbody\", null, mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"authorization_code\"), mdx(\"td\", null, \"This is the code that is used to charge the card subsequently\")), mdx(\"tr\", null, mdx(\"td\", null, \"card_type\"), mdx(\"td\", null, \"This tells you the card brand - Visa, Mastercard, etc\")), mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"last4\"), mdx(\"td\", null, \"The last 4 digits of the card. This is one of the details you can use to help the user identify the card\")), mdx(\"tr\", null, mdx(\"td\", null, \"exp_month\"), mdx(\"td\", null, \" The expiry month of the card in digits. Eg. \\\"01\\\" means January\")), mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"exp_year\"), mdx(\"td\", null, \"The expiry year of the card\")), mdx(\"tr\", null, mdx(\"td\", null, \"bin\"), mdx(\"td\", null, \"The first 6 digits of the card. This and the last 4 digits constitute the \", mdx(\"strong\", null, \"masked pan\"))), mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"bank\"), mdx(\"td\", null, \"The customer's bank, the bank that issued the card\")), mdx(\"tr\", null, mdx(\"td\", null, \"channel\"), mdx(\"td\", null, \"What payment channel this is. In this case, it is a card payment\")), mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"signature\"), mdx(\"td\", null, \"An identifier that enables you identify this card on your system (no matter the customer that used it. Since we generate a new authorization code every time a payment is made with a card (all former ones remain valid), authorization code cannot be an identifier, but every card has just one signature.\")), mdx(\"tr\", null, mdx(\"td\", null, \"reusable\"), mdx(\"td\", null, \"A boolean flag that tells you if an authorization can be used for a recurring debit. This is always `true` for all cards, false for other payment channel since they can't be reused\")), mdx(\"tr\", {\n    className: \"odd-row\"\n  }, mdx(\"td\", null, \"country_code\"), mdx(\"td\", null, \"The country of the bank where the card was issued\")))), mdx(\"h2\", {\n    \"id\": \"store-the-authorization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#store-the-authorization\",\n    \"aria-label\": \"store the authorization permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Store the authorization\"), mdx(\"p\", null, \"Next, you need to store the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"authorization\"), \" and the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"email\"), \" used for the transaction. These details can be used to charge the card subsequently. Every payment instrument that is used on your site/app has a unique \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"signature\"), \" . The \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"signature\"), \" can be used to ensure that you do not save an authorization multiple times.\"), mdx(Callout, {\n    type: \"info\",\n    title: \"Note\",\n    mdxType: \"Callout\"\n  }, mdx(\"p\", null, \"It is important to store the entire \", mdx(\"code\", null, \"authorization\"), \" object in order not to lose any context regarding the card.\"), mdx(\"p\", null, \"It is also important to store the email used to create an authorization because only the email used to create an authorization can be used to charge it. If you rely on the user's email stored on your system and the user changes it, the authorization can no longer be charged.\")), mdx(\"p\", null, \"When you have the whole authorization object saved, you can display customer payment details at the point of payment to charge recurrently. For example, when the user wants to pay again, you can display the card for the user as\\xA0\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Access Bank Visa card ending with 1234\"), \".\"), mdx(\"h2\", {\n    \"id\": \"charge-the-authorization\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#charge-the-authorization\",\n    \"aria-label\": \"charge the authorization permalink\",\n    \"className\": \"anchor before\"\n  }), mdx(\"svg\", _extends({\n    parentName: \"a\"\n  }, {\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }), mdx(\"path\", _extends({\n    parentName: \"svg\"\n  }, {\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  })))), \"Charge the authorization\"), mdx(\"p\", null, \"When the user selects the card for a new transaction or when you want to charge them subsequently, you send the\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"authorization_code\"), \", user's\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"email\"), \"\\xA0and the\\xA0\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"amount\"), \"\\xA0you want to charge to the \", mdx(ApiLink, {\n    title: \"charge authorization\",\n    path: \"transaction-charge-authorization\",\n    mdxType: \"ApiLink\"\n  }), \" endpoint.\"), mdx(RequestResponse, {\n    links: {\n      bash: \"cURL\",\n      js: \"Node\",\n      php: \"PHP\"\n    },\n    filepath: \"/payments/recurring-charges/charge-authorization.js\",\n    mdxType: \"RequestResponse\"\n  }), mdx(Callout, {\n    type: \"info\",\n    title: \"Charging at intervals\",\n    mdxType: \"Callout\"\n  }, \"If your application needs to charge the authorizations at certain intervals, it means your server needs to have a cron job that runs at particular intervals and picks all the authorizations that needs to be charged.\"));\n}\n;\nMDXContent.isMDXComponent = true;","tableOfContents":{"items":[{"url":"#charge-the-first-transaction","title":"Charge the first transaction","items":[{"url":"#why-do-i-need-to-charge-the-user-to-add-their-cards","title":"Why do I need to charge the user to add their cards?"}]},{"url":"#get-the-card-authorization","title":"Get the Card authorization"},{"url":"#store-the-authorization","title":"Store the authorization"},{"url":"#charge-the-authorization","title":"Charge the authorization"}]},"fields":{"slug":"/payments/recurring-charges/"},"frontmatter":{"title":"Recurring Charges"}}},"pageContext":{"slug":"/payments/recurring-charges/"}},"staticQueryHashes":["2577489308"]}