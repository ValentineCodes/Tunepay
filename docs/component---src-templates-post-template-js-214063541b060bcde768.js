(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{"+fwi":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", \n      amount: "20000", \n      split: {\n        type: "flat",\n        bearer_type: "account",\n        subaccounts: [\n          {\n            subaccount: "ACCT_pwwualwty4nhq9d",\n            share: 6000\n          },\n          {\n            subaccount: "ACCT_hdl8abxl8drhrl3",\n            share: 4000\n          },\n        ]\n      } \n}\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "email": "customer@email.com",\n  "amount": "20000",\n  "split": {\n    "type": "flat",\n    "bearer_type": "account",\n    "subaccounts": [\n      {\n        "subaccount": "ACCT_pwwualwty4nhq9d",\n        "share": 6000\n      },\n      {\n        "subaccount": "ACCT_hdl8abxl8drhrl3",\n        "share": 4000\n      },\n    ]\n  } \n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/transaction/initialize\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',o='<?php\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/initialize",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST",\n    CURLOPT_POSTFIELDS => "{\n      "email": "customer@email.com",\n      "amount": "20000",\n      "split": {\n        "type": "flat",\n        "bearer_type": "account",\n        "subaccounts": [\n          {\n            "subaccount": "ACCT_pwwualwty4nhq9d",\n            "share": 6000\n          },\n          {\n            "subaccount": "ACCT_hdl8abxl8drhrl3",\n            "share": 4000\n          },\n        ]\n      } \n    }",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache"\n    ),\n  ));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n\n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},"07+e":function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{ \n  "country": "NG",\n  "type": "bvn",\n  "value": "22222222298",\n  "first_name": "Uchenna",\n  "last_name": "Okoro"\n}\n'},"0I2F":function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,[a.createElement("defs",{key:0},a.createElement("style",null,".cls-1{fill:#001b35;}")),a.createElement("title",{key:1},"In A Nutshell"),a.createElement("path",{className:"cls-1",d:"M7.47,6.08l-.28.28a1.93,1.93,0,0,1-.44-1.78A.5.5,0,0,0,6.49,4L6,3.75a.51.51,0,0,0-.72.32A3.53,3.53,0,0,0,6.05,7.5l-.27.27a6.07,6.07,0,0,0,0,8.58.87.87,0,0,0,1.23,0l9-9a.88.88,0,0,0,0-1.23A6.07,6.07,0,0,0,7.47,6.08Z",key:2}),a.createElement("path",{className:"cls-1",d:"M17.41,11.93a3,3,0,0,1,.84,2.6.67.67,0,0,1-.95.5h0a.71.71,0,0,1-.35-.74,1.66,1.66,0,0,0-.46-1.4l-2.14-2.13-6,6,1.43,1.43c2.32,2.32,5.52,2.94,8,1.05l.34.33a.79.79,0,1,0,1.12-1.12l-.34-.33c1.9-2.46,1.27-5.66-1.05-8L16.4,8.66,15.28,9.79Z",key:3})])}r.defaultProps={id:"Layer_1","data-name":"Layer 1",viewBox:"0 0 24 24"},n.exports=r,r.default=r},"0zjK":function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,[a.createElement("path",{d:"M15.9461 18.3264H7.93945V19.9726H15.9461V18.3264Z",fill:"#728F9E",key:0}),a.createElement("path",{d:"M9.01563 22.4119C9.01559 22.6316 9.10183 22.8425 9.25578 22.9992C9.40973 23.156 9.61907 23.246 9.83874 23.2499H10.2877C10.2916 23.4379 10.369 23.6167 10.5033 23.7482C10.6376 23.8797 10.8181 23.9534 11.0061 23.9533H12.8618C13.0498 23.9534 13.2302 23.8797 13.3645 23.7482C13.4988 23.6167 13.5762 23.4379 13.5802 23.2499H14.0291C14.2488 23.246 14.4581 23.156 14.6121 22.9992C14.766 22.8425 14.8523 22.6316 14.8522 22.4119V21.6636H9.01563V22.4119Z",fill:"#728F9E",key:1}),a.createElement("path",{d:"M10.436 0.21776C9.14638 0.50543 7.96164 1.14465 7.01313 2.06454C6.06463 2.98443 5.38943 4.14905 5.06241 5.42924C4.73538 6.70944 4.76931 8.0552 5.16043 9.3173C5.55155 10.5794 6.28458 11.7085 7.27823 12.5794C7.85865 13.0837 8.31168 13.718 8.60037 14.4306C8.88906 15.1432 9.00523 15.914 8.93942 16.68H14.9257V16.1263C14.9402 15.4546 15.1018 14.7942 15.3991 14.1917C15.6965 13.5893 16.1224 13.0593 16.6468 12.6393C17.4372 11.9724 18.072 11.1404 18.5064 10.2019C18.9408 9.2633 19.1642 8.24095 19.161 7.20674C19.1597 6.13388 18.9176 5.07498 18.4526 4.10814C17.9876 3.14129 17.3115 2.29116 16.4741 1.62042C15.6368 0.949681 14.6595 0.475446 13.6145 0.232682C12.5695 -0.0100814 11.4833 -0.0151806 10.436 0.21776V0.21776ZM16.4223 6.03942H14.9257V5.93466C14.9218 5.42782 14.7187 4.94284 14.3603 4.58444C14.0019 4.22604 13.5169 4.02296 13.0101 4.01905C12.8937 4.03485 12.7753 4.02556 12.6628 3.99181C12.5503 3.95806 12.4464 3.90062 12.3579 3.82336C12.2694 3.7461 12.1985 3.65081 12.15 3.54388C12.1014 3.43695 12.0762 3.32086 12.0762 3.20342C12.0762 3.08597 12.1014 2.96988 12.15 2.86295C12.1985 2.75603 12.2694 2.66073 12.3579 2.58347C12.4464 2.50621 12.5503 2.44878 12.6628 2.41503C12.7753 2.38127 12.8937 2.37199 13.0101 2.38779C13.9272 2.42264 14.7952 2.81166 15.4315 3.47309C16.0678 4.13451 16.4229 5.01685 16.4223 5.93466V6.03942Z",fill:"#728F9E",key:2})])}r.defaultProps={width:"24",height:"24",viewBox:"0 0 24 24",fill:"none"},n.exports=r,r.default=r},"2klF":function(n,e){n.exports=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}},"364i":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transfer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ source: "balance", amount: "3794800", recipient: "RCP_t0ya41mp35flk40", \n\t reason: "Holiday Flexing" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"source\": \"balance\",\n  \"amount\": 3794800,\n  \"recipient\": \"RCP_t0ya41mp35flk40\",\n  \"reason\": \"Holiday Flexing\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transfer";\n\n  $fields = [\n    \'source\' => "balance",\n    \'amount\' => 3794800,\n    \'recipient\' => "RCP_t0ya41mp35flk40",\n    \'reason\' => "Holiday Flexing"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Transfer has been queued",\n  "data": {\n    "reference": "on5hyz9poe",\n    "integration": 428626,\n    "domain": "test",\n    "amount": 3794800,\n    "currency": "NGN",\n    "source": "balance",\n    "reason": "Holiday Flexing",\n    "recipient": 6788170,\n    "status": "success",\n    "transfer_code": "TRF_fiyxvgkh71e717b",\n    "id": 23070321,\n    "createdAt": "2020-05-13T14:22:49.687Z",\n    "updatedAt": "2020-05-13T14:22:49.687Z"\n  }\n}'},"3ot7":function(n,e,t){},"5pdY":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000", subaccount: "ACCT_xxxxxxxxx" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"subaccount\": \"ACCT_xxxxxxxxx\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    \'subaccount\' => "ACCT_xxxxxxxxx"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},"5u2E":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer": 481193, "preferred_bank":"wema-bank", \n      "subaccount": "SUB_ACCOUNTCODE" \n    }\'\n-X POST',r="const https = require('follow-redirects').https;\nconst fs = require('fs');\n\nlet options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account',\n  'headers': {\n    'authorization': 'Bearer SEECRET_KEY',\n    'content-type': 'application/json',\n    'user-agent': 'Paystack-Developers-Hub'\n  },\n  'maxRedirects': 20\n};\n\nlet req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nlet postData = JSON.stringify({\"customer\":481193,\"preferred_bank\":\"wema-bank\",\"subaccount\":\"SUB_ACCOUNTCODE\"});\n\nreq.write(postData);\n\nreq.end();",o='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS =>"{"customer":481193,"preferred_bank":"wema-bank", "subaccount": "SUB_ACCOUNTCODE"}",\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SECRET_KEY",\n    "content-type: application/json",\n    "user-agent: Paystack-Developers-Hub"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',i='{\n    "status": true,\n    "message": "Assigned Managed Account Successfully Created",\n    "data": {\n      "bank": {\n        "name": "Wema Bank",\n        "id": 20,\n        "slug": "wema-bank"\n      },\n      "account_name": "KAROKART/YINKA ADE",\n      "account_number": "6731105168",\n      "assigned": true,\n      "currency": "NGN",\n      "metadata": null,\n      "active": true,\n      "id": 97,\n      "created_at": "2019-11-13T13:52:39.000Z",\n      "updated_at": "2020-03-17T07:52:23.000Z",\n      "assignment": {\n        "integration": 100043,\n        "assignee_id": 17328,\n        "assignee_type": "Customer",\n        "expired": false,\n        "account_type": "PAY-WITH-TRANSFER-RECURRING",\n        "assigned_at": "2020-03-17T07:52:23.023Z",\n        "expired_at": null\n      },\n      "split_config": {"subaccount":"ACC_qwerty"},\n      "customer": {\n        "id": 17328,\n        "first_name": "YINKA",\n        "last_name": "ADE",\n        "email": "yinka@testemail.com",\n        "customer_code": "CUS_xxxxxxxx",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default"\n      }\n    }\n  }'},"6Zpt":function(n,e,t){var a={"./snippets/guides/checkout_webview/handling_3ds":"bvvr","./snippets/guides/checkout_webview/handling_3ds.js":"bvvr","./snippets/guides/checkout_webview/handling_redirect":"LVZP","./snippets/guides/checkout_webview/handling_redirect.js":"LVZP","./snippets/guides/checkout_webview/initialize_webview":"Up1b","./snippets/guides/checkout_webview/initialize_webview.js":"Up1b","./snippets/guides/integrating_android_sdk/initialize_form_variable":"pleK","./snippets/guides/integrating_android_sdk/initialize_form_variable.js":"pleK","./snippets/guides/integrating_android_sdk/initialize_paystack":"dAgH","./snippets/guides/integrating_android_sdk/initialize_paystack.js":"dAgH","./snippets/guides/integrating_android_sdk/intent":"s9Yx","./snippets/guides/integrating_android_sdk/intent.js":"s9Yx","./snippets/guides/integrating_android_sdk/link_em_all":"xt6X","./snippets/guides/integrating_android_sdk/link_em_all.js":"xt6X","./snippets/guides/integrating_android_sdk/parse_response":"fnje","./snippets/guides/integrating_android_sdk/parse_response.js":"fnje","./snippets/guides/integrating_android_sdk/perform_charge":"cVRl","./snippets/guides/integrating_android_sdk/perform_charge.js":"cVRl","./snippets/guides/integrating_android_sdk/perform_charge_1":"iz4w","./snippets/guides/integrating_android_sdk/perform_charge_1.js":"iz4w","./snippets/guides/integrating_android_sdk/perform_charge_2":"gNm/","./snippets/guides/integrating_android_sdk/perform_charge_2.js":"gNm/","./snippets/identity/account/resolve":"gXzn","./snippets/identity/account/resolve.js":"gXzn","./snippets/identity/bvn/match":"PwEl","./snippets/identity/bvn/match.js":"PwEl","./snippets/identity/bvn/resolve":"ghzg","./snippets/identity/bvn/resolve.js":"ghzg","./snippets/identity/bvn/resolve2":"nWdA","./snippets/identity/bvn/resolve2.js":"nWdA","./snippets/identity/card/resolve":"8saG","./snippets/identity/card/resolve.js":"8saG","./snippets/identity/validate-customer/request":"kAzu","./snippets/identity/validate-customer/request.js":"kAzu","./snippets/identity/validate-customer/test-cred":"07+e","./snippets/identity/validate-customer/test-cred.js":"07+e","./snippets/identity/validate-customer/webhook":"A2Lg","./snippets/identity/validate-customer/webhook.js":"A2Lg","./snippets/payments/accept-payment/callback-1":"E1oo","./snippets/payments/accept-payment/callback-1.js":"E1oo","./snippets/payments/accept-payment/callback-2":"kwED","./snippets/payments/accept-payment/callback-2.js":"kwED","./snippets/payments/accept-payment/initialize":"QP6A","./snippets/payments/accept-payment/initialize.js":"QP6A","./snippets/payments/accept-payment/redirect-backend":"UoNq","./snippets/payments/accept-payment/redirect-backend.js":"UoNq","./snippets/payments/accept-payment/redirect-form":"gwgl","./snippets/payments/accept-payment/redirect-form.js":"gwgl","./snippets/payments/charge/request":"Ujyy","./snippets/payments/charge/request.js":"Ujyy","./snippets/payments/custom-fields/metadata":"yV6a","./snippets/payments/custom-fields/metadata.js":"yV6a","./snippets/payments/custom-filters/metadata":"l1Sq","./snippets/payments/custom-filters/metadata.js":"l1Sq","./snippets/payments/dedicated-nuban/assign-subaccount":"5u2E","./snippets/payments/dedicated-nuban/assign-subaccount-multi":"Z9ju","./snippets/payments/dedicated-nuban/assign-subaccount-multi.js":"Z9ju","./snippets/payments/dedicated-nuban/assign-subaccount.js":"5u2E","./snippets/payments/dedicated-nuban/create-dedicated-nuban":"WzTt","./snippets/payments/dedicated-nuban/create-dedicated-nuban.js":"WzTt","./snippets/payments/dedicated-nuban/customer":"Y8r7","./snippets/payments/dedicated-nuban/customer.js":"Y8r7","./snippets/payments/dedicated-nuban/event":"DTdE","./snippets/payments/dedicated-nuban/event.js":"DTdE","./snippets/payments/dedicated-nuban/remove-subaccount":"nfUh","./snippets/payments/dedicated-nuban/remove-subaccount.js":"nfUh","./snippets/payments/dedicated-nuban/update-subaccount":"ZXso","./snippets/payments/dedicated-nuban/update-subaccount-multi":"GUjr","./snippets/payments/dedicated-nuban/update-subaccount-multi.js":"GUjr","./snippets/payments/dedicated-nuban/update-subaccount.js":"ZXso","./snippets/payments/disputes/create-refund":"fL28","./snippets/payments/disputes/create-refund.js":"fL28","./snippets/payments/disputes/list-refunds":"k0Gk","./snippets/payments/disputes/list-refunds.js":"k0Gk","./snippets/payments/disputes/upload-url":"xrvW","./snippets/payments/disputes/upload-url.js":"xrvW","./snippets/payments/multi-split/charge-authorization":"E2yr","./snippets/payments/multi-split/charge-authorization.js":"E2yr","./snippets/payments/multi-split/create-split":"ASIg","./snippets/payments/multi-split/create-split.js":"ASIg","./snippets/payments/multi-split/dynamic":"+fwi","./snippets/payments/multi-split/dynamic.js":"+fwi","./snippets/payments/multi-split/initialize":"G8QR","./snippets/payments/multi-split/initialize.js":"G8QR","./snippets/payments/multi-split/webhook":"Bbyf","./snippets/payments/multi-split/webhook.js":"Bbyf","./snippets/payments/overview/popup":"pknR","./snippets/payments/overview/popup.js":"pknR","./snippets/payments/overview/redirect":"Y3LN","./snippets/payments/overview/redirect.js":"Y3LN","./snippets/payments/payment-methods/bank":"hej9","./snippets/payments/payment-methods/bank-1":"hSNf","./snippets/payments/payment-methods/bank-1.js":"hSNf","./snippets/payments/payment-methods/bank.js":"hej9","./snippets/payments/payment-methods/eft":"7g3k","./snippets/payments/payment-methods/eft-event":"hhZX","./snippets/payments/payment-methods/eft-event.js":"hhZX","./snippets/payments/payment-methods/eft.js":"7g3k","./snippets/payments/payment-methods/mobile":"N+Dt","./snippets/payments/payment-methods/mobile-airtel-mtn":"DsVy","./snippets/payments/payment-methods/mobile-airtel-mtn.js":"DsVy","./snippets/payments/payment-methods/mobile-charge":"KlJW","./snippets/payments/payment-methods/mobile-charge.js":"KlJW","./snippets/payments/payment-methods/mobile-event":"uNAj","./snippets/payments/payment-methods/mobile-event.js":"uNAj","./snippets/payments/payment-methods/mobile-money":"k/JU","./snippets/payments/payment-methods/mobile-money.js":"k/JU","./snippets/payments/payment-methods/mobile-response-jit":"CONY","./snippets/payments/payment-methods/mobile-response-jit.js":"CONY","./snippets/payments/payment-methods/mobile-response-late":"Ljwo","./snippets/payments/payment-methods/mobile-response-late.js":"Ljwo","./snippets/payments/payment-methods/mobile-vodafone":"aw0z","./snippets/payments/payment-methods/mobile-vodafone.js":"aw0z","./snippets/payments/payment-methods/mobile.js":"N+Dt","./snippets/payments/payment-methods/qr":"vKuV","./snippets/payments/payment-methods/qr-event":"pHBQ","./snippets/payments/payment-methods/qr-event.js":"pHBQ","./snippets/payments/payment-methods/qr.js":"vKuV","./snippets/payments/payment-methods/ussd":"Cats","./snippets/payments/payment-methods/ussd-event":"E6J7","./snippets/payments/payment-methods/ussd-event.js":"E6J7","./snippets/payments/payment-methods/ussd.js":"Cats","./snippets/payments/recurring-charges/authorization":"Pq9h","./snippets/payments/recurring-charges/authorization.js":"Pq9h","./snippets/payments/recurring-charges/charge-authorization":"Ab4+","./snippets/payments/recurring-charges/charge-authorization.js":"Ab4+","./snippets/payments/split-payment/bearer":"cXna","./snippets/payments/split-payment/bearer.js":"cXna","./snippets/payments/split-payment/create-subaccount":"KHDq","./snippets/payments/split-payment/create-subaccount.js":"KHDq","./snippets/payments/split-payment/flat-fee":"gf0b","./snippets/payments/split-payment/flat-fee.js":"gf0b","./snippets/payments/split-payment/initialize":"5pdY","./snippets/payments/split-payment/initialize.js":"5pdY","./snippets/payments/subscriptions/create-plan":"Ei1t","./snippets/payments/subscriptions/create-plan.js":"Ei1t","./snippets/payments/subscriptions/create-subscription":"s9uL","./snippets/payments/subscriptions/create-subscription-api":"hwIe","./snippets/payments/subscriptions/create-subscription-api.js":"hwIe","./snippets/payments/subscriptions/create-subscription.js":"s9uL","./snippets/payments/subscriptions/event":"SkVb","./snippets/payments/subscriptions/event.js":"SkVb","./snippets/payments/verify-payment/verify":"Hr1D","./snippets/payments/verify-payment/verify.js":"Hr1D","./snippets/payments/webhooks/events":"Medf","./snippets/payments/webhooks/events.js":"Medf","./snippets/payments/webhooks/receiving-events":"tr8c","./snippets/payments/webhooks/receiving-events.js":"tr8c","./snippets/payments/webhooks/verifying-transactions":"wgEU","./snippets/payments/webhooks/verifying-transactions.js":"wgEU","./snippets/transfers/bulk/initiate-transfer":"oIQz","./snippets/transfers/bulk/initiate-transfer.js":"oIQz","./snippets/transfers/single/create-transfer-receipient":"aWqj","./snippets/transfers/single/create-transfer-receipient.js":"aWqj","./snippets/transfers/single/finalize-transfer":"Cj93","./snippets/transfers/single/finalize-transfer.js":"Cj93","./snippets/transfers/single/initiate-transfer":"364i","./snippets/transfers/single/initiate-transfer-otp":"UeNt","./snippets/transfers/single/initiate-transfer-otp.js":"UeNt","./snippets/transfers/single/initiate-transfer.js":"364i","./snippets/transfers/single/verify-account":"ug+p","./snippets/transfers/single/verify-account.js":"ug+p"};function r(n){var e=o(n);return t(e)}function o(n){if(!t.o(a,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return a[n]}r.keys=function(){return Object.keys(a)},r.resolve=o,n.exports=r,r.id="6Zpt"},"6cul":function(n,e){Prism.languages.swift=Prism.languages.extend("clike",{string:{pattern:/("|')(?:\\(?:\((?:[^()]|\([^)]+\))+\)|\r\n|[^(])|(?!\1)[^\\\r\n])*\1/,greedy:!0,inside:{interpolation:{pattern:/\\\((?:[^()]|\([^)]+\))+\)/,inside:{delimiter:{pattern:/^\\\(|\)$/,alias:"variable"}}}}},keyword:/\b(?:as|associativity|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic(?:Type)?|else|enum|extension|fallthrough|final|for|func|get|guard|if|import|in|infix|init|inout|internal|is|lazy|left|let|mutating|new|none|nonmutating|operator|optional|override|postfix|precedence|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|Self|set|static|struct|subscript|super|switch|throws?|try|Type|typealias|unowned|unsafe|var|weak|where|while|willSet|__(?:COLUMN__|FILE__|FUNCTION__|LINE__))\b/,number:/\b(?:[\d_]+(?:\.[\de_]+)?|0x[a-f0-9_]+(?:\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\b/i,constant:/\b(?:nil|[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\b/,atrule:/@\b(?:IB(?:Outlet|Designable|Action|Inspectable)|class_protocol|exported|noreturn|NS(?:Copying|Managed)|objc|UIApplicationMain|auto_closure)\b/,builtin:/\b(?:[A-Z]\S+|abs|advance|alignof(?:Value)?|assert|contains|count(?:Elements)?|debugPrint(?:ln)?|distance|drop(?:First|Last)|dump|enumerate|equal|filter|find|first|getVaList|indices|isEmpty|join|last|lexicographicalCompare|map|max(?:Element)?|min(?:Element)?|numericCast|overlaps|partition|print(?:ln)?|reduce|reflect|reverse|sizeof(?:Value)?|sort(?:ed)?|split|startsWith|stride(?:of(?:Value)?)?|suffix|swap|toDebugString|toString|transcode|underestimateCount|unsafeBitCast|with(?:ExtendedLifetime|Unsafe(?:MutablePointers?|Pointers?)|VaList))\b/}),Prism.languages.swift.string.inside.interpolation.inside.rest=Prism.languages.swift},"7g3k":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{\n      "amount": 5000,\n      "currency": "ZAR",\n      "email": "customer@email.com",\n      "eft": {\n        "provider": "ozow"\n      }\n}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"amount\": 5000,\n  \"currency\": \"ZAR\",\n  \"email\": \"customer@email.com\",\n  \"eft\": {\n    \"provider\": \"ozow\"\n  }\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n$curl = curl_init();\ncurl_setopt_array($curl, array( \n  CURLOPT_URL => "https://api.paystack.co/charge", \n  CURLOPT_RETURNTRANSFER => true, \n  CURLOPT_ENCODING => "", \n  CURLOPT_MAXREDIRS => 10, \n  CURLOPT_TIMEOUT => 30, \n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, \n  CURLOPT_CUSTOMREQUEST => "POST", \n  CURLOPT_POSTFIELDS => "{\n    "amount": 5000,\n    "currency": "ZAR",\n    "email": "customer@email.com",\n    "eft": {\n      "provider": "ozow"\n    }\n  }", \n  CURLOPT_HTTPHEADER => array( \n    "Authorization: Bearer SECRET_KEY", \n    "Content-Type: application/json" ),\n));\n$response = curl_exec($curl);\n$err = curl_error($curl);\ncurl_close($curl);\nif ($err) {\n    echo "cURL Error #:" . $err;\n} else {\n    echo $response;\n}\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "18c0ywb63zutno0",\n    "status": "open_url",\n    "url": "https://crayon.paystack.co/eft/EFT_OZOW/121502"\n  }\n}\n'},"8Xsp":function(n,e,t){},"8saG":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/decision/bin/539983\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/decision/bin/539983',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n  \n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/decision/bin/539983",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Bin resolved",\n  "data": {\n    "bin": "539983",\n    "brand": "Mastercard",\n    "sub_brand": "",\n    "country_code": "NG",\n    "country_name": "Nigeria",\n    "card_type": "DEBIT",\n    "bank": "Guaranty Trust Bank",\n    "linked_bank_id": 9\n  }\n}'},"8yAE":function(n,e,t){"use strict";(function(n){var a=t("q1tI"),r=t.n(a),o=t("vOnD"),i=t("SVOR"),s=t("3Mpw"),c=t("eHPy");t("6poY");(void 0!==n?n:window).Prism=i.a,t("ZM0j"),t("otUN"),t("6cul");var u=o.a.div.withConfig({displayName:"TabContent__Container",componentId:"sc-3kmp6o-0"})(["padding:0px 16px;"]),l=o.a.pre.withConfig({displayName:"TabContent__Pre",componentId:"sc-3kmp6o-1"})(["position:relative;text-align:left;margin:1em 0;padding:16px 16px 24px;margin:16px 0;overflow-x:auto;border-radius:6px;background-color:#31485f;max-height:300px;& .token-line{line-height:1.5;}"]),p=(o.a.div.withConfig({displayName:"TabContent__Copy",componentId:"sc-3kmp6o-2"})(["display:flex;justify-content:flex-end;padding:6px;align-self:flex-start;position:relative;"]),o.a.button.withConfig({displayName:"TabContent__CopyCode",componentId:"sc-3kmp6o-3"})(["position:absolute;right:7px;border:none;border-radius:3px;margin:2px;opacity:0.4;cursor:pointer;margin:8px 0;&:focus{outline:none;}&:hover{opacity:1;cursor:pointer;}"]),o.a.span.withConfig({displayName:"TabContent__LineNo",componentId:"sc-3kmp6o-4"})(["display:inline-block;width:2em;user-select:none;opacity:0.3;"]));e.a=function(n){var e=n.language,t=n.codeString;return r.a.createElement(u,null,r.a.createElement(s.a,Object.assign({},s.b,{theme:c.a,code:t,language:e}),(function(n){var e=n.tokens,t=n.getLineProps,a=n.getTokenProps;return r.a.createElement(l,null,e.map((function(n,e){return r.a.createElement("div",t({line:n,key:e}),r.a.createElement(p,null,e+1),n.map((function(n,e){return r.a.createElement("span",a({token:n,key:e}))})))})))})))}}).call(this,t("yLpj"))},"A2+M":function(n,e,t){var a=t("X8hv");n.exports={MDXRenderer:a}},A2Lg:function(n,e,t){"use strict";t.r(e),t.d(e,"failed",(function(){return r})),t.d(e,"success",(function(){return a}));var a='{\n    "event": "customeridentification.success",\n    "data": {\n      "customer_id": "9387490384",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "email": "bojack@horsinaround.com",\n      "identification": {\n        "country": "NG",\n        "type": "bvn",\n        "value": "200*****677"\n      }\n    }\n  }',r='{\n    "event": "customeridentification.failed",\n    "data": {\n      "customer_id": "9387490384",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "email": "bojack@horsinaround.com",\n      "identification": {\n        "country": "NG",\n        "type": "bvn",\n        "value": "200*****677"\n      }\n    }\n  }'},ABvw:function(n,e,t){"use strict";var a=t("q1tI"),r=t.n(a),o=t("vOnD").a.ul.withConfig({displayName:"UnorderedList__List",componentId:"sc-11uwpn-0"})(["font-size:15px;margin:15px 0;padding:0;list-style:none;li{display:flex;align-items:center;height:30px;}li:before{content:'✓';width:14px;height:14px;border-radius:50%;border:solid 1px #728F9E14;display:flex;justify-content:center;align-items:center;font-size:11px;line-height:11px;font-weight:600;color:#728F9E;background:#EEF2F5;margin-right:8px;}"]);e.a=function(n){return r.a.createElement(o,null,n.items.map((function(n,e){return r.a.createElement("li",{key:e},n)})))}},ASIg:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name":"Percentage Split", \n      "type":"percentage", \n      "currency": "NGN",\n      "subaccounts":[{\n        "subaccount": "ACCT_z3x6z3nbo14xsil",\n        "share": 20\n    },\n    {\n        "subaccount": "ACCT_pwwualwty4nhq9d",\n        "share": 30\n    }], \n      "bearer_type":"subaccount", \n      "bearer_subaccount":"ACCT_hdl8abxl8drhrl3"\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "name":"Percentage Split", \n  "type":"percentage",\n  "currency": "NGN", \n\t"subaccounts":[{\n    "subaccount": "ACCT_z3x6z3nbo14xsil",\n    "share": 20\n  },\n  {\n      "subaccount": "ACCT_pwwualwty4nhq9d",\n      "share": 30\n  }], \n\t"bearer_type":"subaccount", \n\t"bearer_subaccount":"ACCT_hdl8abxl8drhrl3"\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/split\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',o='<?php\n  $url = "https://api.paystack.co/split";\n\n  $fields = [\n    \'name\' => "Percentage Split", \n    \'type\' => "percentage",\n    \'currency\' => "NGN", \n    \'subaccounts\' => [{\n      "subaccount" => "ACCT_z3x6z3nbo14xsil",\n      "share" => 20\n    },\n    {\n        "subaccount" => "ACCT_pwwualwty4nhq9d",\n        "share" => 30 \n    }], \n    \'bearer_type\' => "subaccount", \n    \'bearer_subaccount\' => "ACCT_hdl8abxl8drhrl3"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Split created",\n  "data": {\n    "id": 142,\n    "name": "Test Doc",\n    "type": "percentage",\n    "currency": "NGN",\n    "integration": 428626,\n    "domain": "test",\n    "split_code": "SPL_e7jnRLtzla",\n    "active": true,\n    "bearer_type": "subaccount",\n    "bearer_subaccount": 40809,\n    "createdAt": "2020-06-30T11:42:29.150Z",\n    "updatedAt": "2020-06-30T11:42:29.150Z",\n    "subaccounts": [\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_z3x6z3nbo14xsil",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "1234567890"\n        },\n        "share": 20\n      },\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_pwwualwty4nhq9d",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "0123456789"\n        },\n        "share": 30\n      }\n    ],\n    "total_subaccounts": 2\n  }\n}'},"Ab4+":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/charge_authorization\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "authorization_code" : "AUTH_pmx3mgawyd", email: "mail@mail.com", amount: "300000" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"authorization_code\" : \"AUTH_pmx3mgawyd\",\n  \"email\" : \"mail@mail.com\",\n  \"amount\" : 300000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/charge_authorization',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/charge_authorization";\n\n  $fields = [\n    \'authorization_code\' => "AUTH_pmx3mgawyd"\n    \'email\' => "mail@mail.com",\n    \'amount\' => "300000"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 300000,\n    "currency": "NGN",\n    "transaction_date": "2020-05-27T11:45:03.000Z",\n    "status": "success",\n    "reference": "cn65lf4ixmkzvda",\n    "domain": "test",\n    "metadata": "",\n    "gateway_response": "Approved",\n    "message": null,\n    "channel": "card",\n    "ip_address": null,\n    "log": null,\n    "fees": 14500,\n    "authorization": {\n      "authorization_code": "AUTH_pmx3mgawyd",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_2Gvc6pNuzJmj4TCchXfp",\n      "account_name": null\n    },\n    "customer": {\n      "id": 23215815,\n      "first_name": null,\n      "last_name": null,\n      "email": "mail@mail.com",\n      "customer_code": "CUS_wt0zmhzb0xqd4nr",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null,\n    "id": 696105928\n  }\n}'},Bbyf:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 697123356,\n    "domain": "live",\n    "status": "success",\n    "reference": "12k81tq3my",\n    "amount": 10000,\n    "message": null,\n    "gateway_response": "Approved",\n    "paid_at": "2020-05-28T13:54:57.000Z",\n    ...\n    "split": {\n      "id": 10,\n      "name": "Example Split",\n      "split_code": "SPL_98WF13Eekw",\n      "formula": {\n        "type": "percentage",\n        "subaccounts": [\n            {\n              "share": 20,\n              "subaccount_code": "ACCT_zpu16k4uhxycmxu",\n              "id": 12850,\n              "name": "Ayobami UBA"\n            }\n        ],\n        "integration": 80\n      },\n      "shares": {\n        "paystack": 140,\n        "subaccounts": [\n          {\n            "amount": 2000,\n            "subaccount_code": "ACCT_zpu16k4uhxycmxu",\n            "id": 12850\n          }\n        ],\n        "integration": 7860\n      }\n    },\n    ...\n  }\n}'},CGoU:function(n,e,t){},CONY:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "message": "Charge attempted",\n  "status": true,\n  "data": {\n    "amount": 100,\n    "channel": "mobile_money",\n    "created_at": "2018-11-17T14:39:56.000Z",\n    "currency": "GHS",\n    "domain": "live",\n      "fees": 153,\n      "gateway_response": "Approved",\n      "id": 59333,\n      "ip_address": "35.177.189.123, 162.158.155.220",\n      "message": "madePayment",\n      "paid_at": "2018-11-17T14:40:18.000Z",\n      "reference": "l7lvu4y3xcka6zu",\n      "status": "success",\n      "transaction_date": "2018-11-17T14:39:56.000Z",\n      "authorization": {\n          "authorization_code": "AUTH_33lz7ev5tq",\n          "bank": "MTN Mobile Money",\n          "bin": "055XXX",\n          "brand": "Mtn mobile money",\n          "channel": "mobile_money",\n          "country_code": "GH",\n          "exp_month": 12,\n          "exp_year": 9999,\n          "last4": "X149",\n          "reusable": false,\n          "account_name": null\n      },\n      "customer": {\n          "customer_code": "CUS_s3aa4mx0yyvrqye",\n          "email": "customer@email.com",\n          "id": 16763,\n          "risk_action": "default"\n      }\n  }\n}'},Cats:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "email": "some@body.nice", \n      "amount":"10000",\n      "ussd": {\n        "type": "737"\n      },\n      "metadata": {\n        "custom_fields":[{\n          "value": "makurdi",\n          "display_name": "Donation for",\n          "variable_name": \n          "donation_for"\n        }]\n      }\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "email": "some@body.nice", \n  "amount":"10000",\n  "ussd": {\n    "type": "737"\n  },\n  "metadata": {\n    "custom_fields":[{\n      "value": "makurdi",\n      "display_name": "Donation for",\n      "variable_name": \n      "donation_for"\n    }]\n  }\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/charge\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',o='<?php\n  $curl = curl_init();\n  curl_setopt_array($curl, array( \n    CURLOPT_URL => "https://api.paystack.co/charge", \n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "", \n    CURLOPT_MAXREDIRS => 10, \n    CURLOPT_TIMEOUT => 30, \n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST", \n    CURLOPT_POSTFIELDS => "{\n      "email": "some@body.nice", \n      "amount":"10000",\n      "ussd": {\n        "type": "737"\n      },\n      "metadata": {\n        "custom_fields":[{\n          "value": "makurdi",\n          "display_name": "Donation for",\n          "variable_name": \n          "donation_for"\n        }]\n      }\n    }",\n    CURLOPT_HTTPHEADER => array( \n      "Authorization: Bearer SECRET_KEY", \n      "Content-Type: application/json"\n    ),\n  ));\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n  curl_close($curl);\n  if ($err) {\n      echo "cURL Error #:" . $err;\n  } else {\n      echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "yjr1r8rwhedara4",\n    "status": "pay_offline",\n    "display_text": "Please dial *737*33*4*18791# on your mobile phone to complete the transaction",\n    "ussd_code": "*737*33*4*18791#"\n  }\n}'},Cj93:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transfer/finalize_transfer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "transfer_code": "TRF_vsyqdmlzble3uii", "otp": "928783" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"transfer_code\": \"TRF_vsyqdmlzble3uii\", \n  \"otp\": \"928783\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/finalize_transfer',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transfer/finalize_transfer";\n\n  $fields = [\n    "transfer_code" => "TRF_vsyqdmlzble3uii", \n    "otp" => "928783"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Transfer has been queued",\n  "data": {\n    "reference": "on5hyz9poe",\n    "integration": 428626,\n    "domain": "test",\n    "amount": 3794800,\n    "currency": "NGN",\n    "source": "balance",\n    "reason": "Holiday Flexing",\n    "recipient": 6788170,\n    "status": "success",\n    "transfer_code": "TRF_vsyqdmlzble3uii",\n    "id": 23070321,\n    "createdAt": "2020-05-13T14:22:49.687Z",\n    "updatedAt": "2020-05-13T14:22:49.687Z"\n  }\n}'},Ck4i:function(n,e,t){var a=t("Q83E"),r=t("2klF");function o(e,t,i){return r()?n.exports=o=Reflect.construct:n.exports=o=function(n,e,t){var r=[null];r.push.apply(r,e);var o=new(Function.bind.apply(n,r));return t&&a(o,t.prototype),o},o.apply(null,arguments)}n.exports=o},DNlv:function(n,e,t){"use strict";var a=t("q1tI"),r=t.n(a),o=t("vOnD").a.ol.withConfig({displayName:"OrderedList__List",componentId:"sc-176wb3i-0"})(["font-size:15px;margin:15px 0;padding:0;list-style:none;counter-reset:item;li{display:flex;align-items:center;position:relative;margin-bottom:6px;counter-increment:item;&:last-child{margin-bottom:0;}}span,a{padding-left:24px;}span a{padding-left:0;}li:before{content:counter(item);width:14px;height:14px;border-radius:50%;border:solid 1px #728F9E14;display:flex;justify-content:center;align-items:center;font-size:11px;line-height:11px;font-weight:500;color:#728F9E;background:#EEF2F5;position:absolute;top:3px;}"]);e.a=function(n){return r.a.createElement(o,null,n.items.map((function(n,e){return r.a.createElement("li",{key:e},n)})))}},DTdE:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  ...\n "authorization": {\n    "authorization_code": "AUTH_0ozsafcpdf",\n    "bin": "413XXX",\n    "last4": "X011",\n    "exp_month": "01",\n    "exp_year": "2020",\n    "channel": "dedicated_nuban",\n    "card_type": "transfer",\n    "bank": "First City Monument Bank",\n    "country_code": "NG",\n    "brand": "Managed Account",\n    "reusable": false,\n    "signature": null,\n    "sender_bank": "First City Monument Bank",\n    "sender_bank_account_number": "XXXXXX0011",\n    "sender_country": "NG",\n    "sender_name": "RANDALL AKANBI HORTON",\n    "narration": "NIP: RHODA CHURCH -1123344343/44343231232",\n    "receiver_bank_account_number": "9930000902",\n    "receiver_bank": "Wema Bank"\n  },\n   ...\n }'},DsVy:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "8nn5fqljd0suybr",\n    "status": "pay_offline",\n    "display_text": "Please complete authorization process on your mobile phone"\n  }\n}'},E1oo:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a}));var a="callback: function(response){\n  $.ajax({\n    url: 'http://www.yoururl.com/verify_transaction?reference='+ response.reference,\n    method: 'get',\n    success: function (response) {\n      // the transaction status is in response.data.status\n    }\n  });\n}"},E2yr:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/charge_authorization\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ authorization_code : "AUTH_12abc345de", email: "mail@mail.com", \n      amount: "300000", split_code: "SPL_UO2vBzEqHW" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"authorization_code\" : \"AUTH_12abc345de\",\n  \"email\" : \"mail@mail.com\",\n  \"amount\" : 300000,\n  \"split_code\" : \"SPL_UO2vBzEqHW\" \n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/charge_authorization',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/charge_authorization";\n\n  $fields = [\n    \'authorization_code\' => "AUTH_12abc345de"\n    \'email\' => "mail@mail.com",\n    \'amount\' => "300000",\n    \'split_code\' => "SPL_UO2vBzEqHW" \n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 300000,\n    "currency": "NGN",\n    "transaction_date": "2020-05-27T11:45:03.000Z",\n    "status": "success",\n    "reference": "cn65lf4ixmkzvda",\n    "domain": "test",\n    "metadata": "",\n    "gateway_response": "Approved",\n    "message": null,\n    "channel": "card",\n    "ip_address": null,\n    "log": null,\n    "fees": 14500,\n    "authorization": {\n      "authorization_code": "AUTH_12abc345de",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_2Gvc6pNuzJmj4TCchXfp",\n      "account_name": null\n    },\n    "customer": {\n      "id": 23215815,\n      "first_name": null,\n      "last_name": null,\n      "email": "mail@mail.com",\n      "customer_code": "CUS_wt0zmhzb0xqd4nr",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null,\n    "id": 696105928\n  }\n}'},E6J7:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 53561,\n    "domain": "live",\n    "status": "success",\n    "reference": "2ofkbk0yie6dvzb",\n    "amount": 150000,\n    "message": "madePayment",\n    "gateway_response": "Payment successful",\n    "paid_at": "2018-06-25T12:42:58.000Z",\n    "created_at": "2018-06-25T12:38:59.000Z",\n    "channel": "ussd",\n    "currency": "NGN",\n    "ip_address": "54.246.237.22, 162.158.38.185, 172.31.15.210",\n    "metadata": "",\n    "log": null,\n    "fees": null,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_4c6mhnmmeusp4yd",\n      "bin": "XXXXXX",\n      "last4": "XXXX",\n      "exp_month": "05",\n      "exp_year": "2018",\n      "channel": "ussd",\n      "card_type": "offline",\n      "bank": "Guaranty Trust Bank",\n      "country_code": "NG",\n      "brand": "offline",\n      "reusable": false,\n      "signature": null,\n      "account_name": null\n    },\n    "customer": {\n      "id": 16200,\n      "first_name": "John",\n      "last_name": "Doe",\n      "email": "customer@email.com",\n      "customer_code": "CUS_bpy9ciomcstg55y",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": {\n      \n    },\n    "subaccount": {\n      \n    },\n    "paidAt": "2018-06-25T12:42:58.000Z"\n  }\n}'},Ei1t:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/plan\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ name: "Monthly Retainer", interval: "monthly", amount: "500000"}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Monthly Retainer\",\n  \"interval\": \"monthly\",\n  \"amount\": 500000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/plan',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/plan",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST",\n    CURLOPT_POSTFIELDS => "{\n      "name": "Monthly Retainer",\n      "interval": "monthly",\n      "amount": 500000\n    }",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache"\n    ),\n  ));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n\n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Plan created",\n  "data": {\n    "name": "Monthly Retainer",\n    "interval": "monthly",\n    "amount": 500000,\n    "integration": 428626,\n    "domain": "test",\n    "currency": "NGN",\n    "plan_code": "PLN_u4cqud8vabi89hx",\n    "invoice_limit": 0,\n    "send_invoices": true,\n    "send_sms": true,\n    "hosted_page": false,\n    "migrate": false,\n    "id": 49122,\n    "createdAt": "2020-05-22T12:36:12.333Z",\n    "updatedAt": "2020-05-22T12:36:12.333Z"\n  }\n}'},G8QR:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000", \n      split_code: "SPL_98WF13Eekw" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"split_code\": \"SPL_98WF13Eekw\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    \'split_code\' => "SPL_98WF13Eekw"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},GUjr:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return o})),t.d(e,"php",(function(){return r})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/dedicated_account/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "account_number": "0033322211", "split_code": "SPL_e7jnRLtzla" }\'\n-X POST',r='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account/split",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS => array("account_number" => "0033322211", "split_code" => "SPL_e7jnRLtzla"),\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SECRET_KEY",\n    "content-type: application/json"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',o="var https = require('follow-redirects').https;\nvar fs = require('fs');\n\nvar options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account/split',\n  'headers': {\n    'authorization': 'Bearer SECRET_KEY',\n    'content-type': 'application/json'\n  },\n  'maxRedirects': 20\n};\n\nvar req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nvar postData = JSON.stringify({\"account_number\":\"0033322211\",\"split_code\":\"SPL_e7jnRLtzla\"});\n\nreq.write(postData);\n\nreq.end();",i='{\n  "status": true,\n  "message": "Subaccount assigned",\n  "data": {\n    "id": 22495,\n    "account_name": "KAROKART/YINKA ADE",\n    "account_number": "0033322211",\n    "assigned": 1,\n    "currency": "NGN",\n    "metadata": null,\n    "active": 1,\n    "last_assignment_id": 525,\n    "createdAt": "2020-03-20T11:03:43.000Z",\n    "updatedAt": "2020-03-20T11:03:43.000Z",\n    "assignment_id": 525,\n    "split_config": {\n      "split_code":"SPL_e7jnRLtzla"\n    }\n  }\n}'},Hr1D:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/verify/:reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/verify/:reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/verify/:reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Verification successful",\n  "data": {\n    "id": 690075529,\n    "domain": "test",\n    "status": "success",\n    "reference": "nms6uvr1pl",\n    "amount": 20000,\n    "message": null,\n    "gateway_response": "Successful",\n    "paid_at": "2020-05-19T12:30:56.000Z",\n    "created_at": "2020-05-19T12:26:44.000Z",\n    "channel": "card",\n    "currency": "NGN",\n    "ip_address": "154.118.28.239",\n    "metadata": "",\n    "log": {\n      "start_time": 1589891451,\n      "time_spent": 6,\n      "attempts": 1,\n      "errors": 0,\n      "success": true,\n      "mobile": false,\n      "input": [],\n      "history": [\n        {\n          "type": "action",\n          "message": "Attempted to pay with card",\n          "time": 5\n        },\n        {\n          "type": "success",\n          "message": "Successfully paid with card",\n          "time": 6\n        }\n      ]\n    },\n    "fees": 300,\n    "fees_split": {\n      "paystack": 300,\n      "integration": 40,\n      "subaccount": 19660,\n      "params": {\n        "bearer": "account",\n        "transaction_charge": "",\n        "percentage_charge": "0.2"\n      }\n    },\n    "authorization": {\n      "authorization_code": "AUTH_xxxxxxxxxx",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_xxxxxxxxxxxxxxx",\n      "account_name": null\n    },\n    "customer": {\n      "id": 24259516,\n      "first_name": null,\n      "last_name": null,\n      "email": "customer@email.com",\n      "customer_code": "CUS_xxxxxxxxxxx",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null,\n    "order_id": null,\n    "paidAt": "2020-05-19T12:30:56.000Z",\n    "createdAt": "2020-05-19T12:26:44.000Z",\n    "requested_amount": 20000,\n    "transaction_date": "2020-05-19T12:26:44.000Z",\n    "plan_object": {},\n    "subaccount": {\n      "id": 37614,\n      "subaccount_code": "ACCT_xxxxxxxxxx",\n      "business_name": "Cheese Sticks",\n      "description": "Cheese Sticks",\n      "primary_contact_name": null,\n      "primary_contact_email": null,\n      "primary_contact_phone": null,\n      "metadata": null,\n      "percentage_charge": 0.2,\n      "settlement_bank": "Guaranty Trust Bank",\n      "account_number": "0123456789"\n    }\n  }\n}'},ITfV:function(n,e,t){"use strict";e.a={plain:{color:"#403f53",backgroundColor:"#FBFBFB"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(72, 118, 214)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(152, 159, 177)",fontStyle:"italic"}},{types:["string","builtin","char","constant","url"],style:{color:"rgb(72, 118, 214)"}},{types:["variable"],style:{color:"rgb(201, 103, 101)"}},{types:["number"],style:{color:"rgb(170, 9, 130)"}},{types:["punctuation"],style:{color:"rgb(153, 76, 195)"}},{types:["function","selector","doctype"],style:{color:"rgb(153, 76, 195)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(17, 17, 17)"}},{types:["tag"],style:{color:"rgb(153, 76, 195)"}},{types:["operator","property","keyword","namespace"],style:{color:"rgb(12, 150, 155)"}},{types:["boolean"],style:{color:"rgb(188, 84, 84)"}}]}},"IVT+":function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,a.createElement("path",{d:"M3.35858 3.60858L0.341421 0.591421C0.215428 0.465428 0.304662 0.25 0.482843 0.25H6.51716C6.69534 0.25 6.78457 0.465428 6.65858 0.591421L3.64142 3.60858C3.56332 3.68668 3.43668 3.68668 3.35858 3.60858Z",fill:"#011B33"}))}r.defaultProps={width:"7",height:"4",viewBox:"0 0 7 4",fill:"none"},n.exports=r,r.default=r},KHDq:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/subaccount\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ business_name: "Cheese Sticks", bank_code: "058", account_number: "0123456789", percentage_charge: 0.2 }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"business_name\": \"Cheese Sticks\",\n  \"bank_code\": \"058\",\n  \"account_number\": \"0123456789\",\n  \"percentage_charge\": 0.2\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subaccount',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/subaccount";\n\n  $fields = [\n    \'business_name\' => "Cheese Sticks",\n    \'bank_code\' => "058",\n    \'account_number\' => "0137472047",\n    \'percentage_charge\' => 0.2\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Subaccount created",\n  "data": {\n    "business_name": "Cheese Sticks",\n    "account_number": "0123456789",\n    "percentage_charge": 0.2,\n    "settlement_bank": "Guaranty Trust Bank",\n    "integration": 428626,\n    "domain": "test",\n    "subaccount_code": "ACCT_xxxxxxxxxxxxx",\n    "is_verified": false,\n    "settlement_schedule": "AUTO",\n    "active": true,\n    "migrate": false,\n    "id": 37614,\n    "createdAt": "2020-05-19T11:54:20.655Z",\n    "updatedAt": "2020-05-19T11:54:20.655Z"\n  }\n}'},KlJW:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "amount": 100,\n  "email": "customer@email.com",\n  "currency": "GHS",\n  "mobile_money": {\n    "phone": "0553241149",\n    "provider": "mtn"\n  }\n}'},LVZP:function(n,e,t){"use strict";t.r(e),t.d(e,"dart",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"kotlin",(function(){return o})),t.d(e,"swift",(function(){return i}));var a="@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    body: WebView(\n      initialUrl: 'https://checkout.paystack.com/7zu1ot06d0qn9h6',\n      javascriptMode: JavascriptMode.unrestricted,\n      userAgent: 'Flutter;Webview',\n      navigationDelegate: (navigation){\n      //Listen for callback URL\n        if(navigation.url == \"https://hello.pstk.xyz/callback\"){\n          verifyTransaction(reference);\n          Navigator.of(context).pop(); //close webview\n        }\n        return NavigationDecision.navigate;\n      },\n    ),\n  );\n}",r="import React from 'react';\nimport { WebView } from 'react-native-webview';\n\n\nexport default function App() {\n\n  const authorization_url = 'https://checkout.paystack.com/luKuasMan';\n  const callback_url = 'https://yourcallback.com';\n\n  onNavigationStateChange = state => {\n \n    const { url } = state;\n\n    if (!url) return;\n\n    if (url === callback_url) {\n\t\t\t// get transaction reference from url and verify transaction, then redirect\n      const redirectTo = 'window.location = \"' + callback_url + '\"';\n      this.webview.injectJavaScript(redirectTo);\n    }\n  };\n\n  return (\n    <WebView \n      source={{ uri: authorization_url }}\n      style={{ marginTop: 40 }}\n      onNavigationStateChange={ this.onNavigationStateChange }\n    />\n  );\n}",o='class MainActivity : AppCompatActivity() {\n\n  private val authorizationUrl: String\n    get() = "https://checkout.paystack.com/ok62i2sdld514e4"\n  private val callbackUrl: String\n    get() = "https://yourcallback.com"\n\n  override fun onCreate(savedInstanceState: Bundle?) {\n    ...\n  }\n\n  @SuppressLint("SetJavaScriptEnabled")\n  private fun loadCheckout() {\n    val webView: WebView = findViewById(R.id.webview)\n    webView.settings.apply {\n      javaScriptEnabled = true\n      javaScriptCanOpenWindowsAutomatically = true\n      domStorageEnabled = true\n    }\n\n    webView.webViewClient = object:  WebViewClient() {\n      override fun shouldOverrideUrlLoading(view: WebView?, request: WebResourceRequest?): Boolean {\n        val url: Uri? = request?.url\n\n        if (url?.host == callbackUrl) {\n          return true\n        }\n        \n        return super.shouldOverrideUrlLoading(view, request)\n      }\n    }\n\n    webView.loadUrl(authorizationUrl)\n  }\n}',i='import WebKit\n\nclass CheckoutViewController: UIViewController, WKNavigationDelegate {\n  \n\t..........\n\t\n\t//This is helper to get url params \n  func getQueryStringParameter(url: String, param: String) -> String? {\n    guard let url = URLComponents(string: url) else { return nil }\n    return url.queryItems?.first(where: { $0.name == param })?.value\n  }\n  \n  // This is a WKNavigationDelegate func we can use to handle redirection\n  func webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, \n    decisionHandler: @escaping ((WKNavigationActionPolicy) -> Void)  {\n\n    if let url = navigationAction.request.url {\n       \n      /*\n\t\t\tWe control here when the user wants to cancel a payment.\n\t\t\tBy default a cancel action redirects to http://cancelurl.com/. \n\t\t\tBased on our workflow we can for example remove the webview or push \n\t\t\tanother view to the user. \n\t\t\t*/\n      if url.absoluteString == "http://cancelurl.com/"{\n        decisionHandler(.cancel)\n      }\n      else{\n        decisionHandler(.allow)\n      }\n      \n\t\t\t//After a successful transaction we can check if the current url is the callback url \n\t\t\t//and do what makes sense for our workflow. We can get the transaction reference for example. \n\n\t    if url.absoluteString.hasPrefix(callbackUrl){\n        let reference = getQueryStringParameter(url: url.absoluteString, param: "reference")\n        print("reference (reference)")\n      }\n    }\n  }\n}'},Ljwo:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n      "reference": "84oow6t0rf715g6",\n      "status": "pending"\n  }\n}'},Medf:function(n,e,t){"use strict";t.r(e),t.d(e,"subscription_created",(function(){return a})),t.d(e,"invoice_updated",(function(){return o})),t.d(e,"transaction_successful",(function(){return i})),t.d(e,"transfer_successful",(function(){return s})),t.d(e,"transfer_failed",(function(){return c})),t.d(e,"transfer_reversed",(function(){return u})),t.d(e,"invoice_failed",(function(){return l})),t.d(e,"invoice_created",(function(){return p})),t.d(e,"customer_id_success",(function(){return h})),t.d(e,"customer_id_failed",(function(){return _})),t.d(e,"payment_request_pending",(function(){return d})),t.d(e,"payment_request_success",(function(){return m})),t.d(e,"charge_dispute_create",(function(){return f})),t.d(e,"charge_dispute_remind",(function(){return y})),t.d(e,"charge_dispute_resolve",(function(){return g})),t.d(e,"subscription_disable",(function(){return r}));var a='{\n  "event": "subscription.create",\n  "data": {\n    "domain": "test",\n    "status": "active",\n    "subscription_code": "SUB_vsyqdmlzble3uii",\n    "amount": 50000,\n    "cron_expression": "0 0 28 * *",\n    "next_payment_date": "2016-05-19T07:00:00.000Z",\n    "open_invoice": null,\n    "createdAt": "2016-03-20T00:23:24.000Z",\n    "plan": {\n      "name": "Monthly retainer",\n      "plan_code": "PLN_gx2wn530m0i3w3m",\n      "description": null,\n      "amount": 50000,\n      "interval": "monthly",\n      "send_invoices": true,\n      "send_sms": true,\n      "currency": "NGN"\n    },\n    "authorization": {\n      "authorization_code": "AUTH_96xphygz",\n      "bin": "539983",\n      "last4": "7357",\n      "exp_month": "10",\n      "exp_year": "2017",\n      "card_type": "MASTERCARD DEBIT",\n      "bank": "GTBANK",\n      "country_code": "NG",\n      "brand": "MASTERCARD",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "first_name": "BoJack",\n      "last_name": "Horseman",\n      "email": "bojack@horsinaround.com",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "phone": "",\n      "metadata": {},\n      "risk_action": "default"\n    },\n    "created_at": "2016-10-01T10:59:59.000Z"\n  }\n}',r='{\n  "event": "subscription.disable",\n  "data": {\n      "domain": "test",\n      "status": "complete",\n      "subscription_code": "SUB_vsyqdmlzble3uii",\n      "email_token": "ctt824k16n34u69",\n      "amount": 300000,\n      "cron_expression": "0 * * * *",\n      "next_payment_date": "2020-11-26T15:00:00.000Z",\n      "open_invoice": null,\n      "plan": {\n          "id": 67572,\n          "name": "Monthly retainer",\n          "plan_code": "PLN_gx2wn530m0i3w3m",\n          "description": null,\n          "amount": 50000,\n          "interval": "monthly",\n          "send_invoices": true,\n          "send_sms": true,\n          "currency": "NGN"\n      },\n      "authorization": {\n        "authorization_code": "AUTH_96xphygz",\n        "bin": "539983",\n        "last4": "7357",\n        "exp_month": "10",\n        "exp_year": "2017",\n        "card_type": "MASTERCARD DEBIT",\n        "bank": "GTBANK",\n        "country_code": "NG",\n        "brand": "MASTERCARD",\n        "account_name": "BoJack Horseman"\n      },\n      "customer": {\n        "first_name": "BoJack",\n        "last_name": "Horseman",\n        "email": "bojack@horsinaround.com",\n        "customer_code": "CUS_xnxdt6s1zg1f4nx",\n        "phone": "",\n        "metadata": {},\n        "risk_action": "default"\n      },\n      "created_at": "2020-11-26T14:45:06.000Z"\n  }\n}',o='{\n  "event": "invoice.update",\n  "data": {\n    "domain": "test",\n    "invoice_code": "INV_kmhuaaur5c9ruh2",\n    "amount": 50000,\n    "period_start": "2016-04-19T07:00:00.000Z",\n    "period_end": "2016-05-19T07:00:00.000Z",\n    "status": "success",\n    "paid": true,\n    "paid_at": "2016-04-19T06:00:09.000Z",\n    "description": null,\n    "authorization": {\n      "authorization_code": "AUTH_jhbldlt1",\n      "bin": "539923",\n      "last4": "2071",\n      "exp_month": "10",\n      "exp_year": "2017",\n      "card_type": "MASTERCARD DEBIT",\n      "bank": "FIRST BANK OF NIGERIA PLC",\n      "country_code": "NG",\n      "brand": "MASTERCARD",\n      "account_name": "BoJack Horseman"\n    },\n    "subscription": {\n      "status": "active",\n      "subscription_code": "SUB_l07i1s6s39nmytr",\n      "amount": 50000,\n      "cron_expression": "0 0 19 * *",\n      "next_payment_date": "2016-05-19T07:00:00.000Z",\n      "open_invoice": null\n    },\n    "customer": {\n      "first_name": "BoJack",\n      "last_name": "Horseman",\n      "email": "bojack@horsinaround.com",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "phone": "",\n      "metadata": {},\n      "risk_action": "default"\n    },\n    "transaction": {\n      "reference": "rdtmivs7zf",\n      "status": "success",\n      "amount": 50000,\n      "currency": "NGN"\n    },\n    "created_at": "2016-04-16T13:45:03.000Z"\n  }\n}',i='{  \n  "event":"charge.success",\n  "data": {  \n    "id":302961,\n    "domain":"live",\n    "status":"success",\n    "reference":"qTPrJoy9Bx",\n    "amount":10000,\n    "message":null,\n    "gateway_response":"Approved by Financial Institution",\n    "paid_at":"2016-09-30T21:10:19.000Z",\n    "created_at":"2016-09-30T21:09:56.000Z",\n    "channel":"card",\n    "currency":"NGN",\n    "ip_address":"41.242.49.37",\n    "metadata":0,\n    "log":{  \n      "time_spent":16,\n      "attempts":1,\n      "authentication":"pin",\n      "errors":0,\n      "success":false,\n      "mobile":false,\n      "input":[],\n      "channel":null,\n      "history":[  \n        {  \n          "type":"input",\n          "message":"Filled these fields: card number, card expiry, card cvv",\n          "time":15\n        },\n        {  \n          "type":"action",\n          "message":"Attempted to pay",\n          "time":15\n        },\n        {  \n          "type":"auth",\n          "message":"Authentication Required: pin",\n          "time":16\n        }\n      ]\n    },\n    "fees":null,\n    "customer":{  \n      "id":68324,\n      "first_name":"BoJack",\n      "last_name":"Horseman",\n      "email":"bojack@horseman.com",\n      "customer_code":"CUS_qo38as2hpsgk2r0",\n      "phone":null,\n      "metadata":null,\n      "risk_action":"default"\n    },\n    "authorization":{  \n      "authorization_code":"AUTH_f5rnfq9p",\n      "bin":"539999",\n      "last4":"8877",\n      "exp_month":"08",\n      "exp_year":"2020",\n      "card_type":"mastercard DEBIT",\n      "bank":"Guaranty Trust Bank",\n      "country_code":"NG",\n      "brand":"mastercard",\n      "account_name": "BoJack Horseman"\n    },\n    "plan":{}\n  } \n}',s='{\n  "event": "transfer.success",\n  "data": {\n    "amount": 30000,\n    "currency": "NGN",\n    "domain": "test",\n    "failures": null,\n    "id": 37272792,\n    "integration": {\n      "id": 463433,\n      "is_live": true,\n      "business_name": "Boom Boom Industries NG"\n    },\n    "reason": "Have fun...",\n    "reference": "1jhbs3ozmen0k7y5efmw",\n    "source": "balance",\n    "source_details": null,\n    "status": "success",\n    "titan_code": null,\n    "transfer_code": "TRF_wpl1dem4967avzm",\n    "transferred_at": null,\n    "recipient": {\n      "active": true,\n      "currency": "NGN",\n      "description": "",\n      "domain": "test",\n      "email": null,\n      "id": 8690817,\n      "integration": 463433,\n      "metadata": null,\n      "name": "Jack Sparrow",\n      "recipient_code": "RCP_a8wkxiychzdzfgs",\n      "type": "nuban",\n      "is_deleted": false,\n      "details": {\n        "account_number": "0000000000",\n        "account_name": null,\n        "bank_code": "011",\n        "bank_name": "First Bank of Nigeria"\n      },\n      "created_at": "2020-09-03T12:11:25.000Z",\n      "updated_at": "2020-09-03T12:11:25.000Z"\n    },\n    "session": { "provider": null, "id": null },\n    "created_at": "2020-10-26T12:28:57.000Z",\n    "updated_at": "2020-10-26T12:28:57.000Z"\n  }\n}\n',c='{\n  "event": "transfer.failed",\n  "data": {\n    "amount": 200000,\n    "currency": "NGN",\n    "domain": "test",\n    "failures": null,\n    "id": 69123462,\n    "integration": {\n      "id": 100043,\n      "is_live": true,\n      "business_name": "Paystack"\n    },\n    "reason": "Enjoy",\n    "reference": "1976435206",\n    "source": "balance",\n    "source_details": null,\n    "status": "failed",\n    "titan_code": null,\n    "transfer_code": "TRF_chs98y5rykjb47w",\n    "transferred_at": null,\n    "recipient": {\n      "active": true,\n      "currency": "NGN",\n      "description": null,\n      "domain": "test",\n      "email": "test@email.com",\n      "id": 13584206,\n      "integration": 100043,\n      "metadata": null,\n      "name": "Ted Lasso",\n      "recipient_code": "RCP_cjcua8itre45gs",\n      "type": "nuban",\n      "is_deleted": false,\n      "details": {\n        "authorization_code": null,\n        "account_number": "0123456789",\n        "account_name": "Ted Lasso",\n        "bank_code": "011",\n        "bank_name": "First Bank of Nigeria"\n      },\n      "created_at": "2021-04-12T15:30:14.000Z",\n      "updated_at": "2021-04-12T15:30:14.000Z"\n    },\n    "session": {\n      "provider": "nip",\n      "id": "74849400998877667"\n    },\n    "created_at": "2021-04-12T15:30:15.000Z",\n    "updated_at": "2021-04-12T15:41:21.000Z"\n  }\n}',u='{\n  "event": "transfer.reversed",\n  "data": {\n    "amount": 10000,\n    "currency": "NGN",\n    "domain": "live",\n    "failures": null,\n    "id": 20615868,\n    "integration": {\n      "id": 100073,\n      "is_live": true,\n      "business_name": "Night\'s Watch Inc"\n    },\n    "reason": "test balance ledger elastic changes",\n    "reference": "jvrjckwenm",\n    "source": "balance",\n    "source_details": null,\n    "status": "reversed",\n    "titan_code": null,\n    "transfer_code": "TRF_js075pj9u07f34l",\n    "transferred_at": "2020-03-24T07:14:00.000Z",\n    "recipient": {\n      "active": true,\n      "currency": "NGN",\n      "description": null,\n      "domain": "live",\n      "email": "jon@sn.ow",\n      "id": 1476759,\n      "integration": 100073,\n      "metadata": null,\n      "name": "JON SNOW",\n      "recipient_code": "RCP_hmcj8ciho490bvi",\n      "type": "nuban",\n      "is_deleted": false,\n      "details": {\n        "authorization_code": null,\n        "account_number": "0000000000",\n        "account_name": null,\n        "bank_code": "011",\n        "bank_name": "First Bank of Nigeria"\n      },\n      "created_at": "2019-04-10T08:39:10.000Z",\n      "updated_at": "2019-11-27T20:43:57.000Z"\n    },\n    "session": {\n      "provider": "nip",\n      "id": "110006200324071331002061586801"\n    },\n    "created_at": "2020-03-24T07:13:31.000Z",\n    "updated_at": "2020-03-24T07:14:55.000Z"\n  }\n}',l='{\n  "event": "invoice.payment_failed",\n  "data": {\n   "domain": "test",\n   "invoice_code": "INV_3kfmqw48ca7b48k",\n   "amount": 10000,\n   "period_start": "2019-03-25T14:00:00.000Z",\n   "period_end": "2019-03-24T23:59:59.000Z",\n   "status": "pending",\n   "paid": false,\n   "paid_at": null,\n   "description": null,\n   "authorization": {\n     "authorization_code": "AUTH_fmmpvpvphp",\n     "bin": "506066",\n     "last4": "6666",\n     "exp_month": "03",\n     "exp_year": "2033",\n     "channel": "card",\n     "card_type": "verve ",\n     "bank": "TEST BANK",\n     "country_code": "NG",\n     "brand": "verve",\n     "reusable": true,\n     "signature": "SIG_bx0C6uIiqFHnoGOxTDWr",\n     "account_name": "BoJack Horseman"\n   },\n   "subscription": {\n     "status": "active",\n     "subscription_code": "SUB_f7ct8g01mtcjf78",\n     "email_token": "gptk4apuohyyjsg",\n     "amount": 10000,\n     "cron_expression": "0 * * * *",\n     "next_payment_date": "2019-03-25T00:00:00.000Z",\n     "open_invoice": "INV_3kfmqw48ca7b48k"\n   },\n   "customer": {\n     "id": 6910995,\n     "first_name": null,\n     "last_name": null,\n     "email": "xxx@gmail.com",\n     "customer_code": "CUS_3p3ylxyf07605kx",\n     "phone": null,\n     "metadata": null,\n     "risk_action": "default"\n   },\n   "transaction": {},\n   "created_at": "2019-03-25T14:00:03.000Z"\n  }\n}',p='{\n  "event": "invoice.create",\n  "data": {\n    "domain": "test",\n    "invoice_code": "INV_thy2vkmirn2urwv",\n    "amount": 50000,\n    "period_start": "2018-12-20T15:00:00.000Z",\n    "period_end": "2018-12-19T23:59:59.000Z",\n    "status": "success",\n    "paid": true,\n    "paid_at": "2018-12-20T15:00:06.000Z",\n    "description": null,\n    "authorization": {\n      "authorization_code": "AUTH_9246d0h9kl",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_iCw3p0rsG7LUiQwlsR3t",\n      "account_name": "BoJack Horseman"\n    },\n    "subscription": {\n      "status": "active",\n      "subscription_code": "SUB_fq7dbe8tju0i1v8",\n      "email_token": "3a1h7bcu8zxhm8k",\n      "amount": 50000,\n      "cron_expression": "0 * * * *",\n      "next_payment_date": "2018-12-20T00:00:00.000Z",\n      "open_invoice": null\n    },\n    "customer": {\n      "id": 46,\n      "first_name": "Asample",\n      "last_name": "Personpaying",\n      "email": "asam@ple.com",\n      "customer_code": "CUS_00w4ath3e2ukno4",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "transaction": {\n      "reference": "9cfbae6e-bbf3-5b41-8aef-d72c1a17650g",\n      "status": "success",\n      "amount": 50000,\n      "currency": "NGN"\n    },\n    "created_at": "2018-12-20T15:00:02.000Z"\n  }\n}',d='{\n  "event": "paymentrequest.pending",\n  "data": {\n    "id": 1089700,\n    "domain": "test",\n    "amount": 10000000,\n    "currency": "NGN",\n    "due_date": null,\n    "has_invoice": false,\n    "invoice_number": null,\n    "description": "Pay up",\n    "pdf_url": null,\n    "line_items": [],\n    "tax": [],\n    "request_code": "PRQ_y0paeo93jh99mho",\n    "status": "pending",\n    "paid": false,\n    "paid_at": null,\n    "metadata": null,\n    "notifications": [],\n    "offline_reference": "3365451089700",\n    "customer": 7454223,\n    "created_at": "2019-06-21T15:25:42.000Z"\n  }\n}',m='{\n  "event": "paymentrequest.success",\n  "data": {\n    "id": 1089700,\n    "domain": "test",\n    "amount": 10000000,\n    "currency": "NGN",\n    "due_date": null,\n    "has_invoice": false,\n    "invoice_number": null,\n    "description": "Pay up now",\n    "pdf_url": null,\n    "line_items": [],\n    "tax": [],\n    "request_code": "PRQ_y0paeo93jh99mho",\n    "status": "success",\n    "paid": true,\n    "paid_at": "2019-06-21T15:26:10.000Z",\n    "metadata": null,\n    "notifications": [\n      {\n        "sent_at": "2019-06-21T15:25:42.452Z",\n        "channel": "email"\n      }\n    ],\n    "offline_reference": "3365451089700",\n    "customer": 7454223,\n    "created_at": "2019-06-21T15:25:42.000Z"\n  }\n}',h='{\n  "event": "customeridentification.success",\n  "data": {\n    "customer_id": "9387490384",\n    "customer_code": "CUS_xnxdt6s1zg1f4nx",\n    "email": "bojack@horsinaround.com",\n    "identification": {\n      "country": "NG",\n      "type": "bvn",\n      "value": "200*****677"\n    }\n  }\n}',_='{\n  "event": "customeridentification.failed",\n  "data": {\n    "customer_id": "9387490384",\n    "customer_code": "CUS_xnxdt6s1zg1f4nx",\n    "email": "bojack@horsinaround.com",\n    "identification": {\n      "country": "NG",\n      "type": "bvn",\n      "value": "200*****677" \n    }\n  }',f='{\n    "event":"charge.dispute.create",\n    "data":{\n       "id":358950,\n       "refund_amount":5800,\n       "currency":"NGN",\n       "status":"awaiting-merchant-feedback",\n       "resolution":null,\n       "domain":"live",\n       "transaction":{\n          "id":896467688,\n          "domain":"live",\n          "status":"success",\n          "reference":"v3mjfgbnc19v97x",\n          "amount":5800,\n          "message":null,\n          "gateway_response":"Approved",\n          "paid_at":"2020-11-24T13:45:57.000Z",\n          "created_at":"2020-11-24T13:45:57.000Z",\n          "channel":"card",\n          "currency":"NGN",\n          "ip_address":null,\n          "metadata":"",\n          "log":null,\n          "fees":53,\n          "fees_split":null,\n          "authorization":{},\n          "customer":{\n             "international_format_phone":null\n          },\n          "plan":{},\n          "subaccount":{},\n          "split":{},\n          "order_id":null,\n          "paidAt":"2020-11-24T13:45:57.000Z",\n          "requested_amount":5800,\n          "pos_transaction_data":null\n       },\n       "transaction_reference":null,\n       "category":"chargeback",\n       "customer":{\n          "id":5406463,\n          "first_name":"John",\n          "last_name":"Doe",\n          "email":"example@paystack.com",\n          "customer_code":"CUS_6wbxh6689vt0n7s",\n          "phone":"08000000000",\n          "metadata":{},\n          "risk_action":"allow",\n          "international_format_phone":null\n       },\n       "bin":"123456",\n       "last4":"1234",\n       "dueAt":"2020-11-25T18:00:00.000Z",\n       "resolvedAt":null,\n       "evidence":null,\n       "attachments":null,\n       "note":null,\n       "history":[\n          {\n             "status":"pending",\n             "by":"example@paystack.com",\n             "createdAt":"2020-11-24T13:46:57.000Z"\n          }\n       ],\n       "messages":[\n          {\n             "sender":"example@paystack.com",\n             "body":"Customer complained about debit without value",\n             "createdAt":"2020-11-24T13:46:57.000Z"\n          }\n       ],\n       "created_at":"2020-11-24T13:46:57.000Z",\n       "updated_at":"2020-11-24T18:00:02.000Z"\n    }\n }',y='{\n  "event":"charge.dispute.remind",\n  "data":{\n     "id":358950,\n     "refund_amount":5800,\n     "currency":"NGN",\n     "status":"awaiting-merchant-feedback",\n     "resolution":null,\n     "domain":"live",\n     "transaction":{\n        "id":896467688,\n        "domain":"live",\n        "status":"success",\n        "reference":"v3mjfgbnc19v97x",\n        "amount":5800,\n        "message":null,\n        "gateway_response":"Approved",\n        "paid_at":"2020-11-24T13:45:57.000Z",\n        "created_at":"2020-11-24T13:45:57.000Z",\n        "channel":"card",\n        "currency":"NGN",\n        "ip_address":null,\n        "metadata":"",\n        "log":null,\n        "fees":53,\n        "fees_split":null,\n        "authorization":{},\n        "customer":{\n           "international_format_phone":null\n        },\n        "plan":{},\n        "subaccount":{},\n        "split":{},\n        "order_id":null,\n        "paidAt":"2020-11-24T13:45:57.000Z",\n        "requested_amount":5800,\n        "pos_transaction_data":null\n     },\n     "transaction_reference":null,\n     "category":"chargeback",\n     "customer":{\n        "id":5406463,\n        "first_name":"John",\n        "last_name":"Doe",\n        "email":"example@paystack.com",\n        "customer_code":"CUS_6wbxh6689vt0n7s",\n        "phone":"08000000000",\n        "metadata":{},\n        "risk_action":"allow",\n        "international_format_phone":null\n     },\n     "bin":"123456",\n     "last4":"1234",\n     "dueAt":"2020-11-25T18:00:00.000Z",\n     "resolvedAt":null,\n     "evidence":null,\n     "attachments":null,\n     "note":null,\n     "history":[\n        {\n           "status":"pending",\n           "by":"example@paystack.com",\n           "createdAt":"2020-11-24T13:46:57.000Z"\n        }\n     ],\n     "messages":[\n        {\n           "sender":"example@paystack.com",\n           "body":"Customer complained about debit without value",\n           "createdAt":"2020-11-24T13:46:57.000Z"\n        }\n     ],\n     "created_at":"2020-11-24T13:46:57.000Z",\n     "updated_at":"2020-11-24T18:00:02.000Z"\n  }\n}',g='{\n  "event":"charge.dispute.resolve",\n  "data":{\n     "id":358949,\n     "refund_amount":5700,\n     "currency":"NGN",\n     "status":"resolved",\n     "resolution":"auto-accepted",\n     "domain":"live",\n     "transaction":{\n        "id":896467592,\n        "domain":"live",\n        "status":"reversed",\n        "reference":"5qm4pv2mxs9rltp",\n        "amount":5700,\n        "message":null,\n        "gateway_response":"Approved",\n        "paid_at":"2020-11-24T13:45:53.000Z",\n        "created_at":"2020-11-24T13:45:52.000Z",\n        "channel":"card",\n        "currency":"NGN",\n        "ip_address":null,\n        "metadata":"",\n        "log":null,\n        "fees":52,\n        "fees_split":null,\n        "authorization":{},\n        "customer":{\n           "international_format_phone":null\n        },\n        "plan":{},\n        "subaccount":{},\n        "split":{},\n        "order_id":null,\n        "paidAt":"2020-11-24T13:45:53.000Z",\n        "requested_amount":5700,\n        "pos_transaction_data":null\n     },\n     "transaction_reference":null,\n     "category":"chargeback",\n     "customer":{\n        "id":5406463,\n        "first_name":"John",\n        "last_name":"Doe",\n        "email":"john@example.com",\n        "customer_code":"CUS_6wbxh6689vt0n7s",\n        "phone":"0800000000",\n        "metadata":{},\n        "risk_action":"allow",\n        "international_format_phone":null\n     },\n     "bin":"123456",\n     "last4":"1234",\n     "dueAt":"2020-11-24T14:00:00.000Z",\n     "resolvedAt":"2020-11-24T14:00:02.000Z",\n     "evidence":null,\n     "attachments":null,\n     "note":null,\n     "history":[\n        {\n           "status":"pending",\n           "by":"example@paystack.com",\n           "createdAt":"2020-11-24T13:46:36.000Z"\n        }\n     ],\n     "messages":[\n        {\n           "sender":"example@paystack.com",\n           "body":"Customer complained about debit without value",\n           "createdAt":"2020-11-24T13:46:36.000Z"\n        }\n     ],\n     "created_at":"2020-11-24T13:46:36.000Z",\n     "updated_at":"2020-11-24T14:00:02.000Z"\n  }\n}'},"N+Dt":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return o})),t.d(e,"php",(function(){return r}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "amount": 100,\n      "email": "customer@email.com",\n      "currency": "GHS",\n      "mobile_money": {\n        "phone" : "0551234987",\n        "provider" : "mtn"\n      }\n    }\'\n-X POST',r='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/charge",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS => "{\n    "amount": 100,\n    "email": "customer@email.com",\n    "currency": "GHS",\n    "mobile_money": {\n      "phone" : "0551234987",\n      "provider" : "mtn"\n    }\n  }",\n  CURLOPT_HTTPHEADER => array(\n    "Authorization: Bearer SECRET_KEY",\n    "Content-Type: application/json"\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo "cURL Error #:" . $err;\n} else {\n  echo $response;\n}',o="const https = require('https')\n\nconst params = JSON.stringify({\n  \"amount\": 100,\n  \"email\": \"customer@email.com\",\n  \"currency\": \"GHS\",\n  \"mobile_money\": { \n    \"phone\": \"0551234987\", \n    \"provider\": \"mtn\"\n  } \n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()"},ORvQ:function(n,e,t){"use strict";t.r(e);var a=t("q1tI"),r=t.n(a),o=t("Wbzz"),i=t("A2+M"),s=t("7ljp"),c=t("vrFN"),u=t("yBb5"),l=t("fgGv"),p=t("vOnD"),d=p.a.a.withConfig({displayName:"ApiLink__Link",componentId:"sc-17cl75h-0"})(["text-transform:capitalize;sup{font-weight:500;font-size:9px;line-height:10px;color:#09A5DB;border:1px solid #DCF6FF;border-radius:2px;padding:2px 2px 1px;margin-left:2px;}"]),m=function(n){return r.a.createElement(d,{href:"https://paystack.com/docs/api#"+n.path,target:"_blank",rel:"noopener noreferrer"},n.title,r.a.createElement("sup",null,"API"))},h=(t("nvhb"),function(n){return r.a.createElement(o.Link,{className:"card",to:n.header.route},r.a.createElement("div",{className:"card__header"},r.a.createElement("h4",null,n.header.title)),r.a.createElement("div",{className:"card__description"},r.a.createElement("p",{className:"card__description__text"},n.description)))}),_=t("vJUD"),f=t("vMde"),y=t.n(f),g=p.a.div.withConfig({displayName:"TestCard__Container",componentId:"plt5b6-0"})(["position:relative;color:#ffffff;border:1px solid #0000000f;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-radius:12px;padding:25px 20px;background-color:#1A3147;background-image:url(",");"],y.a),T=p.a.div.withConfig({displayName:"TestCard__Prompt",componentId:"plt5b6-1"})(["position:absolute;top:-14px;left:0;right:0;width:100px;text-align:center;margin:auto;display:inline-block;padding:2px 12px;box-shadow:0px 2px 8px rgba(0,0,0,0.2);border-radius:16px;background:#fff;color:#1A3147;"]),b=p.a.div.withConfig({displayName:"TestCard__Header",componentId:"plt5b6-2"})(["margin-bottom:24px;padding:0 4px;span.card_subtitle{margin-left:6px;color:#F6FCFF;opacity:0.6;}"]),C=p.a.div.withConfig({displayName:"TestCard__Pan",componentId:"plt5b6-3"})(["margin-bottom:18px;padding:4px 6px;display:inline-block;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}p{display:inline-block;font-family:Roboto Mono;font-style:normal;font-weight:normal;font-size:20px;line-height:20px;color:#DCF6FF;margin-top:3px;}"]),E=p.a.div.withConfig({displayName:"TestCard__Misc",componentId:"plt5b6-4"})(["display:flex;font-family:Roboto Mono;font-style:normal;font-weight:normal;div{display:flex;flex-direction:column;margin-right:24px;span:first-child{font-size:10px;line-height:12px;letter-spacing:0.5px;color:#F6FCFF;text-transform:uppercase;margin-bottom:6px;padding:0 4px;}span:last-child{font-size:15px;line-height:18px;color:#DCF6FF;padding:4px 6px;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}}}"]),x=function(n){var e=Object(a.useState)(!1),t=e[0],o=e[1],i=Object(a.useState)("Click to copy"),s=i[0],c=i[1],u=""+((new Date).getMonth()+1),l=((new Date).getFullYear()+1).toString().substring(2),p=(u.length<2?"0"+u:u)+"/"+l,d=function(n){var e=n.target;navigator.clipboard.writeText(e.textContent.replace(/\s/g,"")).then((function(){m()}),(function(n){console.error("Could not copy text: ",n)}))},m=function(){o(!0),c("Copied"),setTimeout((function(){o(!1),c("Click to copy")}),600)};return r.a.createElement(g,null,t?r.a.createElement(T,null,s):"",r.a.createElement(b,null,r.a.createElement("span",null,n.title),n.subtitle?r.a.createElement("span",{className:"card_subtitle"},n.subtitle):""),r.a.createElement(C,null,r.a.createElement("p",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.pan)),r.a.createElement(E,null,r.a.createElement("div",null,r.a.createElement("span",null,"Expiry"),r.a.createElement("span",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},p)),r.a.createElement("div",null,r.a.createElement("span",null,"CVV"),r.a.createElement("span",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.cvv)),n.pin?r.a.createElement("div",null,r.a.createElement("span",null,"Pin"),r.a.createElement("span",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.pin)):"",n.otp?r.a.createElement("div",null,r.a.createElement("span",null,"OTP"),r.a.createElement("span",{onClick:function(n){return d(n)}},n.otp)):""))},v=p.a.div.withConfig({displayName:"TestAccount__Container",componentId:"sc-8hcnkm-0"})(["position:relative;color:#ffffff;border:1px solid #0000000f;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-radius:12px;padding:25px 20px;background-color:#1A3147;background-image:url(",");"],y.a),R=p.a.div.withConfig({displayName:"TestAccount__Prompt",componentId:"sc-8hcnkm-1"})(["position:absolute;top:-14px;left:0;right:0;width:100px;text-align:center;margin:auto;display:inline-block;padding:2px 12px;box-shadow:0px 2px 8px rgba(0,0,0,0.2);border-radius:16px;background:#fff;color:#1A3147;"]),k=p.a.div.withConfig({displayName:"TestAccount__Header",componentId:"sc-8hcnkm-2"})(["margin-bottom:24px;padding:0 4px;span.card_subtitle{margin-left:6px;color:#F6FCFF;opacity:0.6;}"]),S=p.a.div.withConfig({displayName:"TestAccount__Pan",componentId:"sc-8hcnkm-3"})(["margin-bottom:18px;padding:4px 6px;display:inline-block;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}p{display:inline-block;font-family:Roboto Mono;font-style:normal;font-weight:normal;font-size:20px;line-height:20px;color:#DCF6FF;margin-top:3px;}"]),O=p.a.div.withConfig({displayName:"TestAccount__Misc",componentId:"sc-8hcnkm-4"})(["display:flex;font-family:Roboto Mono;font-style:normal;font-weight:normal;div{display:flex;flex-direction:column;margin-right:24px;span:first-child{font-size:10px;line-height:12px;letter-spacing:0.5px;color:#F6FCFF;text-transform:uppercase;margin-bottom:6px;padding:0 4px;}span:last-child{font-size:15px;line-height:18px;color:#DCF6FF;padding:4px 6px;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}}}"]),P=function(n){var e=Object(a.useState)(!1),t=e[0],o=e[1],i=Object(a.useState)("Click to copy"),s=i[0],c=i[1],u=Object(a.useState)("1999-04-20"),l=u[0],p=u[1],d=function(n){var e=n.target;navigator.clipboard.writeText(e.textContent.replace(/\s/g,"")).then((function(){m()}),(function(n){console.error("Could not copy text: ",n)}))},m=function(){o(!0),c("Copied"),setTimeout((function(){o(!1),c("Click to copy")}),600)};return Object(a.useEffect)((function(){p(new Date((new Date).setFullYear((new Date).getFullYear()-parseInt(12*Math.random()+18))).toISOString().substring(0,10))}),[]),r.a.createElement(v,null,t?r.a.createElement(R,null,s):"",r.a.createElement(k,null,r.a.createElement("span",null,n.title),n.subtitle?r.a.createElement("span",{className:"card_subtitle"},n.subtitle):""),r.a.createElement(S,null,r.a.createElement("p",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.pan)),r.a.createElement(O,null,n.birthday?r.a.createElement("div",null,r.a.createElement("span",null,"Birthday"),r.a.createElement("span",{onClick:function(n){return d(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},l)):"",n.otp?r.a.createElement("div",null,r.a.createElement("span",null,"OTP"),r.a.createElement("span",{onClick:function(n){return d(n)}},n.otp)):"",n.code?r.a.createElement("div",null,r.a.createElement("span",null,"Code"),r.a.createElement("span",{onClick:function(n){return d(n)}},n.code)):"",n.pay_id?r.a.createElement("div",null,r.a.createElement("span",null,"Pay ID"),r.a.createElement("span",{onClick:function(n){return d(n)}},n.pay_id)):""))},U=p.a.div.withConfig({displayName:"TestMoMo__Container",componentId:"sc-1ssjpth-0"})(["position:relative;color:#ffffff;border:1px solid #0000000f;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-radius:12px;padding:25px 20px;background-color:#1A3147;background-image:url(",");"],y.a),w=p.a.div.withConfig({displayName:"TestMoMo__Prompt",componentId:"sc-1ssjpth-1"})(["position:absolute;top:-14px;left:0;right:0;width:100px;text-align:center;margin:auto;display:inline-block;padding:2px 12px;box-shadow:0px 2px 8px rgba(0,0,0,0.2);border-radius:16px;background:#fff;color:#1A3147;"]),N=p.a.div.withConfig({displayName:"TestMoMo__Header",componentId:"sc-1ssjpth-2"})(["margin-bottom:24px;padding:0 4px;span.card_subtitle{margin-left:6px;color:#F6FCFF;opacity:0.6;}"]),L=p.a.div.withConfig({displayName:"TestMoMo__Pan",componentId:"sc-1ssjpth-3"})(["margin-bottom:18px;padding:4px 6px;display:inline-block;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}p{display:inline-block;font-family:Roboto Mono;font-style:normal;font-weight:normal;font-size:20px;line-height:20px;color:#DCF6FF;margin-top:3px;}"]),A=p.a.div.withConfig({displayName:"TestMoMo__Misc",componentId:"sc-1ssjpth-4"})(["display:flex;font-family:Roboto Mono;font-style:normal;font-weight:normal;div{display:flex;flex-direction:column;margin-right:24px;span:first-child{font-size:10px;line-height:12px;letter-spacing:0.5px;color:#F6FCFF;text-transform:uppercase;margin-bottom:6px;padding:0 4px;}span:last-child{font-size:15px;line-height:18px;color:#DCF6FF;padding:4px 6px;&:hover{background:#011B33;opacity:0.2;border-radius:4px;cursor:pointer;}}}"]),$=function(n){var e=Object(a.useState)(!1),t=e[0],o=e[1],i=Object(a.useState)("Click to copy"),s=i[0],c=i[1],u=function(n){var e=n.target;navigator.clipboard.writeText(e.textContent.replace(/\s/g,"")).then((function(){l()}),(function(n){console.error("Could not copy text: ",n)}))},l=function(){o(!0),c("Copied"),setTimeout((function(){o(!1),c("Click to copy")}),600)};return r.a.createElement(U,null,t?r.a.createElement(w,null,s):"",r.a.createElement(N,null,r.a.createElement("span",null,n.title),n.subtitle?r.a.createElement("span",{className:"card_subtitle"},n.subtitle):""),r.a.createElement(L,null,r.a.createElement("p",{onClick:function(n){return u(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.number)),r.a.createElement(A,null,r.a.createElement("div",null,r.a.createElement("span",null,"Network"),r.a.createElement("span",{onClick:function(n){return u(n)},onMouseEnter:function(){return o(!0)},onMouseLeave:function(){return o(!1)}},n.network))))},j=t("LK1h"),z=t.n(j),q=p.a.ul.withConfig({displayName:"CardLinks__Links",componentId:"sc-1hm3o01-0"})(["list-style:none;padding-inline-start:0;margin-bottom:0;li{padding-bottom:4px;span{margin-right:4px;svg{width:10px;height:10px;}}&:last-of-type{padding-bottom:0;}a{font-size:14px;font-weight:500;color:#5e6469;cursor:pointer;text-decoration:none;&:hover{color:#09a5db;}}}"]),I=function(n){return r.a.createElement("div",{className:"card"},r.a.createElement("div",{className:"card__header"},r.a.createElement("h5",null,n.title)),r.a.createElement("div",{className:"card__footer"},r.a.createElement(q,null,n.apis.map((function(n,e){return r.a.createElement("li",{key:e},r.a.createElement("span",null," ",r.a.createElement(z.a,null)," "),n.external?r.a.createElement("a",{href:n.route,target:"_blank",rel:"noopener noreferrer"},n.title):r.a.createElement(o.Link,{to:n.route},n.title))})))))},H=t("vt5w"),B=t.n(H),D=t("ly9y"),F=t.n(D),M=p.a.div.withConfig({displayName:"RepoCard__Card",componentId:"sc-1239c0s-0"})(["background:#ffffff;border:1px solid #0000000f;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-radius:6px;padding:20px;color:#011b33;"]),Y=p.a.div.withConfig({displayName:"RepoCard__Header",componentId:"sc-1239c0s-1"})(["margin-bottom:8px;h5{font-size:15px;}a{transition:0.3s ease-in color;}"]),K=p.a.div.withConfig({displayName:"RepoCard__Body",componentId:"sc-1239c0s-2"})(["display:flex;margin-top:8px;align-items:center;.icon{vertical-align:middle;margin-right:5px;margin-bottom:2px;}.link{text-decoration:none;color:#09a5db;font-weight:500;font-size:14px;line-height:18px;display:-webkit-box;-webkit-box-orient:vertical;-webkit-line-clamp:1;overflow:hidden;}"]),V=function(n){var e={github:r.a.createElement(B.a,{className:"icon"}),general:r.a.createElement(F.a,{className:"icon"})};return r.a.createElement(M,null,r.a.createElement(Y,null,r.a.createElement("h5",null,n.title)),r.a.createElement(K,null,r.a.createElement("span",null,e[n.type]),r.a.createElement("span",null,r.a.createElement("a",{className:"link",href:n.baseUrl+n.path,target:"_blank",rel:"noopener noreferrer"},n.path?n.path:n.title.toLowerCase()))))},G=t("ABvw"),Z=t("DNlv"),J=t("vCUy"),X=(t("8Xsp"),t("eckp")),W=t.n(X),Q=function(n){var e=n.library,t=n.author;return r.a.createElement("div",{className:"community-library"},r.a.createElement("div",{className:"community-library__name"},r.a.createElement("a",{href:e.link,target:"_blank",rel:"noopener noreferrer"},e.name)),r.a.createElement("div",{className:"community-library__author"},r.a.createElement("a",{className:"",href:t.link,target:"_blank",rel:"noopener noreferrer"},r.a.createElement(W.a,null),r.a.createElement("span",null,t.name))))},nn=p.a.ul.withConfig({displayName:"TabLinks__TabLink",componentId:"s94qtn-0"})(["margin:0px;padding:0px;list-style:none;margin-bottom:16px;border-bottom:1px solid rgba(238,242,245,0.6);padding:8px 16px 0px;"]),en=p.a.li.withConfig({displayName:"TabLinks__Tag",componentId:"s94qtn-1"})(["color:#011B33;display:inline-block;padding:8px 0;font-weight:500;font-size:14px;"]),tn=p.a.li.withConfig({displayName:"TabLinks__Link",componentId:"s94qtn-2"})(["color:#011B33;opacity:0.4;display:inline-block;padding:8px 16px;cursor:pointer;font-weight:500;font-size:14px;transition:0.2s ease color;&.active{color:#011b33;opacity:1;border-bottom:2px solid #09A5DB;margin-bottom:-1px;}&:hover{color:#011b33;opacity:1;}"]),an=function(n){var e=n.links,t=n.language,a=n.onTabClick;return r.a.createElement(nn,null,Object.keys(e).map((function(n){return 1===Object.keys(e).length?r.a.createElement(en,{key:n},e[n]):r.a.createElement(tn,{key:n,className:t===n?"active":"",onClick:function(){return a(n)}},e[n])})))},rn=t("8yAE"),on=p.a.div.withConfig({displayName:"Tabs__Tab",componentId:"hifb2h-0"})(["margin:30px 0;background:#FFFFFF;border:1px solid #0000000f;border-radius:12px;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);"]),sn=function(n){var e=n.links,o=n.filepath,i=t("6Zpt")("./snippets"+o),s=Object(a.useState)(Object.keys(e)[0]),c=s[0],u=s[1],l=Object(a.useState)(i[c]),p=l[0],d=l[1];return r.a.createElement(on,null,r.a.createElement(an,{links:e,language:c,onTabClick:function(n){u(n),d(i[n])}}),r.a.createElement(rn.a,{language:c,codeString:p}))},cn=p.a.ul.withConfig({displayName:"TabLinksMulti__TabLink",componentId:"g3zl2x-0"})(["white-space:nowrap;overflow:auto;margin:0px;list-style:none;margin-bottom:16px;border-bottom:1px solid rgba(238,242,245,0.6);padding:8px 16px 0px;"]),un=p.a.li.withConfig({displayName:"TabLinksMulti__Tag",componentId:"g3zl2x-1"})(["color:#011B33;display:inline-block;padding:8px 0;font-weight:500;font-size:14px;"]),ln=p.a.li.withConfig({displayName:"TabLinksMulti__Link",componentId:"g3zl2x-2"})(["color:#011B33;opacity:0.4;display:inline-block;position:relative;padding:8px 16px;cursor:pointer;font-weight:500;font-size:14px;transition:0.2s ease color;&.active{color:#011b33;opacity:1;border-bottom:2px solid #09A5DB;}&:hover{color:#011b33;opacity:1;}"]),pn=function(n){var e=n.links,t=n.tag,a=n.onTabClick;return r.a.createElement(cn,null,Object.keys(e).map((function(n){return 1===Object.keys(e).length?r.a.createElement(un,{key:n},e[n]):r.a.createElement(ln,{key:n,className:t===n?"active":"",onClick:function(){return a(n)}},e[n])})))},dn=p.a.div.withConfig({displayName:"TabsMulti__Tab",componentId:"k5cfq-0"})(["margin:30px 0;background:#FFFFFF;border:1px solid #0000000f;border-radius:12px;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);"]),mn=function(n){var e=n.language,o=n.links,i=n.filepath,s=t("6Zpt")("./snippets"+i),c=Object(a.useState)(Object.keys(o)[0]),u=c[0],l=c[1],p=Object(a.useState)(s[u]),d=p[0],m=p[1];return r.a.createElement(dn,null,r.a.createElement(pn,{links:o,tag:u,onTabClick:function(n){l(n),m(s[n])}}),r.a.createElement(rn.a,{language:e,codeString:d}))},hn=t("IVT+"),_n=t.n(hn),fn=p.a.div.withConfig({displayName:"Header__Container",componentId:"sc-162wlvq-0"})(["display:flex;justify-content:space-between;padding:16px 16px 0px;"]),yn=p.a.div.withConfig({displayName:"Header__Dropdown",componentId:"sc-162wlvq-1"})(["display:flex;align-items:center;background:#EEF2F5;border:1px solid #011b330f;border-radius:6px;position:relative;select{font-size:12px;font-weight:500;color:#011B33;-webkit-appearance:none;border:none;background:transparent;outline:none;padding:4px 8px}span{position:relative;right:4px;svg{width:8px;height:8px;}}"]),gn=p.a.div.withConfig({displayName:"Header__SwitchContainer",componentId:"sc-162wlvq-2"})(["display:flex;align-items:center;.slider-text{font-weight:500;font-size:14px;color:#728F9E;margin-right:8px;}"]),Tn=p.a.label.withConfig({displayName:"Header__Switch",componentId:"sc-162wlvq-3"})(['position:relative;display:inline-block;width:28px;height:16px;.slider{position:absolute;cursor:pointer;top:0;left:0;right:0;bottom:0;background:rgba(130,130,130,0.15);border:0.9px solid #F9FBFC;border-radius:10px;-webkit-transition:.2s ease-out;transition:.2s ease-out;&:before{position:absolute;content:"";height:10px;width:10px;top:2px;left:3px;border-radius:50%;background-color:white;-webkit-transition:.2s ease-out;transition:.2s ease-out;}}input{opacity:0;width:0;height:0;}input:checked + .slider{background-color:#22D34B;}input:focus + .slider{box-shadow:0 0 1px #22D34B;}input:checked + .slider:before{-webkit-transform:translateX(10px);-ms-transform:translateX(10px);transform:translateX(10px);}']),bn=function(n){var e=n.links,t=n.slider,o=n.toggle,i=n.toggleSlider,s=n.changeLanguage,c=Object(a.useState)(Object.keys(e)[0]),u=c[0],l=c[1];return r.a.createElement(fn,null,r.a.createElement(yn,null,r.a.createElement("select",{onChange:function(n){var t,a,r=n.target.value;l(r),s((t=e,a=r,Object.keys(t).find((function(n){return t[n]===a}))))},value:u},Object.keys(e).map((function(n){if("json"!==n)return r.a.createElement("option",{key:n},e[n])}))),r.a.createElement("span",null,r.a.createElement(_n.a,null))),"false"!==o&&r.a.createElement(gn,null,r.a.createElement("span",{className:"slider-text"},t?"Hide":"Show"," Response"),r.a.createElement(Tn,null,r.a.createElement("input",{type:"checkbox",onChange:i}),r.a.createElement("span",{className:"slider"}))))},Cn=t("3Mpw"),En=t("eHPy"),xn=t("ITfV"),vn={dark:En.a,light:xn.a},Rn=p.a.div.withConfig({displayName:"CodeSnippet__Container",componentId:"sc-8020c-0"})(["padding:0px 16px;"]),kn=p.a.pre.withConfig({displayName:"CodeSnippet__Pre",componentId:"sc-8020c-1"})(["position:relative;text-align:left;margin:1em 0;padding:24px 16px;margin:16px 0;overflow-x:auto;border:1px solid #EEF2F5;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-radius:6px;background-color:",";max-height:300px;& .token-line{line-height:1.5;}"],(function(n){return n.dark?"#31485F":"#FFF"})),Sn=p.a.span.withConfig({displayName:"CodeSnippet__LineNo",componentId:"sc-8020c-2"})(["display:inline-block;width:2em;user-select:none;opacity:0.3;"]),On=function(n){var e=n.language,t=n.codeString,a=n.theme;return r.a.createElement(Rn,null,r.a.createElement(Cn.a,Object.assign({},Cn.b,{theme:vn[a],code:t,language:e}),(function(n){var e=n.tokens,t=n.getLineProps,o=n.getTokenProps;return r.a.createElement(kn,{dark:"dark"===a},e.map((function(n,e){return r.a.createElement("div",t({line:n,key:e}),r.a.createElement(Sn,null,e+1),n.map((function(n,e){return r.a.createElement("span",o({token:n,key:e}))})))})))})))},Pn=p.a.div.withConfig({displayName:"RequestResponse__Container",componentId:"sc-12q920n-0"})(["margin:30px 0;background:#FFFFFF;border:1px solid #0000000f;border-radius:6px;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);"]),Un=p.a.div.withConfig({displayName:"RequestResponse__Response",componentId:"sc-12q920n-1"})(["height:0;transition:all 3s ease;will-change:transform;&.show{height:100%;transition:all 3s ease;will-change:transform;div{display:inherit;}}div{display:none;}"]),wn=function(n){var e=n.links,o=n.filepath,i=n.toggle,s=t("6Zpt")("./snippets"+o),c=Object.keys(e)[0],u=Object(a.useState)(s[c]),l=u[0],p=u[1],d=s.json?s.json:"",m=Object(a.useState)(!1),h=m[0],_=m[1];return r.a.createElement(Pn,null,r.a.createElement(bn,{links:e,slider:h,toggle:i,toggleSlider:function(){_(!h)},changeLanguage:function(n){p(s[n])}}),r.a.createElement("div",{className:"request"},r.a.createElement(On,{language:c,codeString:l,theme:"dark"})),"false"!==i&&r.a.createElement(Un,{className:h?"show":""},r.a.createElement(On,{language:"json",codeString:d,theme:"light"})))};t("CGoU"),e.default=function(n){var e=n.data.mdx,t=e.body,a=e.tableOfContents,p=e.fields,d=e.frontmatter,f={Link:o.Link,CardContainer:l.a,ApiLink:m,Card:h,DemoCard:_.a,TestCard:x,TestAccount:P,TestMoMo:$,CardLinks:I,RepoCard:V,UnorderedList:G.a,OrderedList:Z.a,Callout:J.a,CommunityLibrary:Q,Tabs:sn,TabsMulti:mn,RequestResponse:wn};return r.a.createElement("div",null,r.a.createElement(c.a,{title:d.title}),r.a.createElement(u.a,null,a,r.a.createElement(s.MDXProvider,{components:f},r.a.createElement(i.MDXRenderer,null,t)),p))}},Pq9h:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{  \n  ...\n  "data": {  \n    ...\n    "authorization": {  \n      "authorization_code":"AUTH_8dfhjjdt",\n      "card_type":"visa",\n      "last4":"1381",\n      "exp_month":"08",\n      "exp_year":"2018",\n      "bin":"412345",\n      "bank":"TEST BANK",\n      "channel":"card",\n      "signature": "SIG_idyuhgd87dUYSHO92D",\n      "reusable":true,\n      "country_code":"NG",\n      "account_name": "BoJack Horseman"\n    },\n    ...\n  }  \n}'},PwEl:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/bvn/match\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ bvn: "xxxxxxxxxxx", account_number: "0001234567", \n\t bank_code: "058", first_name: "Jane", last_name: "Doe", \n\t middle_name: "Loren"}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  bvn: \"xxxxxxxxxxx\",\n  account_number: \"0001234567\",\n  bank_code: \"058\",\n  first_name: \"Jane\",\n  last_name: \"Doe\",\n  middle_name: \"Loren\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bvn/match',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o="<?php\n  $url = \"https://api.paystack.co/bvn/match\";\n  $fields = [\n    'bvn' => \"xxxxxxxxxxx\",\n    'account_number' => '0001234567',\n    'bank_code' => '058',\n    'first_name' => \"Jane\",\n    'last_name' => 'Doe',\n    'middle_name' => 'Loren'\n  ];\n  \n  $fields_string = http_build_query($fields);\n  \n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    \"Authorization: Bearer SECRET_KEY\",\n    \"Cache-Control: no-cache\",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>",i='{\n  "status": true,\n  "message": "BVN lookup successful",\n  "data": {\n    "bvn": "xxxxxxxxxxx",\n    "is_blacklisted": false,\n    "account_number": true,\n    "first_name": true,\n    "middle_name": false,\n    "last_name": true\n  },\n  "meta": {\n    "calls_this_month": 1,\n    "free_calls_left": 9\n  }\n}'},Q83E:function(n,e){function t(e,a){return n.exports=t=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},t(e,a)}n.exports=t},QP6A:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a}));var a="var paymentForm = document.getElementById('paymentForm');\npaymentForm.addEventListener('submit', payWithPaystack, false);\nfunction payWithPaystack() {\n  var handler = PaystackPop.setup({\n    key: 'YOUR_PUBLIC_KEY', // Replace with your public key\n    email: document.getElementById('email-address').value,\n    amount: document.getElementById('amount').value * 100, // the amount value is multiplied by 100 to convert to the lowest currency unit\n    currency: 'NGN', // Use GHS for Ghana Cedis or USD for US Dollars\n    ref: 'YOUR_REFERENCE', // Replace with a reference you generated\n    callback: function(response) {\n      //this happens after the payment is completed successfully\n      var reference = response.reference;\n      alert('Payment complete! Reference: ' + reference);\n      // Make an AJAX call to your server with the reference to verify the transaction\n    },\n    onClose: function() {\n      alert('Transaction was not completed, window closed.');\n    },\n  });\n  handler.openIframe();\n}"},R7tm:function(n,e,t){var a=t("qHws"),r=t("gC2u"),o=t("dQcQ"),i=t("m7BV");n.exports=function(n){return a(n)||r(n)||o(n)||i()}},SkVb:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 895091250,\n    "domain": "test",\n    "status": "success",\n    "reference": "683e6787-7645-557a-a270-c9035c3a2b65",\n    "amount": 110000,\n    "message": null,\n    "gateway_response": "Approved",\n    "paid_at": "2020-11-23T11:00:09.000Z",\n    "created_at": "2020-11-23T11:00:03.000Z",\n    "channel": "card",\n    "currency": "NGN",\n    "ip_address": null,\n    "metadata": { "invoice_action": "create" },\n    "log": null,\n    "fees": 1650,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_v56svuyn23",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa ",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_H8F4hDXIARayPS41IUwG",\n      "account_name": null,\n      "receiver_bank_account_number": null,\n      "receiver_bank": null\n    },\n    "customer": {\n      "id": 31352593,\n      "first_name": "Test",\n      "last_name": "Two",\n      "email": "test2@live.com",\n      "customer_code": "CUS_mfkew13owtwcmb2",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "plan": {\n      "id": 60905,\n      "name": "10% off first month",\n      "plan_code": "PLN_a5vr5skxg72f4lr",\n      "description": null,\n      "amount": 110000,\n      "interval": "monthly",\n      "send_invoices": true,\n      "send_sms": true,\n      "currency": "NGN"\n    },\n    "subaccount": {},\n    "split": {},\n    "order_id": null,\n    "paidAt": "2020-11-23T11:00:09.000Z",\n    "requested_amount": 110000\n  }\n'},UeNt:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transfer requires OTP to continue",\n  "data": {\n    "reference": "x8beye1xud",\n    "integration": 463433,\n    "domain": "test",\n    "amount": 20000,\n    "currency": "NGN",\n    "source": "balance",\n    "reason": "E choke",\n    "recipient": 10751086,\n    "status": "otp",\n    "transfer_code": "TRF_1aqrqhoomp0rjro",\n    "id": 56506855,\n    "createdAt": "2021-04-07T12:41:57.763Z",\n    "updatedAt": "2021-04-07T12:41:57.763Z"\n  }\n}'},Ujyy:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "email": "some@body.nice",\n  "amount": "10000",\n  "metadata": {\n    "custom_fields": [\n      {\n        "value": "makurdi",\n        "display_name": "Donation for",\n        "variable_name": "donation_for"\n      }\n    ]\n  },\n  "card": {\n    "cvv": "408",\n    "number": "4084084084084081",\n    "expiry_month": "01",\n    "expiry_year": "99"\n  },\n  "pin": "0000"\n}'},UoNq:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},Up1b:function(n,e,t){"use strict";t.r(e),t.d(e,"dart",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"kotlin",(function(){return o})),t.d(e,"swift",(function(){return i}));var a="@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    body: WebView(\n      initialUrl: 'https://checkout.paystack.com/7zu1ot06d0qn9h6',\n      javascriptMode: JavascriptMode.unrestricted,\n      userAgent: 'Flutter;Webview',\n    ),\n  );\n}",r="import React from 'react';\nimport { WebView } from 'react-native-webview';\n\n\nexport default function App() {\n\n  const authorization_url = 'https://checkout.paystack.com/luKuasMan';\n\n  return (\n    <WebView \n      source={{ uri: authorization_url }}\n      style={{ marginTop: 40 }}\n    />\n  );\n}",o='class MainActivity : AppCompatActivity() {\n\n  private val authorizationUrl: String\n    get() = "https://checkout.paystack.com/luKuasMan"\n\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n    setContentView(R.layout.activity_main)\n\n    loadCheckout()\n  }\n\n  @SuppressLint("SetJavaScriptEnabled")\n  private fun loadCheckout() {\n    val webView: WebView = findViewById(R.id.webview)\n    webView.settings.apply {\n      javaScriptEnabled = true\n      javaScriptCanOpenWindowsAutomatically = true\n      domStorageEnabled = true\n    }\n\n    webView.loadUrl(authorizationUrl)\n  }\n}',i='import WebKit\n\nclass CheckoutViewController: UIViewController, WKNavigationDelegate {\n  \n\tlet callbackUrl = "CALLBACK_URL_GOES_HERE"   \n\tlet pstkUrl =  "AUTHORIZATION_URL_GOES_HERE" \n\tlet 3dsUrl = "https://standard.paystack.co/close"\n\n  @IBOutlet weak var webView: WKWebView!\n\t\n  override func viewDidLoad() {\n    super.viewDidLoad()\n    \n    let urlRequest = URLRequest.init(url: URL.init(string: pstkUrl)!)\n    webView.load(urlRequest)\n    self.webView.navigationDelegate = self\n\t}\t\n}'},WzTt:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return o})),t.d(e,"php",(function(){return r})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer": "CUS_358xertt55", "preferred_bank": "access-bank"}\'\n-X POST',r='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS => array("customer" => "CUS_358xertt55", "preferred_bank" => "access-bank"),\n  CURLOPT_HTTPHEADER => array(\n    "Authorization: Bearer SECRET_KEY",\n    "Content-Type: application/json"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',o="var https = require('follow-redirects').https;\nvar fs = require('fs');\n\nvar options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account',\n  'headers': {\n    'Authorization': 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  },\n  'maxRedirects': 20\n};\n\nvar req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nvar postData = JSON.stringify({\"customer\":\"CUS_358xertt55\",\"preferred_bank\":\"access-bank\"});\n\nreq.write(postData);\n\nreq.end();",i='{\n    "status": true,\n    "message": "NUBAN successfully created",\n    "data": {\n      "bank": {\n        "name": "Access Bank",\n        "id": 1,\n        "slug": "access-bank"\n      },\n      "account_name": "KaroKart / Rhoda Church",\n      "account_number": "9930000737",\n      "assigned": true,\n      "currency": "NGN",\n      "metadata": null,\n      "active": true,\n      "id": 253,\n      "created_at": "2019-12-12T12:39:04.000Z",\n      "updated_at": "2020-01-06T15:51:24.000Z",\n      "assignment": {\n        "integration": 100043,\n        "assignee_id": 7454289,\n        "assignee_type": "Customer",\n        "expired": false,\n        "account_type": "PAY-WITH-TRANSFER-RECURRING",\n        "assigned_at": "2020-01-06T15:51:24.764Z"\n      },\n      "customer": {\n        "id": 7454289,\n        "first_name": "Rhoda",\n        "last_name": "Church",\n        "email": "rhodachurch@email.com",\n        "customer_code": "CUS_kpb3qj71u1m0rw8",\n        "phone": "+2349053267565",\n        "risk_action": "default"\n      }\n    }\n  }'},X8hv:function(n,e,t){var a=t("Ck4i"),r=t("R7tm"),o=t("0jh0"),i=t("uDP2");function s(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function c(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?s(Object(t),!0).forEach((function(e){o(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}var u=t("q1tI"),l=t("7ljp").mdx,p=t("BfwJ").useMDXScope;n.exports=function(n){var e=n.scope,t=n.children,o=i(n,["scope","children"]),s=p(e),d=u.useMemo((function(){if(!t)return null;var n=c({React:u,mdx:l},s),e=Object.keys(n),o=e.map((function(e){return n[e]}));return a(Function,["_fn"].concat(r(e),[""+t])).apply(void 0,[{}].concat(r(o)))}),[t,e]);return u.createElement(d,c({},o))}},"Xo++":function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,[a.createElement("path",{d:"M10.2908 4.24082L1.82075 18.3808C1.64612 18.6832 1.55372 19.0261 1.55274 19.3753C1.55176 19.7246 1.64224 20.0679 1.81518 20.3713C1.98812 20.6747 2.23748 20.9276 2.53846 21.1047C2.83944 21.2818 3.18155 21.377 3.53075 21.3808H20.4708C20.82 21.377 21.1621 21.2818 21.463 21.1047C21.764 20.9276 22.0134 20.6747 22.1863 20.3713C22.3593 20.0679 22.4497 19.7246 22.4488 19.3753C22.4478 19.0261 22.3554 18.6832 22.1808 18.3808L13.7108 4.24082C13.5325 3.94693 13.2815 3.70394 12.9819 3.5353C12.6824 3.36667 12.3445 3.27808 12.0008 3.27808C11.657 3.27808 11.3191 3.36667 11.0196 3.5353C10.72 3.70394 10.469 3.94693 10.2908 4.24082Z",fill:"#FFAA22",key:0}),a.createElement("path",{d:"M12 9.38086V13.3809",stroke:"white",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round",key:1}),a.createElement("path",{d:"M12 17.3809H12.0075",stroke:"white",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round",key:2})])}r.defaultProps={width:"24",height:"25",viewBox:"0 0 24 25",fill:"none"},n.exports=r,r.default=r},Y3LN:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"json",(function(){return r}));var a='curl https://api.paystack.co/transaction/initialize \\\n-H "Authorization: Bearer YOUR_SECRET_KEY" \\\n-H "Content-Type: application/json" \\\n-d \'{"reference": "YOUR_REFERENCE", "amount": 500000, "email": "customer@email.com", "currency": "NGN", "callback_url": "https://your_website.com/payment_callback" }\'\\\n-X POST',r='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/0peioxfhpn",\n    "access_code": "0peioxfhpn",\n    "reference": "7PVGX8MEk85tgeEpVDtD"\n  }\n}'},Y8r7:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "status": true,\n  "message": "Customer retrieved",\n  "data": {\n    "transactions": [],\n    "subscriptions": [],\n    "authorizations": [],\n    "first_name": "Rhoda",\n    "last_name": "Church",\n    "email": "rhodachurch@email.com",\n    "phone": "08154211006",\n    "domain": "live",\n    "customer_code": "CUS_dy1r7ts03zstbq5",\n     ...\n    "dedicated_account": {\n      "bank": {\n        "name": "Wema Bank",\n        "id": 20,\n        "slug": "wema-bank"\n      },\n      "id": 173,\n      "account_name": "KAROKART/RHODA CHURCH",\n      "account_number": "9930020212",\n      "created_at": "2019-12-09T13:31:38.000Z",\n      "updated_at": "2019-12-09T16:04:25.000Z",\n      "currency": "NGN",\n      "active": true,\n      "assigned": true,\n      "assignment": {\n        "assignee_id": 1530104,\n        "assignee_type": "Integration",\n        "account_type": "PAY-WITH-TRANSFER-RECURRING",\n        "integration": 100043\n      }\n    }\n  }\n}'},Z9ju:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer": 481193, "preferred_bank":"wema-bank", \n      "split_code": "SPL_e7jnRLtzla" \n    }\'\n-X POST',r="const https = require('follow-redirects').https;\nconst fs = require('fs');\n\nlet options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account',\n  'headers': {\n    'authorization': 'Bearer SEECRET_KEY',\n    'content-type': 'application/json',\n    'user-agent': 'Paystack-Developers-Hub'\n  },\n  'maxRedirects': 20\n};\n\nlet req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nlet postData = JSON.stringify({\"customer\":481193,\"preferred_bank\":\"wema-bank\", \"split_code\": \"SPL_e7jnRLtzla\"});\n\nreq.write(postData);\n\nreq.end();",o='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS =>"{"customer":481193,"preferred_bank":"wema-bank", "split_code": "SPL_e7jnRLtzla"}",\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SECRET_KEY",\n    "content-type: application/json",\n    "user-agent: Paystack-Developers-Hub"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',i='{\n    "status": true,\n    "message": "Assigned Managed Account Successfully Created",\n    "data": {\n      "bank": {\n        "name": "Wema Bank",\n        "id": 20,\n        "slug": "wema-bank"\n      },\n      "account_name": "KAROKART/YINKA ADE",\n      "account_number": "6731105168",\n      "assigned": true,\n      "currency": "NGN",\n      "metadata": null,\n      "active": true,\n      "id": 97,\n      "created_at": "2019-11-13T13:52:39.000Z",\n      "updated_at": "2020-03-17T07:52:23.000Z",\n      "assignment": {\n        "integration": 100043,\n        "assignee_id": 17328,\n        "assignee_type": "Customer",\n        "expired": false,\n        "account_type": "PAY-WITH-TRANSFER-RECURRING",\n        "assigned_at": "2020-03-17T07:52:23.023Z",\n        "expired_at": null\n      },\n      "split_config": {"split_code":"SPL_e7jnRLtzla"},\n      "customer": {\n        "id": 17328,\n        "first_name": "YINKA",\n        "last_name": "ADE",\n        "email": "yinka@testemail.com",\n        "customer_code": "CUS_xxxxxxxx",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default"\n      }\n    }\n  }'},ZM0j:function(n,e){!function(n){n.languages.kotlin=n.languages.extend("clike",{keyword:{pattern:/(^|[^.])\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\b/,lookbehind:!0},function:[{pattern:/(?:`[^\r\n`]+`|\w+)(?=\s*\()/,greedy:!0},{pattern:/(\.)(?:`[^\r\n`]+`|\w+)(?=\s*\{)/,lookbehind:!0,greedy:!0}],number:/\b(?:0[xX][\da-fA-F]+(?:_[\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\d+(?:_\d+)*(?:\.\d+(?:_\d+)*)?(?:[eE][+-]?\d+(?:_\d+)*)?[fFL]?)\b/,operator:/\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\/*%<>]=?|[?:]:?|\.\.|&&|\|\||\b(?:and|inv|or|shl|shr|ushr|xor)\b/}),delete n.languages.kotlin["class-name"],n.languages.insertBefore("kotlin","string",{"raw-string":{pattern:/("""|''')[\s\S]*?\1/,alias:"string"}}),n.languages.insertBefore("kotlin","keyword",{annotation:{pattern:/\B@(?:\w+:)?(?:[A-Z]\w*|\[[^\]]+\])/,alias:"builtin"}}),n.languages.insertBefore("kotlin","function",{label:{pattern:/\w+@|@\w+/,alias:"symbol"}});var e=[{pattern:/\$\{[^}]+\}/,inside:{delimiter:{pattern:/^\$\{|\}$/,alias:"variable"},rest:n.languages.kotlin}},{pattern:/\$\w+/,alias:"variable"}];n.languages.kotlin.string.inside=n.languages.kotlin["raw-string"].inside={interpolation:e},n.languages.kt=n.languages.kotlin,n.languages.kts=n.languages.kotlin}(Prism)},ZXso:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return o})),t.d(e,"php",(function(){return r})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/dedicated_account/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "account_number": "0033322211", "subaccount": "SUB_ACCOUNTCODE" }\'\n-X POST',r='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account/split",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS => array("account_number" => "0033322211", "subaccount" => "SUB_ACCOUNTCODE"),\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SECRET_KEY",\n    "content-type: application/json"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',o="var https = require('follow-redirects').https;\nvar fs = require('fs');\n\nvar options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account/split',\n  'headers': {\n    'authorization': 'Bearer SECRET_KEY',\n    'content-type': 'application/json'\n  },\n  'maxRedirects': 20\n};\n\nvar req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nvar postData = JSON.stringify({\"account_number\":\"0033322211\",\"subaccount\":\"SUB_ACCOUNTCODE\"});\n\nreq.write(postData);\n\nreq.end();",i='{\n  "status": true,\n  "message": "Subaccount assigned",\n  "data": {\n    "id": 22495,\n    "account_name": "KAROKART/YINKA ADE",\n    "account_number": "0033322211",\n    "assigned": 1,\n    "currency": "NGN",\n    "metadata": null,\n    "active": 1,\n    "last_assignment_id": 525,\n    "createdAt": "2020-03-20T11:03:43.000Z",\n    "updatedAt": "2020-03-20T11:03:43.000Z",\n    "assignment_id": 525,\n    "split_config": {\n      "subaccount":"ACCT_4r33icuptxl40vv"\n    }\n  }\n}'},aWqj:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transferrecipient\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ type: "nuban", name: "John Doe", account_number: "0001234567", \n\t bank_code: "058", currency: "NGN"}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"type\":\"nuban\",\n  \"name\" : \"John Doe\",\n  \"account_number\": \"0001234567\",\n  \"bank_code\": \"058\",\n  \"currency\": \"NGN\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transferrecipient',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transferrecipient";\n\n  $fields = [\n    \'type\' => "nuban",\n    \'name\' => "John Doe",\n    \'account_number\' => "0001234567",\n    \'bank_code\' => "058",\n    \'currency\' => "NGN"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Transfer recipient created successfully",\n  "data": {\n    "active": true,\n    "createdAt": "2020-05-13T13:59:07.741Z",\n    "currency": "NGN",\n    "domain": "test",\n    "id": 6788170,\n    "integration": 428626,\n    "name": "John Doe",\n    "recipient_code": "RCP_t0ya41mp35flk40",\n    "type": "nuban",\n    "updatedAt": "2020-05-13T13:59:07.741Z",\n    "is_deleted": false,\n    "details": {\n      "authorization_code": null,\n      "account_number": "0001234567",\n      "account_name": null,\n      "bank_code": "058",\n      "bank_name": "Guaranty Trust Bank"\n    }\n  }\n}'},aw0z:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "r13havfcdt7btcm",\n    "status": "send_otp",\n    "display_text": "Please dial *110# to generate a voucher code. Then input the voucher"\n  }\n}'},bvvr:function(n,e,t){"use strict";t.r(e),t.d(e,"dart",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"kotlin",(function(){return o})),t.d(e,"swift",(function(){return i}));var a="@override\nWidget build(BuildContext context) {\n  return Scaffold(\n    body: WebView(\n    initialUrl: 'https://checkout.paystack.com/7zu1ot06d0qn9h6',\n    javascriptMode: JavascriptMode.unrestricted,\n    userAgent: 'Flutter;Webview',\n    navigationDelegate: (navigation){\n      if(navigation.url == 'https://standard.paystack.co/close'){\n        Navigator.of(context).pop(); //close webview\n      }\n      if(navigation.url == \"https://hello.pstk.xyz/callback\"){\n         Navigator.of(context).pop(); //close webview \n      }\n      return NavigationDecision.navigate;\n    },\n  ),\n  );\n}",r="import React from 'react';\nimport { WebView } from 'react-native-webview';\n\n\nexport default function App() {\n\n  const authorization_url = 'https://checkout.paystack.com/luKuasMan';\n  const callback_url = 'https://yourcallback.com';\n\n  onNavigationStateChange = state => {\n \n    const { url } = state;\n\n    if (!url) return;\n\n    if (url === callback_url) {\n\t\t\t// get transaction reference from url and verify transaction, then redirect\n      const redirectTo = 'window.location = \"' + callback_url + '\"';\n      this.webview.injectJavaScript(redirectTo);\n    }\n\t\t\n\t\tif(url === 'https://standard.paystack.co/close') {\n      // handle webview removal\n      // You can either unmount the component, or\n      // Use a navigator to pop off the view\n    }\n  };\n\n  return (\n    <WebView \n      source={{ uri: authorization_url }}\n      style={{ marginTop: 40 }}\n      onNavigationStateChange={ this.onNavigationStateChange }\n    />\n  );\n}",o='class MainActivity : AppCompatActivity() {\n\n    private val authorizationUrl: String\n        get() = "https://checkout.paystack.com/ok62i2sdld514e4"\n    private val callbackUrl: String\n        get() = "https://yourcallback.com"\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        ...\n    }\n\n    @SuppressLint("SetJavaScriptEnabled")\n    private fun loadCheckout() {\n        val webView: WebView = findViewById(R.id.webview)\n        webView.settings.apply {\n            javaScriptEnabled = true\n            javaScriptCanOpenWindowsAutomatically = true\n            domStorageEnabled = true\n        }\n\n        webView.webViewClient = object:  WebViewClient() {\n            override fun shouldOverrideUrlLoading(view: WebView?, request: WebResourceRequest?): Boolean {\n                val url: Uri? = request?.url\n\n                if (url?.host == callbackUrl) {\n                    return true\n                } else if (url.toString() == "https://standard.paystack.co/close") {\n                    finish()\n                    return false\n                }\n                \n                return super.shouldOverrideUrlLoading(view, request)\n            }\n        }\n\n        webView.loadUrl(authorizationUrl)\n    }\n}',i='import WebKit\n\nclass CheckoutViewController: UIViewController, WKNavigationDelegate {\n  \n\t..........\n\t\n  // This is a WKNavigationDelegate func we can use to handle redirection\n    func webView(_ webView: WKWebView, decidePolicyFor navigationAction: WKNavigationAction, \n        decisionHandler: @escaping ((WKNavigationActionPolicy) -> Void)  {\n\n    if let url = navigationAction.request.url {\n       \n    /*\n        We can check here if the 3DS flow is done by checking\n        the redirected URl is the one for 3DS after completition\n    */\n      if url.absoluteString == "https://standard.paystack.co/close"{\n        decisionHandler(.cancel)\n      }\n      else{\n        decisionHandler(.allow)\n      }\n    }\n  }\n}'},cVRl:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a='public class CheckoutActivity extends AppCompatActivity {\n\n    ...\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) { ... }\n\n    private void initializeFormVariables() { ... }\n\n    private void performCharge() {\n        Intent intent = getIntent();\n\n        String cardNumber = mCardNumber.getEditText().getText().toString();\n        String cardExpiry = mCardExpiry.getEditText().getText().toString();\n        String cvv = mCardCVV.getEditText().getText().toString();\n\n        String[] cardExpiryArray = cardExpiry.split("/");\n        int expiryMonth = Integer.parseInt(cardExpiryArray[0]);\n        int expiryYear = Integer.parseInt(cardExpiryArray[1]);\n        int amount = intent.getIntExtra(getString(R.string.meal_name), 0);\n        amount *= 100;\n\n        Card card = new Card(cardNumber, expiryMonth, expiryYear, cvv);\n\n        Charge charge = new Charge();\n        charge.setAmount(amount);\n        charge.setEmail("customer@email.com");\n        charge.setCard(card);\n\n        PaystackSdk.chargeCard(this, charge, new Paystack.TransactionCallback() {\n            @Override\n            public void onSuccess(Transaction transaction) {\n                parseResponse(transaction.getReference());\n            }\n\n            @Override\n            public void beforeValidate(Transaction transaction) {\n                Log.d("Main Activity", "beforeValidate: " + transaction.getReference());\n            }\n\n            @Override\n            public void onError(Throwable error, Transaction transaction) {\n                Log.d("Main Activity", "onError: " + error.getLocalizedMessage());\n                Log.d("Main Activity", "onError: " + error);\n            }\n\n        });\n    }\n}',r='class CheckoutActivity : AppCompatActivity() {\n\n    ...\n\n    override fun onCreate(savedInstanceState: Bundle?) { ... }\n\n    private fun initializeFormVariables() { ... }\n\n    private fun performCharge() {\n        val cardNumber = mCardNumber.editText!!.text.toString()\n        val cardExpiry = mCardExpiry.editText!!.text.toString()\n        val cvv = mCardCVV.editText!!.text.toString()\n\n        val cardExpiryArray = cardExpiry.split("/").toTypedArray()\n        val expiryMonth = cardExpiryArray[0].toInt()\n        val expiryYear = cardExpiryArray[1].toInt()\n        var amount = intent.getIntExtra(getString(R.string.meal_name), 0)\n        amount *= 100\n\n        val card = Card(cardNumber, expiryMonth, expiryYear, cvv)\n\n        val charge = Charge()\n        charge.amount = amount\n        charge.email = "customer@email.com"\n        charge.card = card\n\n        PaystackSdk.chargeCard(this, charge, object : TransactionCallback {\n            override fun onSuccess(transaction: Transaction) {\n                parseResponse(transaction.reference)\n            }\n\n            override fun beforeValidate(transaction: Transaction) {\n                Log.d("Main Activity", "beforeValidate: " + transaction.reference)\n            }\n\n            override fun onError(error: Throwable, transaction: Transaction) {\n                Log.d("Main Activity", "onError: " + error.localizedMessage)\n                Log.d("Main Activity", "onError: $error")\n            }\n        })\n    }\n}'},cXna:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000",\n\t subaccount: "ACCT_xxxxxxxxx", bearer: "subaccount" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"subaccount\": \"ACCT_xxxxxxxxx\",\n  \"bearer\": \"subaccount\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    \'subaccount\' => "ACCT_xxxxxxxxx",\n    \'bearer\' => "subaccount"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},dAgH:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a="private void initializePaystack() {\n    PaystackSdk.initialize(getApplicationContext());\n    PaystackSdk.setPublicKey(BuildConfig.PSTK_PUBLIC_KEY);\n}",r="private fun initializePaystack() {\n    PaystackSdk.initialize(applicationContext)\n    PaystackSdk.setPublicKey(BuildConfig.PSTK_PUBLIC_KEY)\n}"},dQcQ:function(n,e,t){var a=t("hMe3");n.exports=function(n,e){if(n){if("string"==typeof n)return a(n,e);var t=Object.prototype.toString.call(n).slice(8,-1);return"Object"===t&&n.constructor&&(t=n.constructor.name),"Map"===t||"Set"===t?Array.from(n):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?a(n,e):void 0}}},eckp:function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,[a.createElement("g",{clipPath:"url(#clip0)",key:0},[a.createElement("path",{d:"M8.26253 7.71098C9.55524 7.71098 10.607 6.65925 10.607 5.36653C10.607 4.0737 9.55524 3.02197 8.26253 3.02197C6.96981 3.02197 5.91797 4.0737 5.91797 5.36653C5.91797 6.65925 6.96981 7.71098 8.26253 7.71098Z",fill:"#728F9E",key:0}),a.createElement("path",{d:"M8.26091 8.41992C5.40638 8.41992 3.08398 10.548 3.08398 13.1637V13.2756H13.4378V13.1637C13.4378 10.548 11.1154 8.41992 8.26091 8.41992Z",fill:"#728F9E",key:1})]),a.createElement("defs",{key:1},a.createElement("clipPath",{id:"clip0"},a.createElement("rect",{x:"3",y:"3",width:"10.5217",height:"10.2979",fill:"white"})))])}r.defaultProps={width:"17",height:"17",viewBox:"0 0 17 17",fill:"none"},n.exports=r,r.default=r},fL28:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/refund\n  -H \'authorization: Bearer YOUR_SECRET_KEY\'\n  -H \'cache-control: no-cache\'\n  -H \'content-type: application/json\'\n  -d \'{ "transaction":"qufywna9w9a5d8v", "amount":"10000" }\n  -X POST\n',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"transaction\": \"qufywna9w9a5d8v\",\n  \"amount\": \"10000\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/refund',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/refund";\n\n  $fields = [\n    \'transaction\' => "qufywna9w9a5d8v",\n    \'amount\' => "10000",\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNREFUND, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Refund has been queued for processing",\n  "data": {\n    "transaction": {\n      "id": 627178582,\n      "reference": "qufywna9w9a5d8v",\n      "amount": 20000,\n      "paid_at": "2020-04-17T14:41:37.000Z",\n      "channel": "card",\n      "currency": "NGN",\n      "authorization": {\n        "exp_month": null,\n        "exp_year": null,\n        "account_name": null\n      },\n      "customer": {},\n      "plan": {},\n      "subaccount": {},\n      "order_id": null,\n      "paidAt": "2020-04-17T14:41:37.000Z"\n    },\n    "integration": 428626,\n    "deducted_amount": 0,\n    "channel": null,\n    "merchant_note": "Refund for transaction qufywna9w9a5d8v by damilola.odujoko@paystack.com",\n    "customer_note": "Refund for transaction qufywna9w9a5d8v",\n    "status": "pending",\n    "refunded_by": "damilola.odujoko@paystack.com",\n    "expected_at": "2020-05-28T11:12:17.606Z",\n    "currency": "NGN",\n    "domain": "test",\n    "amount": 10000,\n    "fully_deducted": false,\n    "id": 747680,\n    "createdAt": "2020-05-19T11:12:17.756Z",\n    "updatedAt": "2020-05-19T11:12:17.756Z"\n  }\n}'},fgGv:function(n,e,t){"use strict";var a=t("q1tI"),r=t.n(a),o=t("vOnD").a.div.withConfig({displayName:"CardContainer__Container",componentId:"b1cuk6-0"})(["display:grid;grid-template-columns:1fr 1fr;grid-gap:20px;margin:30px 0;"," @media screen and (max-width:809px){grid-template-columns:1fr 1fr;}@media screen and (max-width:767px){display:block;div,a{margin-bottom:20px;}a.card{display:block;}}"],(function(n){return n.space&&"\n    margin: 15px 0;\n  "}));e.a=function(n){var e=n.space,t=n.children;return r.a.createElement(o,{space:e},t)}},fnje:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a='private void parseResponse(String transactionReference) {\n  String message = "Payment Successful - " + transactionReference;\n  Toast.makeText(this, message, Toast.LENGTH_LONG).show();\n}',r='private fun parseResponse(transactionReference: String) {\n  val message = "Payment Successful - $transactionReference"\n  Toast.makeText(this, message, Toast.LENGTH_LONG).show()\n}'},gC2u:function(n,e){n.exports=function(n){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(n))return Array.from(n)}},"gNm/":function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a='Card card = new Card(cardNumber, expiryMonth, expiryYear, cvv);\n\nCharge charge = new Charge();\ncharge.setAmount(amount);\ncharge.setEmail("customer@email.com");\ncharge.setCard(card);\n\nPaystackSdk.chargeCard(this, charge, new Paystack.TransactionCallback() {\n    @Override\n    public void onSuccess(Transaction transaction) {\n        parseResponse(transaction.getReference());\n    }\n\n    @Override\n    public void beforeValidate(Transaction transaction) {\n        Log.d("Main Activity", "beforeValidate: " + transaction.getReference());\n    }\n\n    @Override\n    public void onError(Throwable error, Transaction transaction) {\n        Log.d("Main Activity", "onError: " + error.getLocalizedMessage());\n        Log.d("Main Activity", "onError: " + error);\n    }\n\n});',r='val card = Card(cardNumber, expiryMonth, expiryYear, cvv)\n\nval charge = Charge()\ncharge.amount = amount\ncharge.email = "customer@email.com"\ncharge.card = card\n\nPaystackSdk.chargeCard(this, charge, object : TransactionCallback {\n    override fun onSuccess(transaction: Transaction) {\n        parseResponse(transaction.reference)\n    }\n\n    override fun beforeValidate(transaction: Transaction) {\n        Log.d("Main Activity", "beforeValidate: " + transaction.reference)\n    }\n\n    override fun onError(error: Throwable, transaction: Transaction) {\n        Log.d("Main Activity", "onError: " + error.localizedMessage)\n        Log.d("Main Activity", "onError: $error")\n    }\n})'},gXzn:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank/resolve?account_number=0001234567&bank_code=058',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n  \n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Account number resolved",\n  "data": {\n    "account_number": "0001234567",\n    "account_name": "Doe Jane Loren",\n    "bank_id": 9\n  }\n}'},gf0b:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000",\n\t subaccount: "ACCT_xxxxxxxxx", transaction_charge: 10000 }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"subaccount\": \"ACCT_xxxxxxxxx\",\n  \"transaction_charge\": 10000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    \'subaccount\' => "ACCT_xxxxxxxxx",\n    \'transaction_charge\' => "10000"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},ghzg:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/bank/resolve_bvn/:BVN\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank/resolve_bvn/:BVN',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank/resolve_bvn/:BVN",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "BVN resolved",\n  "data": {\n    "first_name": "LARRY",\n    "last_name": "JAMES",\n    "dob": "30-Jan-60",\n    "formatted_dob": "1960-01-30",\n    "mobile": "08012345678",\n    "bvn": "xxxxxxxxxxx"\n  },\n  "meta": {\n    "calls_this_month": 1,\n    "free_calls_left": 9\n  }\n}'},gwgl:function(n,e,t){"use strict";t.r(e),t.d(e,"html",(function(){return a}));var a='<form action="/save-order-and-pay" method="POST"> \n<input type="hidden" name="user_email" value="<?php echo $email; ?>"> \n<input type="hidden" name="amount" value="<?php echo $amount; ?>"> \n<input type="hidden" name="cartid" value="<?php echo $cartid; ?>"> \n<button type="submit" name="pay_now" id="pay-now" title="Pay now">Pay now</button>\n</form>'},hMe3:function(n,e){n.exports=function(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,a=new Array(e);t<e;t++)a[t]=n[t];return a}},hSNf:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", \n      amount: "10000", \n      "bank": {\n        "code": "057", \n        "phone": "+23481234567890",\n        "token": "123456"\n      }\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({ \n  \"email\": \"customer@email.com\", \n  \"amount\": \"10000\",\n  \"bank\": {\n    \"code\": \"057\", \n    \"phone\": \"+23481234567890\",\n    \"token\": \"123456\"\n  }\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/charge",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST",\n    CURLOPT_POSTFIELDS => "{ \n      "email": "customer@email.com", \n      "amount": "10000",\n      "bank": {\n        "code": "057", \n        "phone": "+23481234567890",\n        "token": "123456"\n      }\n    }",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache"\n    ),\n  ));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n\n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "z8q981z5kp7sfde",\n    "status": "pending",\n    "display_text": "Processing transaction"\n  }\n}'},hej9:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", \n      amount: "10000", \n      "bank": {\n        "code": "057", \n        "account_number": "0000000000" \n      }\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({ \n  \"email\": \"customer@email.com\", \n  \"amount\": \"10000\",\n  \"bank\": {\n    \"code\": \"057\",\n    \"account_number\": \"0000000000\"\n  }\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/charge",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST",\n    CURLOPT_POSTFIELDS => "{ \n      "email": "customer@email.com", \n      "amount": "10000",\n      "bank": {\n        "code": "057",\n        "account_number": "0000000000"\n      }\n    }",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache"\n    ),\n  ));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n\n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "z8q981z5kp7sfde",\n    "status": "send_birthday",\n    "display_text": "Please enter your birthday"\n  }\n}'},hgqN:function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,a.createElement("path",{d:"M21.9709 7.01C21.9703 6.69396 21.887 6.3836 21.7292 6.10975C21.5715 5.83589 21.3448 5.60809 21.0718 5.44899L13.5789 1.70257C13.304 1.54947 12.9945 1.46912 12.6798 1.46912C12.3651 1.46912 12.0556 1.54947 11.7807 1.70257L4.28781 5.44899C4.01475 5.60809 3.78809 5.83589 3.63035 6.10975C3.47261 6.3836 3.38929 6.69396 3.38867 7.01V15.7516C3.38929 16.0677 3.47261 16.378 3.63035 16.6519C3.78809 16.9257 4.01475 17.1535 4.28781 17.3126L11.7807 21.0591C12.0556 21.2122 12.3651 21.2925 12.6798 21.2925C12.9945 21.2925 13.304 21.2122 13.5789 21.0591L21.0718 17.3126C21.3448 17.1535 21.5715 16.9257 21.7292 16.6519C21.887 16.378 21.9703 16.0677 21.9709 15.7516V7.01ZM12.6423 16.7257C12.3953 16.7257 12.1539 16.6525 11.9485 16.5152C11.7432 16.378 11.5831 16.183 11.4886 15.9548C11.3941 15.7266 11.3693 15.4755 11.4175 15.2333C11.4657 14.991 11.5846 14.7685 11.7593 14.5939C11.9339 14.4192 12.1565 14.3003 12.3987 14.2521C12.6409 14.2039 12.892 14.2286 13.1202 14.3232C13.3484 14.4177 13.5434 14.5777 13.6807 14.7831C13.8179 14.9885 13.8911 15.2299 13.8911 15.4769C13.8911 15.8081 13.7596 16.1257 13.5254 16.3599C13.2912 16.5941 12.9735 16.7257 12.6423 16.7257ZM13.8911 12.9793H11.3935V6.08588H13.8911V12.9793Z",fill:"#F14D4D"}))}r.defaultProps={width:"25",height:"25",viewBox:"0 0 25 25",fill:"none"},n.exports=r,r.default=r},hhZX:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 59214,\n    "domain": "live",\n    "status": "success",\n    "reference": "gf4n3ykzj6a7u89",\n    "amount": 100,\n    "message": "madePayment",\n    "gateway_response": "Approved",\n    "paid_at": "2018-11-15T06:10:54.000Z",\n    "created_at": "2018-11-15T06:10:32.000Z",\n    "channel": "mobile_money",\n    "currency": "GHS",\n    "ip_address": "18.130.236.148, 141.101.99.73",\n    "metadata": "",\n    "log": null,\n    "fees": 153,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_0aqm8ddx6s",\n      "bin": "055XXX",\n      "last4": "X149",\n      "exp_month": "12",\n      "exp_year": "9999",\n      "channel": "mobile_money",\n      "card_type": "",\n      "bank": "MTN Mobile Money",\n      "country_code": "GH",\n      "brand": "Mtn mobile money",\n      "reusable": false,\n      "signature": null,\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 16678,\n      "first_name": "Babafemi",\n      "last_name": "Aluko",\n      "email": "customer@email.com",\n      "customer_code": "CUS_2jk1i8ezoam49br",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "allow"\n    },\n    "plan": {},\n    "subaccount": {},\n    "subaccount_group": {},\n    "paidAt": "2018-11-15T06:10:54.000Z"\n  }\n}'},hwIe:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/subscription\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ customer: "CUS_xxxxxxxxxx", plan: "PLN_xxxxxxxxxx" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"customer\": \"CUS_xxxxxxxxxx\",\n  \"plan\": \"PLN_xxxxxxxxxx\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'customer\' => "CUS_xxxxxxxxxx",\n    \'plan\' => "PLN_xxxxxxxxxx"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Subscription successfully created",\n  "data": {\n      "customer": 24259516,\n      "plan": 49122,\n      "integration": 428626,\n      "domain": "test",\n      "start": 1590152172,\n      "status": "active",\n      "quantity": 1,\n      "amount": 500000,\n      "authorization": {\n        "authorization_code": "AUTH_pmx3mgawyd",\n        "bin": "408408",\n        "last4": "4081",\n        "exp_month": "12",\n        "exp_year": "2020",\n        "channel": "card",\n        "card_type": "visa DEBIT",\n        "bank": "Test Bank",\n        "country_code": "NG",\n        "brand": "visa",\n        "reusable": true,\n        "signature": "SIG_2Gvc6pNuzJmj4TCchXfp",\n        "account_name": null\n      },\n      "invoice_limit": 0,\n      "subscription_code": "SUB_i6wmhzi0lu95oz7",\n      "email_token": "n27dvho4kjsf1sq",\n      "id": 161872,\n      "createdAt": "2020-05-22T12:56:12.514Z",\n      "updatedAt": "2020-05-22T12:56:12.514Z",\n      "cron_expression": "0 0 22 * *",\n      "next_payment_date": "2020-06-22T00:00:00.000Z"\n  }\n}'},iz4w:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a='Intent intent = getIntent();\n\nString cardNumber = mCardNumber.getEditText().getText().toString();\nString cardExpiry = mCardExpiry.getEditText().getText().toString();\nString cvv = mCardCVV.getEditText().getText().toString();\n\nString[] cardExpiryArray = cardExpiry.split("/");\nint expiryMonth = Integer.parseInt(cardExpiryArray[0]);\nint expiryYear = Integer.parseInt(cardExpiryArray[1]);\nint amount = intent.getIntExtra(getString(R.string.meal_name), 0);\namount *= 100; // convert amount to kobo',r='val cardNumber = mCardNumber.editText!!.text.toString()\nval cardExpiry = mCardExpiry.editText!!.text.toString()\nval cvv = mCardCVV.editText!!.text.toString()\n\nval cardExpiryArray = cardExpiry.split("/").toTypedArray()\nval expiryMonth = cardExpiryArray[0].toInt()\nval expiryYear = cardExpiryArray[1].toInt()\nvar amount = intent.getIntExtra(getString(R.string.meal_name), 0)\namount *= 100 // convert amount to kobo'},"k/JU":function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "amount": 1000, \n  "email": "customer@email.com",\n  "currency": "GHS",\n  "mobile_money": {\n    "phone" : "0553241149",\n    "provider" : "MTN"\n  }\n}\n'},k0Gk:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a="curl https://api.paystack.co/refund \n-H 'authorization: Bearer YOUR_SECRET_KEY'\n-H 'cache-control: no-cache'\n-H 'content-type: application/json' \n-X GET",r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/refund',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/bank/refund",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 30,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "GET",\n  CURLOPT_HTTPHEADER => array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n  echo "cURL Error #:" . $err;\n} else {\n  echo $response;\n}\n?>',i='{\n  "status": true,\n  "message": "Refunds retrieved",\n  "data": [\n    {\n      "integration": 428626,\n      "transaction": 627178582,\n      "dispute": null,\n      "settlement": null,\n      "id": 747680,\n      "domain": "test",\n      "currency": "NGN",\n      "amount": 10000,\n      "status": "processed",\n      "refunded_at": null,\n      "refunded_by": "damilola.odujoko@paystack.com",\n      "customer_note": "Refund for transaction qufywna9w9a5d8v",\n      "merchant_note": "Refund for transaction qufywna9w9a5d8v by damilola.odujoko@paystack.com",\n      "deducted_amount": 10000,\n      "fully_deducted": true,\n      "createdAt": "2020-05-19T11:12:17.000Z"\n    },\n    {\n      "integration": 428626,\n      "transaction": 640672957,\n      "dispute": null,\n      "settlement": null,\n      "id": 742609,\n      "domain": "test",\n      "currency": "NGN",\n      "amount": 20000,\n      "status": "processed",\n      "refunded_at": null,\n      "refunded_by": "damilola.odujoko@paystack.com",\n      "customer_note": "blah blah",\n      "merchant_note": "yada yada",\n      "deducted_amount": 20000,\n      "fully_deducted": true,\n      "createdAt": "2020-04-30T10:43:47.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},kAzu:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i})),t.d(e,"json_400",(function(){return s}));var a='curl https://api.paystack.co/customer/{customer_code}/identification\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ \n      "country": "NG",\n      "type": "bvn",\n      "value": "200123456677",\n      "first_name": "Asta",\n      "last_name": "Lavista"\n}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n\t\"country\": \"NG\",\n  \"type\": \"bvn\",\n  \"value\": \"200123456677\",\n  \"first_name\": \"Asta\",\n  \"last_name\": \"Lavista\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/{customer_code}/identification',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/customer/{customer_code}/identification";\n\n  $fields = [\n    "country": "NG",\n    "type": "bvn",\n    "value": "200123456677",\n    "first_name": "Asta",\n    "last_name": "Lavista"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n    "status": true,\n    "message": "Customer Identification in progress"\n  }',s='{\n    "status": false,\n    "message": "Invalid BVN"\n  }'},kwED:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a}));var a='callback: function(response) {\n  window.location = "http://www.yoururl.com/verify_transaction.php?reference=" + response.reference;\n};\n// On the redirected page, you can call Paystack\'s verify endpoint.'},l1Sq:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='metadata: {\n  custom_filters:{\n    recurring: true,\n    banks: ["057","100"],\n    card_brands: ["visa"]\n  }\n}'},ly9y:function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,[a.createElement("g",{clipPath:"url(#clip0)",key:0},[a.createElement("path",{d:"M16.75 -2H-0.749939C-1.08146 -2 -1.3994 -1.8683 -1.63382 -1.63388C-1.86824 -1.39946 -1.99994 -1.08152 -1.99994 -0.750004V14.8749C-2.00172 14.9974 -1.96676 15.1175 -1.89959 15.2199C-1.83241 15.3223 -1.7361 15.4021 -1.62308 15.4492C-1.51006 15.4963 -1.38552 15.5085 -1.26553 15.4841C-1.14554 15.4597 -1.03562 15.3999 -0.949938 15.3124L5.61254 8.74997L3.26255 6.39997C3.19415 6.33468 3.14515 6.25173 3.12096 6.16031C3.09678 6.0689 3.09837 5.97257 3.12554 5.882C3.15271 5.79142 3.20441 5.71013 3.27492 5.64712C3.34543 5.58411 3.432 5.54184 3.52505 5.52498L11.425 3.97498C11.5077 3.95581 11.5939 3.95801 11.6755 3.98137C11.7571 4.00473 11.8315 4.04849 11.8915 4.10851C11.9515 4.16853 11.9953 4.24285 12.0186 4.32446C12.042 4.40607 12.0442 4.49228 12.025 4.57498L10.5 12.475C10.4832 12.568 10.4409 12.6546 10.3779 12.7251C10.3149 12.7956 10.2336 12.8473 10.143 12.8745C10.0524 12.9016 9.9561 12.9032 9.86468 12.879C9.77327 12.8549 9.69032 12.8059 9.62503 12.7375L7.25003 10.3875L0.687556 16.9499C0.600086 17.0356 0.540302 17.1455 0.515919 17.2655C0.491536 17.3855 0.503674 17.5101 0.550766 17.6231C0.597858 17.7361 0.677743 17.8324 0.78011 17.8996C0.882478 17.9668 1.00263 18.0017 1.12505 17.9999H16.75C17.0815 17.9999 17.3995 17.8682 17.6339 17.6338C17.8683 17.3994 18 17.0815 18 16.7499V-0.750004C18 -1.08152 17.8683 -1.39946 17.6339 -1.63388C17.3995 -1.8683 17.0815 -2 16.75 -2Z",fill:"#5E6469",key:0}),a.createElement("rect",{x:"0.220703",y:"13.5459",width:"7.27271",height:"3.11124",transform:"rotate(-45 0.220703 13.5459)",fill:"white",key:1})]),a.createElement("defs",{key:1},a.createElement("clipPath",{id:"clip0"},a.createElement("rect",{width:"16",height:"16",rx:"8",fill:"white"})))])}r.defaultProps={width:"16",height:"16",viewBox:"0 0 16 16",fill:"none"},n.exports=r,r.default=r},m7BV:function(n,e){n.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}},nWdA:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/identity/bvn/resolve/:BVN\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https');\n\nconst options = {\n  'method': 'GET',\n  'hostname': 'api.paystack.co',\n  'path': '/identity/bvn/resolve/:BVN',\n  'headers': {\n    'Authorization': 'Bearer YOUR_SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n    let data = ''\n  \n    res.on('data', (chunk) => {\n      data += chunk\n    });\n  \n    res.on('end', () => {\n      console.log(JSON.parse(data))\n    })\n  }).on('error', error => {\n    console.error(error)\n})",o="<?php\n\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => 'https://api.paystack.co/identity/bvn/resolve/:BVN',\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => '',\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => 'GET',\n    CURLOPT_HTTPHEADER => array(\n      'Authorization: Bearer YOUR_SECRET_KEY',\n      'Cache-Control: no-cache'\n    ),\n));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n  curl_close($curl);\n  \n  if ($err) {\n    echo \"cURL Error #:\" . $err;\n  } else {\n    echo $response;\n  }\n?>",i='{\n    "status": true,\n    "message": "BVN resolved",\n    "data": {\n        "title": "Mr",\n        "first_name": "JOHN",\n        "middle_name": "MUKITE",\n        "last_name": "NAMEME",\n        "name_on_card": "MUKITE NAMEME",\n        "marital_status": "Married",\n        "dob": "17-Jun-80",\n        "formatted_dob": "1980-06-17", // YYYY-MM-DD\n        "mobile": "08091111111",\n        "mobile2": "08090000000",\n        "registration_date": "24-Dec-16",\n        "formatted_registration_date": "2016-12-24",\n        "bvn": "00000000000",\n        "gender": "Male",\n        "lga_of_origin": "Ilesa West",\n        "state_of_origin": "Osun State",\n        "residential_address": "126 Joel Ogunnaike St Ikeja GRA, Lagos",\n        "lga_of_residence": "Ikeja",\n        "nationality": "Nigeria",\n        "email": "MUKITE@EXAMPLE.COM",\n        "is_blacklisted": false,\n        "enrollment_bank": {\n            "name": "First Bank of Nigeria",\n            "code": "011",\n            "enrollment_branch": "IKEJA BRANCH"\n        },\n        "level_of_account": "Level 2 - Medium Level Accounts",\n        "nin": "",\n        "base_64_image": "Base_64_Encoded_Image=="\n    },\n    "meta": {\n        "calls_this_month": 12,\n        "free_calls_left": 0\n    }\n}'},nfUh:function(n,e){n.exports={js:"const https = require('follow-redirects').https;\nconst fs = require('fs');\n\nconst options = {\n  'method': 'DELETE',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account/split',\n  'headers': {\n    'authorization': 'Bearer SEECRET_KEY',\n    'content-type': 'application/json'\n  },\n  'maxRedirects': 20\n};\n\nconst req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nconst postData = JSON.stringify({\"account_number\":\"0033322211\"});\n\nreq.setHeader('Content-Length', postData.length);\n\nreq.write(postData);\n\nreq.end();",php:'<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account/split",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "DELETE",\n  CURLOPT_POSTFIELDS => array("account_number" => "0033322211"),\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SEECRET_KEY",\n    "content-type: application/json",\n    "Cookie: __cfduid=df6355b0f005797cd79527d1a6da37c131598191689"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n',json:'{\n  "status": "success",\n  "message": "Subaccount unassigned",\n  "data": {\n    "id": 22173,\n    "split_config": NULL,\n    "account_name": "KAROKART/YINKA ADE",\n    "account_number": "0033322211",\n    "currency": "NGN",\n    "assigned": true,\n    "active": true,\n    "createdAt": "2020-03-11T15:14:00.707Z",\n    "updatedAt": "2020-03-11T15:14:00.707Z",\n  }\n}',bash:'curl https://api.paystack.co/dedicated_account/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "account_number": "0033322211" }\'\n-X DELETE'}},nvhb:function(n,e,t){},oIQz:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transfer/bulk\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ currency: "NGN", source: "balance", transfers: [{\n    "amount": 20000,\n    "reason": "Life go better for you",\n    "recipient": "RCP_t0ya41mp35flk40"\n  },\n  {\n    "amount": 20000,\n    "reason": "Easy does it",\n    "recipient": "RCP_z7e30qo1xxo98ub"\n  }] \n}\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "currency": "NGN",\n  "source": "balance",\n  "transfers": [{\n    "amount": 20000,\n    "reason": "Life go better for you",\n    "recipient": "RCP_t0ya41mp35flk40"\n  },\n  {\n    "amount": 20000,\n    "reason": "Easy does it",\n    "recipient": "RCP_z7e30qo1xxo98ub"\n  }]\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/transfer/bulk\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',o="<?php\n  $url = \"https://api.paystack.co/transfer/bulk\";\n\n  $fields = [\n    'currency' => \"NGN\",\n    'source' => \"balance\",\n    'transfers' => [{\n      'amount' => 20000,\n      'reason' => \"Life go better for you\",\n      'recipient' => \"RCP_t0ya41mp35flk40\"\n    },\n    {\n      'amount' => 20000,\n      'reason' =>  \"Easy does it\",\n      'recipient' => \"RCP_z7e30qo1xxo98ub\"\n    }]\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    \"Authorization: Bearer SECRET_KEY\",\n    \"Cache-Control: no-cache\",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>",i='{\n  "status": true,\n  "message": "2 transfers queued.",\n  "data": [\n    {\n      "recipient": "RCP_t0ya41mp35flk40",\n      "amount": 20000,\n      "transfer_code": "TRF_p2q7q9r2mmjawb3",\n      "currency": "NGN"\n    },\n    {\n      "recipient": "RCP_z7e30qo1xxo98ub",\n      "amount": 20000,\n      "transfer_code": "TRF_8khq7hdizqxw1zt",\n      "currency": "NGN"\n    }\n  ]\n}'},otUN:function(n,e){Prism.languages.dart=Prism.languages.extend("clike",{string:[{pattern:/r?("""|''')[\s\S]*?\1/,greedy:!0},{pattern:/r?("|')(?:\\.|(?!\1)[^\\\r\n])*\1/,greedy:!0}],keyword:[/\b(?:async|sync|yield)\*/,/\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extension|external|extends|factory|final|finally|for|Function|get|hide|if|implements|interface|import|in|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\b/],operator:/\bis!|\b(?:as|is)\b|\+\+|--|&&|\|\||<<=?|>>=?|~(?:\/=?)?|[+\-*\/%&^|=!<>]=?|\?/}),Prism.languages.insertBefore("dart","function",{metadata:{pattern:/@\w+/,alias:"symbol"}})},pHBQ:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 59565,\n    "domain": "test",\n    "status": "success",\n    "reference": "48rx32f1womvcr4",\n    "amount": 10000,\n    "message": "madePayment",\n    "gateway_response": "Payment successful",\n    "paid_at": "2018-12-05T15:58:45.000Z",\n    "created_at": "2018-12-05T15:58:02.000Z",\n    "channel": "qr",\n    "currency": "NGN",\n    "ip_address": "18.130.45.28, 141.101.107.157",\n    "metadata": "",\n    "log": null,\n    "fees": null,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_2b4zs69fgy7qflh",\n      "bin": "483953",\n      "last4": "6208",\n      "exp_month": "12",\n      "exp_year": "2018",\n      "channel": "qr",\n      "card_type": "DEBIT",\n      "bank": "Visa QR",\n      "country_code": "NG",\n      "brand": "VISA",\n      "reusable": false,\n      "signature": null,\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 16787,\n      "first_name": "I",\n      "last_name": "SURRENDER",\n      "email": "customer@email.com",\n      "customer_code": "CUS_ehg851zbxon0bvx",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": {},\n    "subaccount": {},\n    "subaccount_group": {},\n    "paidAt": "2018-12-05T15:58:45.000Z"\n  }\n}'},pknR:function(n,e,t){"use strict";t.r(e),t.d(e,"html",(function(){return a})),t.d(e,"js",(function(){return r}));var a=' <form id="paymentForm">\n  <div class="form-group">\n    <label for="email">Email Address</label>\n    <input type="email" id="email-address" required />\n  </div>\n  <div class="form-group">\n    <label for="amount">Amount</label>\n    <input type="tel" id="amount" required />\n  </div>\n  <div class="form-group">\n    <label for="first-name">First Name</label>\n    <input type="text" id="first-name" />\n  </div>\n  <div class="form-group">\n    <label for="last-name">Last Name</label>\n    <input type="text" id="last-name" />\n  </div>\n  <div class="form-submit">\n    <button type="submit" onclick="payWithPaystack()"> Pay </button>\n  </div>\n</form>\n\n<script src="https://js.paystack.co/v1/inline.js"><\/script> ',r="const paymentForm = document.getElementById('paymentForm');\npaymentForm.addEventListener(\"submit\", payWithPaystack, false);\nfunction payWithPaystack(e) {\n  e.preventDefault();\n\n  let handler = PaystackPop.setup({\n    key: 'pk_test_xxxxxxxxxx', // Replace with your public key\n    email: document.getElementById(\"email-address\").value,\n    amount: document.getElementById(\"amount\").value * 100,\n    ref: ''+Math.floor((Math.random() * 1000000000) + 1), // generates a pseudo-unique reference. Please replace with a reference you generated. Or remove the line entirely so our API will generate one for you\n    // label: \"Optional string that replaces customer email\"\n    onClose: function(){\n      alert('Window closed.');\n    },\n    callback: function(response){\n      let message = 'Payment complete! Reference: ' + response.reference;\n      alert(message);\n    }\n  });\n\n  handler.openIframe();\n}"},pleK:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a='public class CheckoutActivity extends AppCompatActivity {\n\n    private TextInputLayout mCardNumber;\n    private TextInputLayout mCardExpiry;\n    private TextInputLayout mCardCVV;\n\n\t@Override\n    protected void onCreate(Bundle savedInstanceState) { ... }\n\n\tprivate void initializeFormVariables() {\n        mCardNumber = findViewById(R.id.til_card_number);\n        mCardExpiry = findViewById(R.id.til_card_expiry);\n        mCardCVV = findViewById(R.id.til_card_cvv);\n\n\t\t// this is used to add a forward slash (/) between the cards expiry month\n        // and year (11/21). After the month is entered, a forward slash is added\n        // before the year\n\n        Objects.requireNonNull(mCardExpiry.getEditText()).addTextChangedListener(new TextWatcher() {\n            @Override\n            public void beforeTextChanged(CharSequence s, int start, int count, int after) {\n\n            }\n\n            @Override\n            public void onTextChanged(CharSequence s, int start, int before, int count) {\n\n            }\n\n            @Override\n            public void afterTextChanged(Editable s) {\n                if(s.toString().length() == 2 && !s.toString().contains("/")) {\n                    s.append("/");\n                }\n            }\n        });\n\n        Button button = findViewById(R.id.btn_make_payment);\n        button.setOnClickListener(v -> performCharge());\n    }\n}',r='class CheckoutActivity : AppCompatActivity() {\n    private lateinit var mCardNumber: TextInputLayout\n    private lateinit var mCardExpiry: TextInputLayout\n    private lateinit var mCardCVV: TextInputLayout\n\n    override fun onCreate(savedInstanceState: Bundle?) { ... }\n\n\tprivate fun initializeFormVariables() {\n        mCardNumber = findViewById(R.id.til_card_number)\n        mCardExpiry = findViewById(R.id.til_card_expiry)\n        mCardCVV = findViewById(R.id.til_card_cvv)\n\n\t\t// this is used to add a forward slash (/) between the cards expiry month\n        // and year (11/21). After the month is entered, a forward slash is added\n        // before the year\n        mCardExpiry.editText!!.addTextChangedListener(object : TextWatcher {\n            override fun beforeTextChanged(s: CharSequence?, \n\t\t\t\t\t\t\tstart: Int, count: Int, after: Int) {\n\n            }\n\n            override fun onTextChanged(s: CharSequence?, start: Int, before: Int, count: Int) {\n\n            }\n\n            override fun afterTextChanged(s: Editable?) {\n                if (s.toString().length == 2 && !s.toString().contains("/")) {\n                    s!!.append("/")\n                }\n            }\n\n        })\n        \n        val button = findViewById<Button>(R.id.btn_make_payment)\n        button.setOnClickListener { v: View? -> performCharge() }\n    }\n}'},qHws:function(n,e,t){var a=t("hMe3");n.exports=function(n){if(Array.isArray(n))return a(n)}},s9Yx:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a="@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    ...\n\n    int price = 4000;\n    Button mCheckout = findViewById(R.id.btn_checkout);\n\n    mCheckout.setOnClickListener(v -> {\n        Intent intent = new Intent(MainActivity.this, CheckoutActivity.class);\n        intent.putExtra(getString(R.string.meal_name), price);\n        startActivity(intent);\n    });\n}",r="override fun onCreate(savedInstanceState: Bundle?) {\n  ...\n\n  val price = 4000\n  val mCheckout: Button = findViewById(R.id.btn_checkout)\n  mCheckout.setOnClickListener {\n      val intent = Intent(this, CheckoutActivity::class.java).apply {\n          putExtra(getString(R.string.meal_name), price)\n      }\n      startActivity(intent)\n  }\n}"},s9uL:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "500000", \n\t plan: "PLN_xxxxxxxxxx" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"500000\",\n  \"plan\": \"PLN_xxxxxxxxxx\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "500000",\n    \'plan\' => "PLN_xxxxxxxxxx"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>',i='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/nkdks46nymizns7",\n    "access_code": "nkdks46nymizns7",\n    "reference": "nms6uvr1pl"\n  }\n}'},tr8c:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a})),t.d(e,"php",(function(){return r})),t.d(e,"json",(function(){return o}));var a='// Using Express\napp.post("/my/webhook/url", function(req, res) {\n    // Retrieve the request\'s body\n    var event = req.body;\n    // Do something with event\n    res.send(200);\n});',r='<?php\n// Retrieve the request\'s body and parse it as JSON\n$input = @file_get_contents("php://input");\n$event = json_decode($input);\n// Do something with $event\nhttp_response_code(200); // PHP 5.4 or greater\n?>\n',o=""},uNAj:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='{\n  "event": "charge.success",\n  "data": {\n    "id": 59214,\n    "domain": "live",\n    "status": "success",\n    "reference": "gf4n3ykzj6a7u89",\n    "amount": 100,\n    "message": "madePayment",\n    "gateway_response": "Approved",\n    "paid_at": "2018-11-15T06:10:54.000Z",\n    "created_at": "2018-11-15T06:10:32.000Z",\n    "channel": "mobile_money",\n    "currency": "GHS",\n    "ip_address": "18.130.236.148, 141.101.99.73",\n    "metadata": "",\n    "log": null,\n    "fees": 153,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_0aqm8ddx6s",\n      "bin": "055XXX",\n      "last4": "X149",\n      "exp_month": "12",\n      "exp_year": "9999",\n      "channel": "mobile_money",\n      "card_type": "",\n      "bank": "MTN Mobile Money",\n      "country_code": "GH",\n      "brand": "Mtn mobile money",\n      "reusable": false,\n      "signature": null,\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 16678,\n      "first_name": "Babafemi",\n      "last_name": "Aluko",\n      "email": "customer@email.com",\n      "customer_code": "CUS_2jk1i8ezoam49br",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "allow"\n    },\n    "plan": {},\n    "subaccount": {},\n    "subaccount_group": {},\n    "paidAt": "2018-11-15T06:10:54.000Z"\n  }\n}'},"ug+p":function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank/resolve?account_number=0001234567&bank_code=058',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",o='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank/resolve?account_number=0001234567&bank_code=058",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n    ),\n));\n\n$response = curl_exec($curl);\n$err = curl_error($curl);\n\ncurl_close($curl);\n\nif ($err) {\n    echo "cURL Error #:" . $err;\n} else {\n    echo $response;\n}\n?>',i='{\n  "status": true,\n  "message": "Account number resolved",\n  "data": {\n    "account_number": "0001234567",\n    "account_name": "Doe Jane Loren",\n    "bank_id": 9\n  }\n}'},vCUy:function(n,e,t){"use strict";var a=t("q1tI"),r=t.n(a),o=(t("3ot7"),t("Xo++")),i=t.n(o),s=t("hgqN"),c=t.n(s),u=t("0I2F"),l=t.n(u),p=t("0zjK"),d=t.n(p);e.a=function(n){var e=n.type,t=n.title,a=n.children,o="summary"===e?"In a nutshell":t,s={warning:r.a.createElement(i.a,null),info:r.a.createElement(d.a,null),danger:r.a.createElement(c.a,null),summary:r.a.createElement(l.a,null)};return r.a.createElement("div",{className:"callout callout--"+e},r.a.createElement("div",{className:"callout__header",title:e},r.a.createElement("span",{className:"callout__icon"},s[e]),r.a.createElement("h5",{className:"callout__header-text"},o)),r.a.createElement("div",null,a))}},vJUD:function(n,e,t){"use strict";var a=t("q1tI"),r=t.n(a),o=t("Wbzz"),i=t("vt5w"),s=t.n(i);t("nvhb");e.a=function(n){return r.a.createElement("div",{className:"card "+(n.disabled?"card--disabled":"")},r.a.createElement("div",{className:"card__header"},r.a.createElement("h5",null,n.title)),r.a.createElement("div",{className:"card__description"},r.a.createElement(s.a,{className:"card__description__icon"}),r.a.createElement("span",null,n.disabled?r.a.createElement("span",{className:"card__description__link"},n.link):r.a.createElement("a",{className:"card__description__link",href:"https://github.com/"+n.link,target:"_blank",rel:"noopener noreferrer"},n.link))),r.a.createElement("div",{className:"card__body"},r.a.createElement("span",{className:"card__body__prompt"},"APIS USED"),r.a.createElement("hr",{className:"card__body__line"})),r.a.createElement("div",{className:"card__footer"},r.a.createElement("ul",{className:"links"},n.apis.map((function(n,e){return r.a.createElement("li",{className:"links__item",key:e},r.a.createElement(o.Link,{to:n.route,className:"links__item__link"},n.title))})))))}},vKuV:function(n,e,t){"use strict";t.r(e),t.d(e,"bash",(function(){return a})),t.d(e,"js",(function(){return r})),t.d(e,"php",(function(){return o})),t.d(e,"json",(function(){return i}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "amount": 100,\n      "email": "customer@email.com",\n      "currency": "NGN",\n      "qr": {\n        "provider" : "visa"\n      }\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"amount\": 100,\n  \"email\": \"customer@email.com\",\n  \"currency\": \"NGN\",\n  \"qr\": {\n    \"provider\" : \"visa\"\n  }\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",o='<?php\n$curl = curl_init();\ncurl_setopt_array($curl, array( \n  CURLOPT_URL => "https://api.paystack.co/charge", \n  CURLOPT_RETURNTRANSFER => true, \n  CURLOPT_ENCODING => "", \n  CURLOPT_MAXREDIRS => 10, \n  CURLOPT_TIMEOUT => 30, \n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1, \n  CURLOPT_CUSTOMREQUEST => "POST", \n  CURLOPT_POSTFIELDS => "{\n    "amount": 100,\n    "email": "customer@email.com",\n    "currency": "NGN",\n    "qr": {\n      "provider" : "visa"\n    }\n  }", \n  CURLOPT_HTTPHEADER => array( \n    "Authorization: Bearer SECRET_KEY", \n    "Content-Type: application/json" ),\n));\n$response = curl_exec($curl);\n$err = curl_error($curl);\ncurl_close($curl);\nif ($err) {\n    echo "cURL Error #:" . $err;\n} else {\n    echo $response;\n}\n?>',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "48rx32f1womvcr4",\n    "status": "pay_offline",\n    "qr_code": "0002010216421527000104176552045499530356654031005802NG5920Babafemi enterprises6005Lagos62230519PSTK_104176000926|16304713a",\n    "url": "https://files.paystack.co/qr/visa/104176/Babafemi_enterprises_visaqr_1544025482956.png"\n  }\n}\n'},vMde:function(n,e,t){n.exports=t.p+"static/Texture-7563fd4fce53c042eafd434fab85bf41.png"},vt5w:function(n,e,t){var a=t("q1tI");function r(n){return a.createElement("svg",n,a.createElement("path",{d:"M8 0.197998C3.58 0.197998 0 3.78 0 8.198C0 11.7333 2.292 14.7313 5.47 15.788C5.87 15.8633 6.01667 15.616 6.01667 15.4033C6.01667 15.2133 6.01 14.71 6.00667 14.0433C3.78133 14.526 3.312 12.97 3.312 12.97C2.948 12.0467 2.422 11.8 2.422 11.8C1.69733 11.304 2.478 11.314 2.478 11.314C3.28133 11.37 3.70333 12.138 3.70333 12.138C4.41667 13.3613 5.576 13.008 6.03333 12.8033C6.10533 12.286 6.31133 11.9333 6.54 11.7333C4.76333 11.5333 2.896 10.8453 2.896 7.78C2.896 6.90666 3.206 6.19333 3.71933 5.63333C3.62933 5.43133 3.35933 4.618 3.78933 3.516C3.78933 3.516 4.45933 3.30133 5.98933 4.336C6.62933 4.158 7.30933 4.07 7.98933 4.066C8.66933 4.07 9.34933 4.158 9.98933 4.336C11.5093 3.30133 12.1793 3.516 12.1793 3.516C12.6093 4.618 12.3393 5.43133 12.2593 5.63333C12.7693 6.19333 13.0793 6.90666 13.0793 7.78C13.0793 10.8533 11.2093 11.53 9.42933 11.7267C9.70933 11.9667 9.96933 12.4573 9.96933 13.2067C9.96933 14.2773 9.95933 15.1373 9.95933 15.3973C9.95933 15.6073 10.0993 15.8573 10.5093 15.7773C13.71 14.728 16 11.728 16 8.198C16 3.78 12.418 0.197998 8 0.197998Z",fill:"#5E6469"}))}r.defaultProps={width:"16",height:"16",viewBox:"0 0 16 16",fill:"none"},n.exports=r,r.default=r},wgEU:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a})),t.d(e,"php",(function(){return r})),t.d(e,"java",(function(){return o})),t.d(e,"csharp",(function(){return i})),t.d(e,"json",(function(){return s}));var a="var crypto = require('crypto');\nvar secret = process.env.SECRET_KEY;\n// Using Express\napp.post(\"/my/webhook/url\", function(req, res) {\n    //validate event\n    var hash = crypto.createHmac('sha512', secret).update(JSON.stringify(req.body)).digest('hex');\n    if (hash == req.headers['x-paystack-signature']) {\n    // Retrieve the request's body\n    var event = req.body;\n    // Do something with event  \n    }\n    res.send(200);\n});",r="<?php\n// only a post with paystack signature header gets our attention\nif ((strtoupper($_SERVER['REQUEST_METHOD']) != 'POST' ) || !array_key_exists('x-paystack-signature', $_SERVER) ) \n    exit();\n\n// Retrieve the request's body\n$input = @file_get_contents(\"php://input\");\ndefine('PAYSTACK_SECRET_KEY','SECRET_KEY');\n\n// validate event do all at once to avoid timing attack\nif($_SERVER['HTTP_X_PAYSTACK_SIGNATURE'] !== hash_hmac('sha512', $input, PAYSTACK_SECRET_KEY))\n    exit();\n\nhttp_response_code(200);\n\n// parse event (which is json string) as object\n// Do something - that will not take long - with $event\n$event = json_decode($input);\n\nexit();\n?>\n",o='package hmacexample;\n\nimport java.io.UnsupportedEncodingException;\nimport java.security.InvalidKeyException;\nimport java.security.NoSuchAlgorithmException;\nimport javax.crypto.Mac;\nimport javax.crypto.spec.SecretKeySpec;\nimport javax.xml.bind.DatatypeConverter;\nimport org.json.JSONException;\nimport org.json.JSONObject;\n\n/*\n  *\n  * @author babafemi\n  * @credit Ifeanyi\n*/\npublic class HMacExample {\n\n  /*\n    * @param args the command line arguments\n    * @throws java.io.UnsupportedEncodingException\n    * @throws java.security.InvalidKeyException\n    * @throws java.security.NoSuchAlgorithmException\n  */\n  public static void main(String[] args) throws UnsupportedEncodingException, InvalidKeyException, NoSuchAlgorithmException, JSONException {\n    //first you verify that this request came from paystack\n      \n    String key = "YOUR_SECRET_KEY"; //replace with your paystack secret_key\n    \n    String rawJson = "{\\"paystack\\":\\"request\\",\\"body":\\"to_string\\"}";\n    JSONObject body = new JSONObject(rawJson);\n    String result = "";\n    String HMAC_SHA512 = "HmacSHA512";\n    String xpaystackSignature = ""; //put in the request\'s header value for x-paystack-signature\n    \n    byte [] byteKey = key.getBytes("UTF-8");\n    SecretKeySpec keySpec = new SecretKeySpec(byteKey, HMAC_SHA512);\n    Mac sha512_HMAC = Mac.getInstance(HMAC_SHA512);      \n    sha512_HMAC.init(keySpec);\n    byte [] mac_data = sha512_HMAC.\n    doFinal(body.toString().getBytes("UTF-8"));\n    result = DatatypeConverter.printHexBinary(mac_data);\n    if(result.toLowerCase().equals(xpaystackSignature)) {\n      // you can trust the event, it came from paystack\n      // respond with the http 200 response immediately before attempting to process the response\n      //retrieve the request body, and deliver value to the customer\n    }else{\n      // this isn\'t from Paystack, ignore it\n    }  \n  }\n}',i='using System;\nusing System.Security.Cryptography;\nusing System.Text;\nusing Newtonsoft.Json.Linq;\n\nnamespace HMacExample\n{\n  class Program {\n    static void Main(string[] args) {\n      String key = "YOUR_SECRET_KEY"; //replace with your paystack secret_key\n      String jsonInput = "{"paystack":"request","body":"to_string"}"; //the json input\n      String inputString = Convert.ToString(new JValue(jsonInput));\n\n      String result = "";\n      byte[] secretkeyBytes = Encoding.UTF8.GetBytes(key);\n      byte[] inputBytes = Encoding.UTF8.GetBytes(inputString);\n      using (var hmac = new HMACSHA512(secretkeyBytes))\n      {\n          byte[] hashValue = hmac.ComputeHash(inputBytes);\n          result = BitConverter.ToString(hashValue).Replace("-", string.Empty);;\n      }\n      Console.WriteLine(result);\n\n      String xpaystackSignature = ""; //put in the request\'s header value for x-paystack-signature\n  \n      if(result.ToLower().Equals(xpaystackSignature)) {\n          // you can trust the event, it came from paystack\n          // respond with the http 200 response immediately before attempting to process the response\n          //retrieve the request body, and deliver value to the customer\n      } else {\n          // this isn\'t from Paystack, ignore it\n      }\n    }\n  }\n}',s=""},xrvW:function(n,e,t){"use strict";t.r(e),t.d(e,"js",(function(){return a}));var a='var request = require("request");\nvar fs = require("fs");                      \n\nfs.readFile(\'./transaction_reference.pdf\', function(err, data) {\n    var options = {\n     method : "PUT",\n     url : signedUrl,\n     \'Content-Type\': \'application/pdf\',\n     body: data\n    }\n  \n   request(options, function (error, response, body) {\n        if (error) throw new Error(error);\n          console.log(body);\n        console.log("Status code: ", response.statusCode);\n    });\n});'},xt6X:function(n,e,t){"use strict";t.r(e),t.d(e,"java",(function(){return a})),t.d(e,"kotlin",(function(){return r}));var a="@Override\nprotected void onCreate(Bundle savedInstanceState) {\n    super.onCreate(savedInstanceState);\n    setContentView(R.layout.activity_checkout);\n\n\t\t// add these lines\n    initializePaystack();\n    initializeFormVariables();\n}",r="override fun onCreate(savedInstanceState: Bundle?) {\n  super.onCreate(savedInstanceState)\n  setContentView(R.layout.activity_checkout)\n\n  // add these lines\n  initializePaystack()\n  initializeFormVariables()\n}"},yV6a:function(n,e,t){"use strict";t.r(e),t.d(e,"json",(function(){return a}));var a='"metadata":{\n  "cart_id":398,\n  "custom_fields":[\n    {\n      "display_name":"Invoice ID",\n      "variable_name":"Invoice ID",\n      "value":209\n    },\n    {\n      "display_name":"Cart Items",\n      "variable_name":"cart_items",\n      "value":"3 bananas, 12 mangoes"\n    }\n  ]\n}'}}]);
//# sourceMappingURL=component---src-templates-post-template-js-214063541b060bcde768.js.map