(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"++Lo":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/verify/:reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/verify/:reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transfer/verify/:reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"+k7e":function(e){e.exports=JSON.parse('{"create":{"id":"split-create","title":"Create Split","route":"/split","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of the transaction split","required":true},{"param":"type","type":"String","description":"The type of transaction split you want to create. You can use one of the following: percentage | flat","required":true},{"param":"currency","type":"String","description":"Any of NGN, GHS, ZAR, or USD","required":true},{"param":"subaccounts","type":"Array","description":"A list of object containing subaccount code and number of shares: <code>[{subaccount_code: ‘ACT_xxxxxxxxxx’, share: xxx},{...}]</code>","required":true},{"param":"bearer_type","type":"String","description":"Any of subaccount | account | all-proportional | all","required":true},{"param":"bearer_subaccount","type":"String","description":"Subaccount code","required":true}],"query":[],"path":[]},"list":{"id":"split-list","title":"List/Search Splits","route":"/split","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"name","type":"String","description":"The name of the split","required":true},{"param":"active","type":"Boolean","description":"Any of true or false","required":true},{"param":"sort_by","type":"String","description":"Sort by name, defaults to createdAt date","required":false},{"param":"perPage","type":"Integer","description":"Number of splits per page. If not specify we use a default value of 50.","required":false},{"param":"page","type":"Integer","description":"Page number to view. If not specify we use a default value of 1.","required":false},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing splits e.g. <code>2019-09-24T00:00:05.000Z</code>, <code>2019-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing splits e.g. <code>2019-09-24T00:00:05.000Z</code>, <code>2019-09-21</code>","required":false}],"path":[]},"fetch":{"id":"split-fetch","title":"Fetch Split","route":"/split/:id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id","type":"String","description":"The id of the split","required":true}]},"update":{"id":"split-update","title":"Update Split","route":"/split/:id","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of the transaction split","required":true},{"param":"active","type":"Boolean","description":"True or False","required":true},{"param":"bearer_type","type":"String","description":"Any of the following values: subaccount | account | all-proportional | all","required":false},{"param":"subaccount","type":"String","description":"Subaccount code of a subaccount in the split group. This should be specified only if the <code>bearer_type</code> is <code>subaccount</code>","required":false}],"query":[],"path":[{"param":"id","type":"String","description":"Split ID","required":true}]},"add-subaccount":{"id":"split-add-subaccount","title":"Add/Update Split Subaccount","route":"/split/:id/subaccount/add","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"subaccount","type":"String","description":"This is the sub account code","required":true},{"param":"share","type":"Integer","description":"This is the transaction share for the subaccount","required":true}],"query":[],"path":[{"param":"id","type":"String","description":"Split Id","required":true}]},"remove-subaccount":{"id":"split-remove-subaccount","title":"Remove Subaccount from Split","route":"/split/:id/subaccount/remove","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"subaccount","type":"String","description":"This is the sub account code","required":true}],"query":[],"path":[{"param":"id","type":"String","description":"Split Id","required":true}]}}')},"/HFO":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r})),n.d(t,"stat_404",(function(){return s}));var a='{\n  "status": true,\n  "message": "Product retrieved",\n  "data": {\n      "integration": 343288,\n      "name": "Prod 1",\n      "description": "Prod 1",\n      "product_code": "PROD_ohc0xq1ajpt2271",\n      "price": 20000,\n      "currency": "NGN",\n      "quantity": 5,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": false,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": true,\n      "metadata": null,\n      "id": 526,\n      "createdAt": "2019-06-29T14:46:52.000Z",\n      "updatedAt": "2019-06-29T14:46:52.000Z"\n  }\n}',r='{\n  "status": false,\n  "message": "Invalid Key"\n}',s='{\n  "status": false,\n  "message": "Product not found"\n}'},"/aSM":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Split retrieved",\n  "data": [\n    {\n      "id": 143,\n      "name": "Test Doc",\n      "split_code": "SPL_UO2vBzEqHW",\n      "integration": 428626,\n      "domain": "test",\n      "type": "percentage",\n      "active": 1,\n      "currency": "NGN",\n      "bearer_type": "subaccount",\n      "bearer_subaccount": 40809,\n      "created_at": "2020-06-30T11:52:24.000Z",\n      "updated_at": "2020-06-30T11:52:24.000Z",\n      "subaccounts": [\n        {\n          "subaccount": {\n            "id": 40809,\n            "subaccount_code": "ACCT_z3x6z3nbo14xsil",\n            "business_name": "Business Name",\n            "description": "Business Description",\n            "primary_contact_name": null,\n            "primary_contact_email": null,\n            "primary_contact_phone": null,\n            "metadata": null,\n            "percentage_charge": 80,\n            "settlement_bank": "Business Bank",\n            "account_number": "1234567890"\n          },\n          "share": 30\n        },\n        {\n          "subaccount": {\n            "id": 40811,\n            "subaccount_code": "ACCT_pwwualwty4nhq9d",\n            "business_name": "Business Name",\n            "description": "Business Description",\n            "primary_contact_name": null,\n            "primary_contact_email": null,\n            "primary_contact_phone": null,\n            "metadata": null,\n            "percentage_charge": 80,\n            "settlement_bank": "Business Bank",\n            "account_number": "0123456789"\n          },\n          "share": 20\n        }\n      ],\n      "total_subaccounts": 2\n    }\n  ],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},"/nPT":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/submit_phone\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ phone: "08012345678", reference: "5bwib5v6anhe9xa" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"phone\": \"08012345678\",\n  \"reference\": \"5bwib5v6anhe9xa\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/submit_phone',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/charge/submit_phone";\n\n  $fields = [\n    \'phone\' => "08012345678",\n    \'reference\' => "5bwib5v6anhe9xa"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"00mh":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/integration/payment_session_timeout\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ timeout: 30 }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"timeout\": 30\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/integration/payment_session_timeout',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/integration/payment_session_timeout";\n\n  $fields = [\n    \'timeout\' => 30\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"06EG":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r}));var a='{\n  "status": true,\n  "message": "Transfer has been queued",\n  "data": {\n    "domain": "test",\n    "amount": 1000000,\n    "currency": "NGN",\n    "reference": "n7ll9pzl6b",\n    "source": "balance",\n    "source_details": null,\n    "reason": "E go better for you",\n    "status": "success",\n    "failures": null,\n    "transfer_code": "TRF_zuirlnr9qblgfko",\n    "titan_code": null,\n    "transferred_at": null,\n    "id": 529410,\n    "integration": 123460,\n    "recipient": 225204,\n    "createdAt": "2018-08-02T10:02:55.000Z",\n    "updatedAt": "2018-08-02T10:12:05.000Z"\n  }\n}',r='{\n  "status": false,\n  "message": "Transfer code is invalid"\n}'},"0I2F":function(e,t,n){var a=n("q1tI");function r(e){return a.createElement("svg",e,[a.createElement("defs",{key:0},a.createElement("style",null,".cls-1{fill:#001b35;}")),a.createElement("title",{key:1},"In A Nutshell"),a.createElement("path",{className:"cls-1",d:"M7.47,6.08l-.28.28a1.93,1.93,0,0,1-.44-1.78A.5.5,0,0,0,6.49,4L6,3.75a.51.51,0,0,0-.72.32A3.53,3.53,0,0,0,6.05,7.5l-.27.27a6.07,6.07,0,0,0,0,8.58.87.87,0,0,0,1.23,0l9-9a.88.88,0,0,0,0-1.23A6.07,6.07,0,0,0,7.47,6.08Z",key:2}),a.createElement("path",{className:"cls-1",d:"M17.41,11.93a3,3,0,0,1,.84,2.6.67.67,0,0,1-.95.5h0a.71.71,0,0,1-.35-.74,1.66,1.66,0,0,0-.46-1.4l-2.14-2.13-6,6,1.43,1.43c2.32,2.32,5.52,2.94,8,1.05l.34.33a.79.79,0,1,0,1.12-1.12l-.34-.33c1.9-2.46,1.27-5.66-1.05-8L16.4,8.66,15.28,9.79Z",key:3})])}r.defaultProps={id:"Layer_1","data-name":"Layer 1",viewBox:"0 0 24 24"},e.exports=r,r.default=r},"0KS8":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bank/resolve?account_number=0022728151&bank_code=063\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank/resolve?account_number=0022728151&bank_code=063\",\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank/resolve?account_number=0022728151&bank_code=063",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"0rF5":function(e){e.exports=JSON.parse('{"create":{"id":"plan-create","title":"Create Plan","route":"/plan","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of plan","required":true},{"param":"amount","type":"Integer","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"interval","type":"String","description":"Interval in words. Valid intervals are: <code>daily</code>, <code>weekly</code>, <code>monthly</code>,<code>biannually</code>, <code>annually</code>.","required":true},{"param":"description","type":"String","description":"A description for this plan","required":false},{"param":"send_invoices","type":"Boolean","description":"Set to false if you don\'t want invoices to be sent to your customers","required":false},{"param":"send_sms","type":"String","description":"Set to false if you don\'t want text messages to be sent to your customers","required":false},{"param":"currency","type":"String","description":"Currency in which amount is set. Allowed values are NGN, GHS, ZAR or USD","required":false},{"param":"invoice_limit","type":"Integer","description":"Number of invoices to raise during subscription to this plan. Can be overridden by specifying an <code>invoice_limit</code> while subscribing.","required":false}],"query":[],"path":[]},"list":{"id":"plan-list","title":"List Plans","route":"/plan","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"interval","type":"Integer","description":"Filter list by plans with specified interval","required":false},{"param":"amount","type":"Integer","description":"Filter list by plans with specified amount ( <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>)","required":false}],"path":[]},"fetch":{"id":"plan-fetch","title":"Fetch Plan","route":"/plan/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"The plan <code>ID</code> or <code>code</code> you want to fetch","required":true}]},"update":{"id":"plan-update","title":"Update Plan","route":"/plan/:id_or_code","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of plan","required":true},{"param":"amount","type":"Integer","description":"Amount should be in <code>kobo</code> if currency is NGN and <code>pesewas</code> for GHS","required":true},{"param":"interval","type":"String","description":"Interval in words. Valid intervals are <code>hourly</code>, <code>daily</code>, <code>weekly</code>, <code>monthly</code>,<code>biannually</code>, <code>annually</code>.","required":true},{"param":"description","type":"String","description":"A description for this plan","required":false},{"param":"send_invoices","type":"Boolean","description":"Set to false if you don\'t want invoices to be sent to your customers","required":false},{"param":"send_sms","type":"String","description":"Set to false if you don\'t want text messages to be sent to your customers","required":false},{"param":"currency","type":"String","description":"Currency in which amount is set. Any of NGN, GHS, ZAR or USD","required":false},{"param":"invoice_limit","type":"Integer","description":"Number of invoices to raise during subscription to this plan. Can be overridden by specifying an <code>invoice_limit</code> while subscribing.","required":false}],"query":[],"path":[{"param":"id_or_code","type":"String","description":"Plan\'s ID or code","required":true}]}}')},"0zjK":function(e,t,n){var a=n("q1tI");function r(e){return a.createElement("svg",e,[a.createElement("path",{d:"M15.9461 18.3264H7.93945V19.9726H15.9461V18.3264Z",fill:"#728F9E",key:0}),a.createElement("path",{d:"M9.01563 22.4119C9.01559 22.6316 9.10183 22.8425 9.25578 22.9992C9.40973 23.156 9.61907 23.246 9.83874 23.2499H10.2877C10.2916 23.4379 10.369 23.6167 10.5033 23.7482C10.6376 23.8797 10.8181 23.9534 11.0061 23.9533H12.8618C13.0498 23.9534 13.2302 23.8797 13.3645 23.7482C13.4988 23.6167 13.5762 23.4379 13.5802 23.2499H14.0291C14.2488 23.246 14.4581 23.156 14.6121 22.9992C14.766 22.8425 14.8523 22.6316 14.8522 22.4119V21.6636H9.01563V22.4119Z",fill:"#728F9E",key:1}),a.createElement("path",{d:"M10.436 0.21776C9.14638 0.50543 7.96164 1.14465 7.01313 2.06454C6.06463 2.98443 5.38943 4.14905 5.06241 5.42924C4.73538 6.70944 4.76931 8.0552 5.16043 9.3173C5.55155 10.5794 6.28458 11.7085 7.27823 12.5794C7.85865 13.0837 8.31168 13.718 8.60037 14.4306C8.88906 15.1432 9.00523 15.914 8.93942 16.68H14.9257V16.1263C14.9402 15.4546 15.1018 14.7942 15.3991 14.1917C15.6965 13.5893 16.1224 13.0593 16.6468 12.6393C17.4372 11.9724 18.072 11.1404 18.5064 10.2019C18.9408 9.2633 19.1642 8.24095 19.161 7.20674C19.1597 6.13388 18.9176 5.07498 18.4526 4.10814C17.9876 3.14129 17.3115 2.29116 16.4741 1.62042C15.6368 0.949681 14.6595 0.475446 13.6145 0.232682C12.5695 -0.0100814 11.4833 -0.0151806 10.436 0.21776V0.21776ZM16.4223 6.03942H14.9257V5.93466C14.9218 5.42782 14.7187 4.94284 14.3603 4.58444C14.0019 4.22604 13.5169 4.02296 13.0101 4.01905C12.8937 4.03485 12.7753 4.02556 12.6628 3.99181C12.5503 3.95806 12.4464 3.90062 12.3579 3.82336C12.2694 3.7461 12.1985 3.65081 12.15 3.54388C12.1014 3.43695 12.0762 3.32086 12.0762 3.20342C12.0762 3.08597 12.1014 2.96988 12.15 2.86295C12.1985 2.75603 12.2694 2.66073 12.3579 2.58347C12.4464 2.50621 12.5503 2.44878 12.6628 2.41503C12.7753 2.38127 12.8937 2.37199 13.0101 2.38779C13.9272 2.42264 14.7952 2.81166 15.4315 3.47309C16.0678 4.13451 16.4229 5.01685 16.4223 5.93466V6.03942Z",fill:"#728F9E",key:2})])}r.defaultProps={width:"24",height:"24",viewBox:"0 0 24 24",fill:"none"},e.exports=r,r.default=r},"1+Mt":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/verify/:code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/verify/:code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/paymentrequest/verify/:code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"1+jd":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Recipient created",\n  "data": {\n    "type": "nuban",\n    "name": "Zombie",\n    "description": "Zombier",\n    "metadata": {\n      "job": "Flesh Eater"\n    },\n    "domain": "test",\n    "details": {\n      "account_number": "0100000010",\n      "account_name": null,\n      "bank_code": "044",\n      "bank_name": "Access Bank"\n    },\n    "currency": "NGN",\n    "recipient_code": "RCP_1i2k27vk4suemug",\n    "active": true,\n    "id": 27,\n    "createdAt": "2017-02-02T19:35:33.686Z",\n    "updatedAt": "2017-02-02T19:35:33.686Z"\n  }\n}'},"1+n/":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X DELETE',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transferrecipient/:id_or_code',\n  method: 'DELETE',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transferrecipient/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "DELETE",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"1TTo":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subaccount\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subaccount,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/subaccount,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"1jh5":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/paymentrequest/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"22f2":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Account number resolved",\n  "data": {\n    "account_number": "0022728151",\n    "account_name": "WES GIBBONS"\n  }\n}'},"25KT":function(e){e.exports=JSON.parse('{"create":{"id":"charge-create","title":"Create Charge","route":"/charge","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"email","type":"String","description":"Customer\'s email address","required":true},{"param":"amount","type":"String","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"bank","type":"Object","description":"Bank account to charge (don\'t send if charging an authorization code)","required":false},{"param":"authorization_code","type":"String","description":"An authorization code to charge (don\'t send if charging a bank account)","required":false},{"param":"pin","type":"String","description":"4-digit PIN (send with a non-reusable authorization code)","required":false},{"param":"metadata","type":"Object","description":"A JSON object","required":false},{"param":"reference","type":"String","description":"Unique transaction reference. Only <code>-</code>, <code>.`</code>, <code>=</code> and alphanumeric characters allowed.","required":false},{"param":"ussd","type":"Object","description":"USSD type to charge (don\'t send if charging an authorization code, bank or card)","required":false},{"param":"mobile_money","type":"Object","description":"Mobile details (don\'t send if charging an authorization code, bank or card)","required":false},{"param":"device_id","type":"String","description":"This is the unique identifier of the device a user uses in making payment. Only <code>-</code>, <code>.`</code>, <code>=</code> and alphanumeric characters allowed.","required":false}],"query":[],"path":[]},"submit-pin":{"id":"charge-submit-pin","title":"Submit PIN","route":"/charge/submit_pin","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"pin","type":"String","description":"PIN submitted by user","required":true},{"param":"reference","type":"String","description":"Reference for transaction that requested pin","required":true}],"query":[],"path":[]},"submit-otp":{"id":"charge-submit-otp","title":"Submit OTP","route":"/charge/submit_otp","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"otp","type":"String","description":"OTP submitted by user","required":true},{"param":"reference","type":"String","description":"Reference for ongoing transaction","required":true}],"query":[],"path":[]},"submit-phone":{"id":"charge-submit-phone","title":"Submit Phone","route":"/charge/submit_phone","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"phone","type":"String","description":"Phone submitted by user","required":true},{"param":"reference","type":"String","description":"Reference for ongoing transaction","required":true}],"query":[],"path":[]},"submit-birthday":{"id":"charge-submit-birthday","title":"Submit Birthday","route":"/charge/submit_birthday","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"birthday","type":"Date","description":"Birthday submitted by user e.g. <strong>2016-09-21</strong>","required":true},{"param":"reference","type":"String","description":"Reference for ongoing transaction","required":true}],"query":[],"path":[]},"submit-address":{"id":"charge-submit-address","title":"Submit Address","route":"/charge/submit_address","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"address","type":"String","description":"Address submitted by user","required":true},{"param":"reference","type":"String","description":"Reference for ongoing transaction","required":true},{"param":"city","type":"String","description":"City submitted by user","required":true},{"param":"state","type":"String","description":"State submitted by user","required":true},{"param":"zipcode","type":"String","description":"Zipcode submitted by user","required":true}],"query":[],"path":[]},"check":{"id":"charge-check","title":"Check Pending Charge","route":"/charge/:reference","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"reference","type":"String","description":"The reference to check","required":true}]}}')},"2MXo":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r})),n.d(t,"stat_404",(function(){return s}));var a='{\n  "status": true,\n  "message": "Products added to page",\n  "data": {\n    "integration": 343288,\n    "plan": null,\n    "domain": "test",\n    "name": "Demo Products Page",\n    "description": "Demo Products Page",\n    "amount": null,\n    "currency": "NGN",\n    "slug": "demoproductspage",\n    "custom_fields": [],\n    "type": "product",\n    "redirect_url": null,\n    "success_message": null,\n    "collect_phone": false,\n    "active": true,\n    "published": true,\n    "migrate": true,\n    "notification_email": null,\n    "metadata": {},\n    "id": 102859,\n    "createdAt": "2019-06-29T16:21:24.000Z",\n    "updatedAt": "2019-06-29T16:28:11.000Z",\n    "products": [\n      {\n        "product_id": 523,\n        "name": "Product Four",\n        "description": "Product Four Description",\n        "product_code": "PROD_l9p81u9pkjqjunb",\n        "page": 102859,\n        "price": 500000,\n        "currency": "NGN",\n        "quantity": 0,\n        "type": "good",\n        "features": null,\n        "is_shippable": 0,\n        "domain": "test",\n        "integration": 343288,\n        "active": 1,\n        "in_stock": 1\n      }\n    ]\n  }\n}',r='\n{\n  "status": false,\n  "message": "Product does not exist",\n  "data": {\n    "product": 32\n  }\n}',s='{\n  "status": false,\n  "message": "Page not found"\n}'},"2cC8":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/finalize_transfer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "transfer_code": "TRF_vsyqdmlzble3uii", "otp": "928783" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"transfer_code\": \"TRF_vsyqdmlzble3uii\", \n  \"otp\": \"928783\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/finalize_transfer',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer/finalize_transfer";\n\n  $fields = [\n    "transfer_code" => "TRF_vsyqdmlzble3uii", \n    "otp" => "928783"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"2krq":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/timeline/:id_or_reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/timeline/:id_or_reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/timeline/:id_or_reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"2y3F":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a}));var a='{\n  "status": true,\n  "message": "Export successful",\n  "data": {\n    "path": "https://files.paystack.co/exports/100032/1460290758207.csv"\n  }\n}'},"3RBl":function(e){e.exports=JSON.parse('{"match-bvn":{"id":"verification-match-bvn","title":"Verify BVN Match","route":"/bvn/match","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"account_number","type":"String","description":"Bank Account Number","required":true},{"param":"bank_code","type":"Integer","description":"You can get the list of banks codes  by calling the <a href=\\"#miscellaneous-bank\\">List Bank</a> endpoint","required":true},{"param":"bvn","type":"String","description":"11 digits Bank Verification Number","required":true},{"param":"first_name","type":"String","description":"Customer\'s First Name","required":false},{"param":"middle_name","type":"String","description":"Customer\'s Middle Name","required":false},{"param":"last_name","type":"String","description":"Customer\'s Last Name","required":false}],"query":[],"path":[]},"resolve-account":{"id":"verification-resolve-account","title":"Resolve Account Number","route":"/bank/resolve","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"account_number","type":"String","description":"Account Number","required":true},{"param":"bank_code","type":"String","description":"You can get the list of bank codes by calling the <a href=\\"#miscellaneous-bank\\">List Bank</a> endpoint","required":true}],"path":[]},"resolve-card":{"id":"verification-resolve-card","title":"Resolve Card BIN","route":"/decision/bin/:bin","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"bin","type":"String","description":"First 6 characters of card","required":true}]}}')},"3UeP":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "refund_amount": 1002 }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"refund_amount\": 1002\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/:id',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/dispute/:id";\n\n  $fields = [\n    "refund_amount" => 1002\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"3V6g":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_failed",(function(){return a})),n.d(t,"stat_200",(function(){return r})),n.d(t,"stat_400",(function(){return s}));var a='{\n  "status": false,\n  "message": "Charge attempted",\n  "data": {\n      "status": "failed",\n      "message": "Insufficient funds"\n  }\n}',r='{\n  "message": "Charge attempted",\n  "status": true,\n  "data": {\n    "message": "",\n    "paidAt": "2020-05-21T15:16:00.000Z",\n    "plan": null,\n    "log": null,\n    "ip_address": "35.177.113.19",\n    "createdAt": "2020-05-21T15:14:25.000Z",\n    "domain": "live",\n    "fees": 390,\n    "metadata": "",\n    "requested_amount": 10000,\n    "id": 102039,\n    "currency": "NGN",\n    "status": "success",\n    "transaction_date": "2020-05-21T15:14:25.000Z",\n    "reference": "7c7rpkqpc0tijs8",\n    "subaccount": {},\n    "customer": {\n      "email": "femi@paystack.com",\n      "last_name": "ALUKO",\n      "metadata": null,\n      "customer_code": "CUS_bpy9ciomcstg55y",\n      "risk_action": "default",\n      "first_name": "FEMI",\n      "phone": "",\n      "id": 16200\n    },\n    "order_id": null,\n    "plan_object": {},\n    "authorization": {\n      "signature": "SIG_5wBvKoAT64nwSJgZkHvQ",\n      "authorization_code": "AUTH_82e26bc6yb",\n      "reusable": true,\n      "exp_month": "08",\n      "card_type": "visa DEBIT",\n      "last4": "4633",\n      "account_name": null,\n      "channel": "card",\n      "brand": "visa",\n      "country_code": "US",\n      "bin": "440066",\n      "bank": "",\n      "exp_year": "2024",\n      "account_name": "BoJack Horseman"\n    },\n    "channel": "card",\n    "amount": 10000,\n    "created_at": "2020-05-21T15:14:25.000Z",\n    "gateway_response": "Approved",\n    "fees_split": null,\n    "paid_at": "2020-05-21T15:16:00.000Z"\n  }\n}',s='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},"3gyW":function(e){e.exports=JSON.parse('{"create":{"id":"subaccount-create","title":"Create Subaccount","route":"/subaccount","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"business_name","type":"String","description":"Name of business for subaccount","required":true},{"param":"settlement_bank","type":"String","description":"Bank Code for the bank. You can get the list of Bank Codes by calling the <a href=\\"#miscellaneous-bank\\">List Banks</a> endpoint.","required":true},{"param":"account_number","type":"String","description":"Bank Account Number","required":true},{"param":"percentage_charge","type":"Float","description":"The default percentage charged when receiving on behalf of this subaccount","required":true},{"param":"description","type":"String","description":"A description for this subaccount","required":true},{"param":"primary_contact_email","type":"String","description":"A contact email for the subaccount","required":false},{"param":"primary_contact_name","type":"String","description":"A name for the contact person for this subaccount","required":false},{"param":"primary_contact_phone","type":"String","description":"A phone number to call for this subaccount","required":false},{"param":"metadata","type":"String","description":"Stringified JSON object. Add a <code>custom_fields</code> attribute which has an array of objects if you would like the fields to be added to your transaction when displayed on the dashboard. Sample: <code>{\\"custom_fields\\":[{\\"display_name\\":\\"Cart ID\\",\\"variable_name\\": \\"cart_id\\",\\"value\\": \\"8393\\"}]}</code>","required":false}],"query":[],"path":[]},"list":{"id":"subaccount-list","title":"List Subaccounts","route":"/subaccount","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing subaccounts e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing subaccounts e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"subaccount-fetch","title":"Fetch Subaccount","route":"/subaccount/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"The subaccount <code>ID</code> or <code>code</code> you want to fetch","required":true}]},"update":{"id":"subaccount-update","title":"Update Subaccount","route":"/subaccount/:id_or_code","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"business_name","type":"String","description":"Name of business for subaccount","required":true},{"param":"settlement_bank","type":"String","description":"Bank Code for the bank. You can get the list of Bank Codes by calling the <a href=\\"#miscellaneous-bank\\">List Banks</a> endpoint.","required":true},{"param":"account_number","type":"String","description":"Bank Account Number","required":false},{"param":"active","type":"Boolean","description":"Activate or deactivate a subaccount. Set value to <code>true</code> to activate subaccount or <code>false</code> to deactivate the subaccount.","required":false},{"param":"percentage_charge","type":"Float","description":"The default percentage charged when receiving on behalf of this subaccount","required":false},{"param":"description","type":"String","description":"A description for this subaccount","required":false},{"param":"primary_contact_email","type":"String","description":"A contact email for the subaccount","required":false},{"param":"primary_contact_name","type":"String","description":"A name for the contact person for this subaccount","required":false},{"param":"primary_contact_phone","type":"String","description":"A phone number to call for this subaccount","required":false},{"param":"settlement_schedule","type":"String","description":"Any of <code>auto</code>, <code>weekly</code>, `monthly`, `manual`. Auto means payout is T+1 and manual means payout to the subaccount should only be made when requested. Defaults to <code>auto</code>","required":false},{"param":"metadata","type":"String","description":"Stringified JSON object. Add a <code>custom_fields</code> attribute which has an array of objects if you would like the fields to be added to your transaction when displayed on the dashboard. Sample: <code>{\\"custom_fields\\":[{\\"display_name\\":\\"Cart ID\\",\\"variable_name\\": \\"cart_id\\",\\"value\\": \\"8393\\"}]}</code>","required":false}],"query":[],"path":[{"param":"id_or_code","type":"String","description":"Subaccount\'s ID or code","required":true}]}}')},"3jXp":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Pages retrieved",\n  "data": [\n    {\n      "integration": 100073,\n      "plan": 1716,\n      "domain": "test",\n      "name": "Subscribe to plan: Weekly small chops",\n      "description": null,\n      "amount": null,\n      "currency": "NGN",\n      "slug": "sR7Ohx2iVd",\n      "custom_fields": null,\n      "redirect_url": null,\n      "active": true,\n      "migrate": null,\n      "id": 2223,\n      "createdAt": "2016-10-01T10:59:11.000Z",\n      "updatedAt": "2016-10-01T10:59:11.000Z"\n    },\n    {\n      "integration": 100073,\n      "plan": null,\n      "domain": "test",\n      "name": "Special",\n      "description": "Special page",\n      "amount": 10000,\n      "currency": "NGN",\n      "slug": "special-me",\n      "custom_fields": [\n        {\n          "display_name": "Speciality",\n          "variable_name": "speciality"\n        },\n        {\n          "display_name": "Age",\n          "variable_name": "age"\n        }\n      ],\n      "redirect_url": "http://special.url",\n      "active": true,\n      "migrate": null,\n      "id": 1807,\n      "createdAt": "2016-09-09T19:18:37.000Z",\n      "updatedAt": "2016-09-14T17:51:49.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": "3",\n    "page": 1,\n    "pageCount": 1\n  }\n}'},"3ot7":function(e,t,n){},"3plp":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transactions retrieved",\n  "data": [\n    {\n      "id": 480955498,\n      "reference": "T807207882369486",\n      "amount": 10000000,\n      "created_at": "2020-02-07T06:36:51.000Z",\n      "paidAt": "2020-02-07T06:39:34.000Z",\n      "currency": "NGN",\n      "channel": "card",\n      "domain": "live",\n      "message": null,\n      "gateway_response": "Approved",\n      "fees": 0\n    },\n    {\n      "id": 480806874,\n      "reference": "T590843487090242",\n      "amount": 100000,\n      "created_at": "2020-02-07T05:22:10.000Z",\n      "paidAt": "2020-02-07T05:23:29.000Z",\n      "currency": "NGN",\n      "channel": "card",\n      "domain": "live",\n      "message": null,\n      "gateway_response": "Approved",\n      "fees": 0\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "total_volume": 10100000,\n    "skipped": 0,\n    "perPage": 100,\n    "page": 1,\n    "pageCount": 0\n  }\n}'},"3s0q":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/charge_authorization\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000", "authorization_code": "AUTH_72btv547" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"authorization_code\": \"AUTH_72btv547\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/charge_authorization',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transaction/charge_authorization";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    "authorization_code": "AUTH_72btv547"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"4/pF":function(e,t,n){"use strict";n.r(t);var a=n("q1tI"),r=n.n(a),s=n("vrFN"),o=(n("sx8e"),n("Wbzz")),i=(n("lWWd"),n("YLfg")),c=n.n(i),u=n("DNtJ"),l=n("KEVo"),d=n.n(l),p=(n("NTr6"),n("djUW"),function(e){var t=Object(a.useState)(!1),n=t[0],s=t[1],o=Object(a.useState)("Search API Reference"),i=o[0],l=o[1],p=Object(a.useState)(""),h=p[0],m=p[1],_=Object(a.useState)([]),E=_[0],f=_[1],y=c()("BH4D9OD16A","bedf045e1f4ff9192ddef9ef456cd5ac").initIndex("paystack"),T=Object(a.useRef)();Object(a.useEffect)((function(){e.isSearchMobile&&T.current&&T.current.focus()}),[e.isSearchMobile]),Object(a.useEffect)((function(){y.search(h,{attributesToRetrieve:["content","hierarchy","url"],hitsPerPage:10}).then((function(e){var t=e.hits;f(t)}))}),[h]);var g=function(){e.isSearchMobile&&e.toggleSearch(),m(""),f([]),s(!1),l("Search API Reference")};return r.a.createElement("div",{className:"api-search search "+(e.isSearchMobile?"search--mobile":"")},r.a.createElement("div",{className:"search__field "+(e.isSearchMobile?"search__field--mobile":"")},r.a.createElement("input",{ref:T,className:"search__field__input "+(n?"search__field__icon--left--active":"")+" ",type:"text",name:"query",value:h,placeholder:i,title:i,onFocus:function(){s(!n),l("")},onBlur:function(){e.toggleSearch.bind(void 0),setTimeout((function(){g()}),150)},onChange:function(e){m(e.target.value)},autoComplete:"off"}),r.a.createElement(d.a,{className:"search__field__icon search__field__icon--left \n\t\t\t\t\t"+(n?"search__field__icon--left--active":"")}),r.a.createElement("span",{className:"search__field__icon--right "+(n?"search__field__icon--right--active":""),onClick:g},"Cancel")),r.a.createElement("div",{className:"api-search__result search__result "+(n?"api-search__result--active search__result--active":"")+" \n\t\t\t\t"+(e.isSearchMobile?"search__result--active search__result--mobile api-search__result--mobile":"")},r.a.createElement("div",{className:"result__loading "+(h.length>0?"result__loading--active":"")+" \n\t\t\t\t\t"+(e.isSearchMobile?"result__loading--mobile":"")},E&&E.length>0?r.a.createElement(u.a,{hits:E,clearSearch:g,tag:"api",hasIcon:"true"}):r.a.createElement("div",{className:"no-result"},r.a.createElement("p",null,"No result found for: ",r.a.createElement("strong",null,h)))),r.a.createElement("div",{className:"search__footer "+(h.length>0?"search__footer--active":"")},r.a.createElement("a",{href:"https://www.algolia.com/ref/docsearch/",target:"_blank"}))))}),h=n("XvTf"),m=n.n(h),_=function(e){return r.a.createElement("header",{className:"header api-header"},r.a.createElement("div",{className:"api-header-logo"},r.a.createElement(o.Link,{to:"/api"},r.a.createElement(m.a,null),r.a.createElement("span",null,"api"))),r.a.createElement("div",{className:"api-header-search"},r.a.createElement(p,{isSearchMobile:e.isSearchMobile,toggleSearch:e.toggleSearch})),r.a.createElement("div",{className:"api-header-actions"},r.a.createElement("div",{className:"header-actions--web"}),r.a.createElement("div",null),r.a.createElement("div",null,r.a.createElement("a",{className:"api-link-text",href:"https://paystack.com/docs",target:"_blank",rel:"noopener noreferrer"},"Docs")),r.a.createElement("div",null,r.a.createElement("a",{className:"api-link-button",href:"https://dashboard.paystack.com/",target:"_blank",rel:"noopener noreferrer"},"Sign up"))))},E=(n("f9oa"),n("+24I")),f=n.n(E),y=n("GX2O"),T=n.n(y),g=n("F1ej"),R=n.n(g),b=n("Sd0J"),S=n.n(b),C=function(e){var t,n=Object(o.useStaticQuery)("1358771737"),a=function(e){return e.replace("/","#").replace("/","-")};return r.a.createElement("div",{className:"nav"},r.a.createElement("div",{className:"nav__action"},r.a.createElement("button",{className:"action__button",onClick:e.toggleNav},r.a.createElement(S.a,{className:"action__button__icon"}),r.a.createElement("span",{className:"action__button__text action__button__text--right"},"Close"))),r.a.createElement("div",{className:"nav-static"},r.a.createElement("ul",null,r.a.createElement("li",{className:"api-static-item"},r.a.createElement("a",{href:"#introduction"},r.a.createElement("span",null,r.a.createElement(f.a,null)),r.a.createElement("span",null,"Introduction"))),r.a.createElement("li",{className:"api-static-item"},r.a.createElement("a",{href:"#authentication"},r.a.createElement("span",null,r.a.createElement(T.a,null)),r.a.createElement("span",null,"Authentication"))),r.a.createElement("li",{className:"api-static-item"},r.a.createElement("a",{href:"#errors"},r.a.createElement("span",null,r.a.createElement(R.a,null)),r.a.createElement("span",null,"Errors"))))),r.a.createElement("div",{className:"nav-dynamic"},r.a.createElement("div",{className:"nav-dynamic--label"},r.a.createElement("span",null,"API Endpoints"),r.a.createElement("hr",null)),r.a.createElement("ul",{className:"api-main-menu"},(t=[],n.allApisJson.edges.map((function(e,n){t.push(r.a.createElement("li",{key:n},r.a.createElement("a",{href:a(e.node.route)},e.node.title),e.node.items.length>0&&r.a.createElement("ul",{className:"api-sub-menu"},e.node.items.map((function(e,t){return r.a.createElement("li",{key:t},r.a.createElement("a",{href:a(e.route)},e.title))})))))})),t))))},O=n("t8Zj"),P=(n("wr/o"),n("vCUy")),q=n("QmSB"),U=function(e){var t=e.link,n=e.title;return r.a.createElement(r.a.Fragment,null,r.a.createElement("a",{href:t,target:"_blank",rel:"noopener noreferrer"},n))},v=n("vOnD"),k=v.a.ul.withConfig({displayName:"TabLinks__TabLink",componentId:"lh6o23-0"})(["margin:0px;padding:0px;list-style:none;padding:8px 16px 0px;"]),N=v.a.li.withConfig({displayName:"TabLinks__Tag",componentId:"lh6o23-1"})(["color:rgba(246,252,255,0.6);;display:inline-block;padding:8px 0;font-weight:500;font-size:14px;"]),A=v.a.li.withConfig({displayName:"TabLinks__Link",componentId:"lh6o23-2"})(["color:##F6FCFF;opacity:0.4;display:inline-block;padding:8px 16px;cursor:pointer;font-weight:500;font-size:14px;transition:0.2s ease color;&.active{color:##F6FCFF;opacity:1;border-bottom:2px solid #09A5DB;margin-bottom:-1px;}&:hover{color:##F6FCFF;opacity:1;}"]),L=function(e){var t=e.links,n=e.language,a=e.onTabClick;return r.a.createElement(k,null,Object.keys(t).map((function(e){return 1===Object.keys(t).length?r.a.createElement(N,{key:e},t[e]):r.a.createElement(A,{key:e,className:n===e?"active":"",onClick:function(){return a(e)}},t[e])})))},$=n("3Mpw"),j=n("eHPy"),H=v.a.div.withConfig({displayName:"TabContent__Container",componentId:"sc-6w9l1s-0"})(["padding:0px;"]),w=v.a.pre.withConfig({displayName:"TabContent__Pre",componentId:"sc-6w9l1s-1"})(["position:relative;text-align:left;padding:24px 16px;margin:0px;overflow-x:auto;border-bottom-right-radius:6px;border-bottom-left-radius:6px;background-color:#011B33;max-height:300px;& .token-line{line-height:1.5;}"]),z=v.a.span.withConfig({displayName:"TabContent__LineNo",componentId:"sc-6w9l1s-2"})(["display:inline-block;width:2em;user-select:none;opacity:0.3;"]),B=function(e){var t=e.language,n=e.codeString;return r.a.createElement(H,null,r.a.createElement($.a,Object.assign({},$.b,{theme:j.a,code:n,language:t}),(function(e){var t=e.tokens,n=e.getLineProps,a=e.getTokenProps;return r.a.createElement(w,null,t.map((function(e,t){return r.a.createElement("div",n({line:e,key:t}),r.a.createElement(z,null,t+1),e.map((function(e,t){return r.a.createElement("span",a({token:e,key:t}))})))})))})))},I=v.a.div.withConfig({displayName:"Tabs__Tab",componentId:"zh3e4g-0"})(["margin:30px 0;background-color:rgba(1,27,51,0.9);opacity:0.9;border:1px solid #0000000f;border-radius:12px;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);"]),x=function(e){var t=e.links,s=e.filepath,o=n("ZINq")("./api-snippets"+s),i=Object(a.useState)(Object.keys(t)[0]),c=i[0],u=i[1],l=Object(a.useState)(o[c]),d=l[0],p=l[1];return r.a.createElement(I,null,r.a.createElement(L,{links:t,language:c,onTabClick:function(e){u(e),p(o[e])}}),r.a.createElement(B,{language:c,codeString:d}))},F=(n("lPj/"),function(e){var t=Object(a.useState)(!1),n=t[0],s=t[1],o=function(e){return e.reduce((function(e,t){return e[t.required]=[].concat(Object(O.a)(e[t.required]||[]),[t]),e}),{})};return r.a.createElement(r.a.Fragment,null,"true"===e.hasOptional?r.a.createElement("table",{className:"params-holder"},r.a.createElement("caption",{className:"params-group"},e.title),r.a.createElement("tbody",null,o(e.data).true.map((function(e,t){return r.a.createElement("tr",{key:t},r.a.createElement("td",{className:"param-details"},r.a.createElement("div",{className:"param param-name"},e.param),r.a.createElement("div",{className:"param param-type"},e.type)),r.a.createElement("td",{dangerouslySetInnerHTML:{__html:e.description}}))})),o(e.data).false.map((function(e,t){return r.a.createElement("tr",{className:"param-optional "+(n?"active":""),key:t},r.a.createElement("td",{className:"param-details"},r.a.createElement("div",{className:"param param-name"},e.param),r.a.createElement("div",{className:"param param-type"},e.type)),r.a.createElement("td",null,r.a.createElement("div",{className:"param param-desc",dangerouslySetInnerHTML:{__html:e.description}})))}))),"true"===e.hasOptional?r.a.createElement("tbody",null,r.a.createElement("tr",{className:"optional-toggle",onClick:function(){s(!n)}},r.a.createElement("th",{className:"optional-toggle__title",colSpan:"3"},r.a.createElement("span",{className:"optional-toggle-icon "+(n?"active":"")}),r.a.createElement("span",{className:"optional-toggle-text"},n?"Hide":"Show"," optional parameters")))):" "):r.a.createElement("table",{className:"params-holder"},r.a.createElement("caption",{className:"params-group"},e.title),r.a.createElement("tbody",null,o(e.data).true.map((function(e,t){return r.a.createElement("tr",{key:t},r.a.createElement("td",{className:"param-details"},r.a.createElement("div",{className:"param param-name"},e.param),r.a.createElement("div",{className:"param param-type"},e.type)),r.a.createElement("td",{dangerouslySetInnerHTML:{__html:e.description}}))})))))}),Y=function(e){var t=e.id?{id:e.id}:{};return r.a.createElement(r.a.Fragment,null,3===e.children.length?r.a.createElement("section",t,r.a.createElement("div",{className:"api-section"},r.a.createElement("div",{className:"api-section--copy"},r.a.createElement("div",null,e.children[0])),0!==Object.keys(e.children[1].props).length&&e.children[1].props.constructor===Object&&r.a.createElement("div",{className:"api-section--code"},e.children[1])),r.a.createElement(r.a.Fragment,null,e.children[2])):2===e.children.length?r.a.createElement("section",t,r.a.createElement("div",{className:"api-section"},r.a.createElement("div",{className:"api-section--copy"},r.a.createElement("div",null,e.children[0])),r.a.createElement("div",{className:"api-section--code"},e.children[1]))):r.a.createElement("section",t,r.a.createElement("div",{className:"api-section"},r.a.createElement("div",{className:"api-section--copy"},r.a.createElement("div",null,e.children)))))},K=function(){return r.a.createElement(Y,{id:"section-introduction"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",null,r.a.createElement(q.a,{type:"h1",title:"Introduction",id:"introduction"}),r.a.createElement("p",null,"Learn how to integrate our APIs into your application")),r.a.createElement("section",null,r.a.createElement(q.a,{type:"h2",title:"API Basics",id:"introduction-api-basics"}),r.a.createElement("p",null,"The Paystack API gives you access to pretty much all the features you can use on our dashboard and lets you extend them for use in your application. It strives to be RESTful and is organized around the main resources you would be interacting with - with a few notable exceptions."),r.a.createElement(P.a,{type:"info",title:"Before you do anything"},"You should ",r.a.createElement(U,{link:"https://dashboard.paystack.co/#/signup",title:"create a free Paystack account"})," that you can test the API against. We will provide you with test keys that you can use to make API calls")),r.a.createElement("section",null,r.a.createElement(q.a,{type:"h2",title:"Sample Requests",id:"introduction-sample-requests"}),r.a.createElement("p",null,"We provide sample API calls next to each method using ",r.a.createElement(U,{link:"http://curl.haxx.se/",title:"cURL"}),". All you need to do is insert your specific parameters, and you can test the calls from the command line. See this tutorial on ",r.a.createElement(U,{link:"https://www.baeldung.com/curl-rest",title:"using cURL with APIs"}),"."),r.a.createElement("p",null,"You can also use ",r.a.createElement(U,{link:"https://www.getpostman.com/downloads/",title:"Postman"})," if you aren't familiar with cURL. Postman is an easy to use API development environment for making HTTP requests. You can download the ",r.a.createElement(U,{link:"https://documenter.getpostman.com/view/2770716/paystack-api/7187aMn?version=latest",title:"Paystack Postman Collection"})," to make testing the API easier.")),r.a.createElement("section",null,r.a.createElement(q.a,{type:"h2",title:"Requests and Response",id:"introduction-requests-response"}),r.a.createElement("p",null,"Both request body data and response data are formatted as JSON. Content type for responses will always be ",r.a.createElement("code",null,"application/json"),". Generally, all responses will be in the following format: "),r.a.createElement(x,{links:{json:"Response Format"},filepath:"/introduction/response-format.js"}),r.a.createElement("p",null,"While we generally recommend that developers use HTTP status codes to determine the result of an API call, we have provided a handy ",r.a.createElement("code",null,"status")," key to let you know upfront if the request was successful or not."),r.a.createElement("p",null,"The message key is a string which will contain a summary of the response and its status. For instance when trying to retrieve a list of customers, message might read “Customers retrieved”. In the event of an error, the message key will contain a description of the error as with the authorization header situation above. This is the only key that is universal across requests."),r.a.createElement("p",null,"The data key is where you want to look at for the result of your request. It can either be an object, or an array depending on the request made. For instance, a request to retrieve a single customer will return a customer object in the data key, while the key would be an array of customers if a list is requested instead."),r.a.createElement("p",null,"The meta key is used to provide context for the contents of the data key. For instance, if a list of transactions performed by a customer is being retrieved, pagination parameters can be passed along to limit the result set. The meta key will then contain an object with the following attributes:"),r.a.createElement(x,{links:{json:"Meta Key Structure"},filepath:"/introduction/meta-format.js"}),r.a.createElement(F,{title:"Keys",hasOptional:"false",data:[{param:"Total",type:"Number",description:"This is the total number of transactions that were performed by the customer.",required:!0},{param:"Skipped",type:"Number",description:"This is the number of records skipped before the first record in the array returned.",required:!0},{param:"PerPage",type:"Number",description:"<span>This is the maximum number of records that will be returned per request. This can be modified by passing a  new value as a <code>perPage</code> query parameter. <strong>Default: 50</strong></span>",required:!0},{param:"Page",type:"Number",description:"<span>This is the current <code>page</code> being returned. This is dependent on what page was requested using the <code>page</code> query parameter. <strong>Default: 1</strong></span>",required:!0},{param:"PageCount",type:"Number",description:"This is how many pages in total are available for retrieval considering the maximum records per page specified. For context, if there are 51 records and perPage is left at its default value, pageCount will have a value of 2.",required:!0}]}))))},G=function(){return r.a.createElement(Y,{id:"section-authentication"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h1",title:"Authentication",id:"authentication"}),r.a.createElement("section",null,r.a.createElement("p",null,"Authenticate your API calls by including your secret key in the Authorization header of every request you make. You can manage your API keys from the ",r.a.createElement(U,{link:"https://dashboard.paystack.co/#/settings/developer",title:"dashboard"})," ."),r.a.createElement("p",null,"Generally, we provide both public and secret keys. Public keys are meant to be used from your front-end when integrating using Paystack Inline and in our Mobile SDKs only. By design, public keys cannot modify any part of your account besides initiating transactions to you. The secret keys however, are to be kept secret. If for any reason you believe your secret key has been compromised or you wish to reset them, you can do so from the dashboard."),r.a.createElement(P.a,{type:"danger",title:"Secure your secret key"},"Do not commit your secret keys to git, or use them in client-side code."),r.a.createElement("p",null,"Authorization headers should be in the following format: ",r.a.createElement("code",null,"Authorization: Bearer SECRET_KEY")),r.a.createElement(P.a,{type:"info",title:"Sample Authorization Header"},"Authorization: Bearer sk_test_shdjkhdj827391nV4Lid"),r.a.createElement("p",null,"API requests made without authentication will fail with the status code ",r.a.createElement("code",null,"401: Unauthorized"),". All API requests must be made over HTTPS."),r.a.createElement(P.a,{type:"danger",title:"Secure your requests"},"Do not set ",r.a.createElement("code",null,"VERIFY_PEER")," to ",r.a.createElement("code",null,"FALSE"),". Ensure your server verifies the SSL connection to Paystack."))))},D=n("DNlv"),Z=function(){return r.a.createElement(Y,{id:"section-errors",code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h1",title:"Errors",id:"errors"}),r.a.createElement("section",null,r.a.createElement("p",null,"As stated earlier, Paystack's API is RESTful and as such, uses conventional HTTP response codes to indicate the success or failure of requests."),r.a.createElement("p",null,"We discuss some common errors and their causes below")),r.a.createElement("section",null,r.a.createElement("h3",null,"Authorization code does not exist or has been deactivated"),r.a.createElement(D.a,{items:[r.a.createElement("span",null,"All authorizations are inactive until one transaction succeeds on the card. Attempting charge auth on an inactive authorization will give this message."),r.a.createElement("span",null,"You can only charge an authorization for the customer who saved it. If an authorization is paired with the wrong email, you may get this error message.")]})),r.a.createElement("section",null,r.a.createElement("h3",null,"This authorization is not reusable"),r.a.createElement("p",null,"Only reusable authorizations can be used with our charge authorization endpoint. Please confirm reusability on the authorization object before making an attempt to avoid this message.")),r.a.createElement("section",null,r.a.createElement("h3",null,"Invalid Subaccount"),r.a.createElement("p",null,"All subaccounts codes on Paystack start with ",r.a.createElement("code",null,"ACCT_")," and only exist on the integration that created them. And in the domain they were created. Common situations when you will get this message include:"),r.a.createElement(D.a,{items:[r.a.createElement("span",null,"Sending subaccount id or name or any value other than a valid code. Rather don't send any subaccount if you do not intend to split the transaction."),r.a.createElement("span",null,"Sending subaccount code from another integration."),r.a.createElement("span",null,"Sending subaccount code created in the test domain while specifying a live key and vice-versa.")]})),r.a.createElement("section",null,r.a.createElement("h3",null,"Email does not match Authorization code. Please confirm"),r.a.createElement("p",null,"You can only charge an authorization for the customer who saved it. If an authorization is paired with the wrong email, you may get this error message.")),r.a.createElement("section",null,r.a.createElement("h3",null,"Invalid Split transaction values"),r.a.createElement("p",null,"This happens when you have attempted to split the payment in a way that is mathematically impossible. The transaction may have specified the subaccount as bearer though the subaccount's share doesn't cover paystack's fees or vice-versa."),r.a.createElement("p",null,"You may also have specified a transaction charge that was above the amount being paid.")),r.a.createElement("section",null,r.a.createElement("h3",null,"Duplicate Transaction Reference"),r.a.createElement("p",null,"Every transaction on your integration in a domain must have a unique refrence. You will get this message if you attempt to start a new transaction with a reference that has already been used.")),r.a.createElement("section",null,r.a.createElement("h3",null,"Invalid ****"),r.a.createElement("p",null,"All objects on Paystack are tied to a domain and integration. Getting an ",r.a.createElement("code",null,"Invalid X")," message might mean the one specified does not exist in the space commanded by the key presented."))),r.a.createElement(r.a.Fragment,null,r.a.createElement(F,{title:"Error Codes",hasOptional:"false",data:[{param:r.a.createElement("span",null,"200, 201"),type:"",description:"Request was successful and intended action was carried out. Note that we will always   send a 200 if a charge or verify request was made. Do check the data object to know how the charge went (i.e. successful or failed).",required:!0},{param:"400",type:"",description:"A validation or client side error occurred and the request was not fulfilled.",required:!0},{param:"401",type:"",description:"The request was not authorized. This can be triggered by passing an invalid secret key in the authorization   header or the lack of one",required:!0},{param:"404",type:"",description:"Request could not be fulfilled as the request resource does not exist.",required:!0},{param:r.a.createElement("span",null,"500, 501, 502, 503, 504"),type:"",description:"Request could not be fulfilled due to an error on Paystack's end.  This shouldn't happen so please report as soon as you encounter any instance of this.",required:!0}]})))},M=n("mm+n"),J=v.a.div.withConfig({displayName:"Header__Container",componentId:"sc-3080ts-0"})(["display:flex;justify-content:space-between;padding:16px 16px 8px;color:rgba(246,252,255,0.6);"]),X=v.a.div.withConfig({displayName:"Header__Description",componentId:"sc-3080ts-1"})([".title{font-size:13px;font-weight:500;}"]),V=v.a.span.withConfig({displayName:"Header__Label",componentId:"sc-3080ts-2"})(["background-color:",";color:",";font-size:10px;font-weight:500;padding:4px 8px;margin-right:6px;border-radius:100px;text-transform:uppercase;"],(function(e){return e.theme.bg}),(function(e){return e.theme.fg})),Q=v.a.div.withConfig({displayName:"Header__Dropdown",componentId:"sc-3080ts-3"})(['display:flex;align-items:center;position:relative;padding:0 4px;width:auto;max-width:100%;&:after{content:" ";position:absolute;right:4px;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid #aaa;}select{font-size:12px;font-weight:500;font-family:var(--regular-font);color:rgba(246,252,255,0.6);-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;background-color:transparent;option{color:rgba(1,27,51,0.9)}&:active,&:focus{outline:none;box-shadow:none;border:none;}&:-moz-focusring{color:transparent;text-shadow:0 0 0 rgba(246,252,255,0.6);}}#compute_select{position:absolute;top:40px;font-size:12px;font-weight:500;}']),W=function(e){var t=e.links,n=e.changeLanguage,s=e.title,o=e.type,i=Object(a.useState)(t[Object.keys(t)[0]]),c=i[0],u=i[1],l=Object(a.useState)("auto"),d=l[0],p=l[1],h=Object(a.useRef)(null),m=function(){var e=h.current.clientWidth+20;p(e)};return Object(a.useEffect)((function(){m()})),r.a.createElement(J,null,r.a.createElement(X,null,"response"===o?r.a.createElement("span",{className:"title"},s):r.a.createElement(r.a.Fragment,null,r.a.createElement(V,{theme:{post:{bg:"#E4F6E7",fg:"#177532"},put:{bg:"#ffedd6",fg:"#c17d25"},get:{bg:"#c7ebff",fg:"#011b33"},del:{bg:"#fdd6d6",fg:"#a03939"}}[s.method.toLowerCase()]},s.method),r.a.createElement("span",{className:"title"},"",s.url))),r.a.createElement(Q,null,r.a.createElement("select",{onChange:function(e){var a,r,s=e.target.value;m(),u(s),n((a=t,r=s,Object.keys(a).find((function(e){return a[e]===r}))))},value:c,style:{width:d||"auto"}},Object.keys(t).map((function(e){if("json"!==e)return r.a.createElement("option",{key:e},t[e])}))),r.a.createElement("div",{id:"compute_select",ref:h},c)))},ee=n("ITfV"),te={dark:j.a,light:ee.a},ne=v.a.div.withConfig({displayName:"CodeSnippet__Container",componentId:"yot3xv-0"})(["padding:0px;"]),ae=v.a.pre.withConfig({displayName:"CodeSnippet__Pre",componentId:"yot3xv-1"})(["position:relative;text-align:left;margin:1em 0;padding:24px 16px;margin:0;overflow-x:auto;box-sizing:border-box;box-shadow:0px 1px 1px rgba(0,0,0,0.03);border-bottom-right-radius:6px;border-bottom-left-radius:6px;background-color:",";max-height:300px;& .token-line{line-height:1.5;}"],(function(e){return e.dark?"#011B33":"#FFF"})),re=v.a.span.withConfig({displayName:"CodeSnippet__LineNo",componentId:"yot3xv-2"})(["display:inline-block;width:2em;user-select:none;opacity:0.3;"]),se=function(e){var t=e.language,n=e.codeString,a=e.theme;return r.a.createElement(ne,null,r.a.createElement($.a,Object.assign({},$.b,{theme:te[a],code:n,language:t}),(function(e){var t=e.tokens,n=e.getLineProps,s=e.getTokenProps;return r.a.createElement(ae,{dark:"dark"===a},t.map((function(e,t){return r.a.createElement("div",n({line:e,key:t}),r.a.createElement(re,null,t+1),e.map((function(e,t){return r.a.createElement("span",s({token:e,key:t}))})))})))})))},oe=v.a.div.withConfig({displayName:"APIReqRes__Container",componentId:"u45oxe-0"})(["margin:0 0 30px;background-color:rgba(1,27,51,0.9);opacity:0.9;border:1px solid #0000000f;border-radius:8px;box-shadow:0px 1px 1px rgba(0,0,0,0.03);&:last-child{margin-bottom:0;}"]),ie=function(e){var t=e.type,s=e.links,o=e.filepath,i=e.title,c=n("ZINq")("./api-snippets"+o),u=Object.keys(s)[0],l=Object(a.useState)(c[u]),d=l[0],p=l[1],h=function(e){p(c[e])};return r.a.createElement(oe,null,"response"===t?r.a.createElement(r.a.Fragment,null,r.a.createElement(W,{links:s,changeLanguage:h,title:"Sample Response",type:t}),r.a.createElement("div",{className:"request"},r.a.createElement(se,{language:"json",codeString:d,theme:"dark"}))):r.a.createElement(r.a.Fragment,null,r.a.createElement(W,{links:s,changeLanguage:h,title:i,type:t}),r.a.createElement("div",{className:"request"},r.a.createElement(se,{language:u,codeString:d,theme:"dark"}))))},ce=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Initialize a transaction from your backend")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/initialize/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transactions/initialize/response.js"}))))},ue=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Confirm the status of a transaction"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/verify/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK",stat_200_failed:"200 Failed",stat_400_invalid:"400 Invalid"},filepath:"/transactions/verify/response.js"}))))},le=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List transactions carried out on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK"},filepath:"/transactions/list/response.js"}))))},de=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a transaction carried out on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK"},filepath:"/transactions/fetch/response.js"}))))},pe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"All authorizations marked as reusable can be charged with this endpoint whenever you need to receive payments."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/charge_authorization/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK",stat_200_failed:"200 Failed",stat_400_invalid:"400 Invalid"},filepath:"/transactions/charge_authorization/response.js"}))))},he=n("ABvw"),me=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"All mastercard and visa authorizations can be checked with this endpoint to know if they have funds for the payment you seek."),r.a.createElement("p",null,"This endpoint should be used when you do not know the exact amount to charge a card when rendering a service. It should be used to check if a card has enough funds based on a maximum range value. It is well suited for: "),r.a.createElement(he.a,{items:[r.a.createElement("span",null,"Ride hailing services"),r.a.createElement("span",null,"Logistics services")]}),r.a.createElement(P.a,{type:"warning",title:"Warning"},"You shouldn't use this endpoint to check a card for sufficient funds if you are going to charge the user immediately. This is because we hold funds when this endpoint is called which can lead to an ",r.a.createElement("strong",null,"insufficient funds")," error.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/check_authorization/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK",stat_400_invalid:"400 Invalid"},filepath:"/transactions/check_authorization/response.js"}))))},_e=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"View the timeline of a transaction"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/view_timeline/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK",stat_404_not_found:"404 Not Found"},filepath:"/transactions/view_timeline/response.js"}))))},Ee=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Total amount received on your account"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/totals/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK"},filepath:"/transactions/totals/response.js"}))))},fe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List transactions carried out on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/export/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK"},filepath:"/transactions/export/response.js"}))))},ye=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Retrieve part of a payment from a customer"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transactions/partial_debit/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Bad Request"},filepath:"/transactions/partial_debit/response.js"}))))},Te=function(){return r.a.createElement(Y,{id:"section-transaction"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Transactions",id:"transaction"}),r.a.createElement("p",null,"The Transactions API allows you create and manage payments on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ce,{data:M.initialize}),r.a.createElement(ue,{data:M.verify}),r.a.createElement(le,{data:M.list}),r.a.createElement(de,{data:M.fetch}),r.a.createElement(pe,{data:M["charge-authorization"]}),r.a.createElement(me,{data:M["check-authorization"]}),r.a.createElement(_e,{data:M["view-timeline"]}),r.a.createElement(Ee,{data:M.totals}),r.a.createElement(fe,{data:M.export}),r.a.createElement(ye,{data:M["partial-debit"]})))},ge=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a customer on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/customers/create/response.js"}))))},Re=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List customers available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/customers/list/response.js"}))))},be=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a customer on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200_ok:"200 OK",stat_401_unauthorized:"401 Unauthorized",stat_404_not_found:"404 Not Found"},filepath:"/customers/fetch/response.js"}))))},Se=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a customer's details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/customers/update/response.js"}))))},Ce=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Whitelist or blacklist a customer on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/whitelist_blacklist/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_403:"Forbidden"},filepath:"/customers/whitelist_blacklist/response.js"}))))},Oe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Deactivate an authorization when the card needs to be forgotten"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/deactivate_authorization/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_404:"Not Found"},filepath:"/customers/deactivate_authorization/response.js"}))))},Pe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Validate a customer's identity"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/customers/id_validation/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Failed"},filepath:"/customers/id_validation/response.js"}))))},qe=n("il+G"),Ue=function(){return r.a.createElement(Y,{id:"section-customer"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Customers",id:"customer"}),r.a.createElement("p",null,"The Customers API allows you create and manage customers on your integration."))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ge,{data:qe.create}),r.a.createElement(Re,{data:qe.list}),r.a.createElement(be,{data:qe.fetch}),r.a.createElement(Se,{data:qe.update}),r.a.createElement(Pe,{data:qe.validate}),r.a.createElement(Ce,{data:qe["whitelist-blacklist"]}),r.a.createElement(Oe,{data:qe["deactivate-authorization"]})))},ve=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a Dedicated NUBAN and assign to a customer",r.a.createElement(P.a,{type:"info",title:"Bank Availability"},"We currently support Access Bank and Wema Bank.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/create/response.js"}))))},ke=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List dedicated accounts available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/list/response.js"}))))},Ne=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a dedicated account on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/fetch/response.js"}))))},Ae=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Deactivate a dedicated account on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/deactivate/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/deactivate/response.js"}))))},Le=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Split a dedicated account transaction with one or more accounts"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/add-split/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/add-split/response.js"}))))},$e=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"If you've previously set up split payment for transactions on a dedicated account, you can remove it with this endpoint"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/remove-split/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/remove-split/response.js"}))))},je=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get available bank providers for Dedicated NUBAN"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/dedicated-nuban/providers/request.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/dedicated-nuban/providers/response.js"}))))},He=n("khQH"),we=function(){return r.a.createElement(Y,{id:"section-dedicated-nuban"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Dedicated NUBAN",id:"dedicated-nuban"}),r.a.createElement("p",null,"The Dedicated NUBAN API enables Nigerian merchants manage unique payment accounts of their cuctomers.")),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria.")),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ve,{data:He.create}),r.a.createElement(ke,{data:He.list}),r.a.createElement(Ne,{data:He.fetch}),r.a.createElement(Ae,{data:He.deactivate}),r.a.createElement(Le,{data:He["add-split"]}),r.a.createElement($e,{data:He["remove-split"]}),r.a.createElement(je,{data:He.providers})))},ze=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a subacount on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subaccounts/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subaccounts/create/response.js"}))))},Be=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List subaccounts available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subaccounts/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subaccounts/list/response.js"}))))},Ie=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a subaccount on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subaccounts/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subaccounts/fetch/response.js"}))))},xe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a subaccount details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subaccounts/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subaccounts/update/response.js"}))))},Fe=n("3gyW"),Ye=function(){return r.a.createElement(Y,{id:"section-subaccount"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Subaccounts",id:"subaccount"}),r.a.createElement("p",null,"The Subaccounts API allows you create and manage subaccounts on your integration. Subaccounts can be used to split payment between two accounts (your main account and a sub account)"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ze,{data:Fe.create}),r.a.createElement(Be,{data:Fe.list}),r.a.createElement(Ie,{data:Fe.fetch}),r.a.createElement(xe,{data:Fe.update})))},Ke=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a plan on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/plans/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/plans/create/response.js"}))))},Ge=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List plans available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/plans/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/plans/list/response.js"}))))},De=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a plan on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/plans/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/plans/fetch/response.js"}))))},Ze=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a plan details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/plans/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/plans/update/response.js"}))))},Me=n("0rF5"),Je=function(){return r.a.createElement(Y,{id:"section-plan"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Plans",id:"plan"}),r.a.createElement("p",null,"The Plans API allows you create and manage installment payment options on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Ke,{data:Me.create}),r.a.createElement(Ge,{data:Me.list}),r.a.createElement(De,{data:Me.fetch}),r.a.createElement(Ze,{data:Me.update})))},Xe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a subscription on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body})),r.a.createElement("section",null,r.a.createElement(P.a,{type:"info",title:"Email Token"},"We create an email token on each subscription to allow customers cancel their subscriptions from within the invoices sent to their mailboxes. Since they are not authorized, the email tokens are what we use to authenticate the requests over the API."))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subscriptions/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_404:"400 Not Found"},filepath:"/subscriptions/create/response.js"}))))},Ve=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List subscriptions available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subscriptions/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subscriptions/list/response.js"}))))},Qe=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a subscription on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subscriptions/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subscriptions/fetch/response.js"}))))},We=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Enable a subscription on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subscriptions/enable/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subscriptions/enable/response.js"}))))},et=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Disable a subscription on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/subscriptions/disable/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/subscriptions/disable/response.js"}))))},tt=n("zfCk"),nt=function(){return r.a.createElement(Y,{id:"section-subscription"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Subscriptions",id:"subscription"}),r.a.createElement("p",null,"The Subscriptions API allows you create and manage recurring payment on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Xe,{data:tt.create}),r.a.createElement(Ve,{data:tt.list}),r.a.createElement(Qe,{data:tt.fetch}),r.a.createElement(We,{data:tt.enable}),r.a.createElement(et,{data:tt.disable})))},at=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a product on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/products/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Bad Request",stat_401:"401 Unauthorized"},filepath:"/products/create/response.js"}))))},rt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List products available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/products/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_401:"401 Unauthorized"},filepath:"/products/list/response.js"}))))},st=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a product on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/products/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Bad Request",stat_404:"404 Not Found"},filepath:"/products/fetch/response.js"}))))},ot=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a product details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/products/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Bad Request",stat_401:"401 Unauthorized"},filepath:"/products/update/response.js"}))))},it=n("gBHp"),ct=function(){return r.a.createElement(Y,{id:"section-product"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Products",id:"product"}),r.a.createElement("p",null,"The Products API allows you create and manage inventories on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(at,{data:it.create}),r.a.createElement(rt,{data:it.list}),r.a.createElement(st,{data:it.fetch}),r.a.createElement(ot,{data:it.update})))},ut=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a payment page on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/create/response.js"}))))},lt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List payment pages available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/list/response.js"}))))},dt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a payment page on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/fetch/response.js"}))))},pt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a payment page details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/update/response.js"}))))},ht=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Check the availability of a slug for a payment page."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/check-slug/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/fetch/response.js"}))))},mt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Add products to a payment page"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/payment-pages/add-product/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/payment-pages/add-product/response.js"}))))},_t=n("TLrx"),Et=function(){return r.a.createElement(Y,{id:"section-page"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Payment Pages",id:"page"}),r.a.createElement("p",null,"The Payment Pages API provides a quick and secure way to collect payment for products."))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ut,{data:_t.create}),r.a.createElement(lt,{data:_t.list}),r.a.createElement(dt,{data:_t.fetch}),r.a.createElement(pt,{data:_t.update}),r.a.createElement(ht,{data:_t["check-slug"]}),r.a.createElement(mt,{data:_t["add-products"]})))},ft=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create an invoice for payment on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/create/response.js"}))))},yt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List the invoice available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/list/response.js"}))))},Tt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of an invoice on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/fetch/response.js"}))))},gt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Verify details of an invoice on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/verify/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/verify/response.js"}))))},Rt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Send notification of an invoice to your customers"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/send_notification/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/send_notification/response.js"}))))},bt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get invoice metrics for dashboard"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/total/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/total/response.js"}))))},St=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Finalize a Draft Invoice"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/finalize/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/finalize/response.js"}))))},Ct=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update an invoice details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/update/response.js"}))))},Ot=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Used to archive an invoice. Invoice will no longer be fetched on list or returned on verify."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/invoices/archive/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/invoices/archive/response.js"}))))},Pt=n("ty29"),qt=function(){return r.a.createElement(Y,{id:"section-invoice"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Invoices",id:"invoice"}),r.a.createElement("p",null,"The Invoices API allows you issue out and manage payment requests"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(ft,{data:Pt.create}),r.a.createElement(yt,{data:Pt.list}),r.a.createElement(Tt,{data:Pt.fetch}),r.a.createElement(gt,{data:Pt.verify}),r.a.createElement(Rt,{data:Pt["send-notification"]}),r.a.createElement(bt,{data:Pt.total}),r.a.createElement(St,{data:Pt.finalize}),r.a.createElement(Ct,{data:Pt.update}),r.a.createElement(Ot,{data:Pt.archive})))},Ut=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Fetch settlements made to your settlement accounts."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/settlements/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/settlements/fetch/response.js"}))))},vt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get the transactions that make up a particular settlement"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/settlements/fetch-transactions/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/settlements/fetch-transactions/response.js"}))))},kt=n("RTPz"),Nt=function(){return r.a.createElement(Y,{id:"section-settlement"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Settlements",id:"settlement"}),r.a.createElement("p",null,"The Settlements API allows you gain insights into payouts made by Paystack to your bank account"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Ut,{data:kt.fetch}),r.a.createElement(vt,{data:kt["fetch-transaction"]})))},At=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Creates a new recipient. A duplicate account number will lead to the retrieval of the existing record."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/create/response.js"}))))},Lt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create multiple transfer recipients in batches. A duplicate account number will lead to the retrieval of the existing record."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/bulk/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/bulk/response.js"}))))},$t=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List transfer recipients available on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/list/response.js"}))))},jt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Fetch the details of a transfer recipient"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/fetch/response.js"}))))},Ht=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update an existing recipient. An duplicate account number will lead to the retrieval of the existing record."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/update/response.js"}))))},wt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Deletes a transfer recipient (sets the transfer recipient to inactive)"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfer-recipient/delete/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfer-recipient/delete/response.js"}))))},zt=n("SGKY"),Bt=function(){return r.a.createElement(Y,{id:"section-transfer-recipient"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Transfer Recipients",id:"transfer-recipient"}),r.a.createElement("p",null,"The Transfer Recipients API allows you create and manage beneficiaries that you send money to")),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(At,{data:zt.create}),r.a.createElement(Lt,{data:zt.bulk}),r.a.createElement($t,{data:zt.list}),r.a.createElement(jt,{data:zt.fetch}),r.a.createElement(Ht,{data:zt.update}),r.a.createElement(wt,{data:zt.delete})))},It=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Status of transfer object returned will be ",r.a.createElement("code",null,"pending")," if OTP is disabled. In the event that an OTP is required, status will read ",r.a.createElement("code",null,"otp"),"."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/initiate/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_404:"404 Not Found"},filepath:"/transfers/initiate/response.js"}))))},xt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Finalize an initiated transfer"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/finalize/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"400 Bad Request"},filepath:"/transfers/finalize/response.js"}))))},Ft=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"You need to disable the Transfers OTP requirement to use this endpoint."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/bulk/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_404:"404 Not Found"},filepath:"/transfers/bulk/response.js"}))))},Yt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List the transfers made on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers/list/response.js"}))))},Kt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a transfer on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers/fetch/response.js"}))))},Gt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Verify the status of a transfer on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers/verify/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers/verify/response.js"}))))},Dt=n("F8k7"),Zt=function(){return r.a.createElement(Y,{id:"section-transfer"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Transfers",id:"transfer"}),r.a.createElement("p",null,"The Transfers API allows you automate sending money on your integration")),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(It,{data:Dt.initiate}),r.a.createElement(xt,{data:Dt.finalize}),r.a.createElement(Ft,{data:Dt.bulk}),r.a.createElement(Yt,{data:Dt.list}),r.a.createElement(Kt,{data:Dt.fetch}),r.a.createElement(Gt,{data:Dt.verify})))},Mt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Fetch the available balance on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/balance/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers-control/balance/response.js"}))))},Jt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Fetch all pay-ins and pay-outs that occured on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/balance-ledger/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers-control/balance-ledger/response.js"}))))},Xt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Generates a new OTP and sends to customer in the event they are having trouble receiving one."),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/resend-otp/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_404:"404 Not Found"},filepath:"/transfers-control/resend-otp/response.js"}))))},Vt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"This is used in the event that you want to be able to complete transfers programmatically without use of OTPs. No arguments required. You will get an OTP to complete the request."),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/disable-otp/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers-control/disable-otp/response.js"}))))},Qt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Finalize the request to disable OTP on your transfers."),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/finalize-disable-otp/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers-control/finalize-disable-otp/response.js"}))))},Wt=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"In the event that a customer wants to stop being able to complete transfers programmatically, this endpoint helps turn OTP requirement back on. No arguments required."),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria and Ghana.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transfers-control/enable-otp/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transfers-control/enable-otp/response.js"}))))},en=n("cXsT"),tn=function(){return r.a.createElement(Y,{id:"section-transfer-control"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Transfers Control",id:"transfer-control"}),r.a.createElement("p",null,"The Transfers Control API allows you manage settings of your transfers"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Mt,{data:en.balance}),r.a.createElement(Jt,{data:en["balance-ledger"]}),r.a.createElement(Xt,{data:en["resend-otp"]}),r.a.createElement(Vt,{data:en["disable-otp"]}),r.a.createElement(Qt,{data:en["finalize-disable-otp"]}),r.a.createElement(Wt,{data:en["enable-otp"]})))},nn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Send an array of objects with authorization codes and amount (in ",r.a.createElement("strong",null,"kobo")," if currency is ",r.a.createElement("code",null,"NGN"),", ",r.a.createElement("strong",null,"pesewas"),", if currency is ",r.a.createElement("code",null,"GHS"),", and ",r.a.createElement("strong",null,"cents"),", if currency is ",r.a.createElement("code",null,"ZAR")," ) so we can process transactions as a batch.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/initiate/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/initiate/response.js"}))))},an=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"This lists all bulk charge batches created by the integration. Statuses can be ",r.a.createElement("code",null,"active"),", ",r.a.createElement("code",null,"paused"),", or ",r.a.createElement("code",null,"complete"),".")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/list/response.js"}))))},rn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"This endpoint retrieves a specific batch code. It also returns useful information on its progress by way of the ",r.a.createElement("code",null,"total_charges")," and ",r.a.createElement("code",null,"pending_charges")," attributes.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/fetch-batch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/fetch-batch/response.js"}))))},sn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"This endpoint retrieves the charges associated with a specified batch code.  Pagination parameters are available. You can also filter by status. Charge statuses can be ",r.a.createElement("code",null,"pending"),", ",r.a.createElement("code",null,"success")," or ",r.a.createElement("code",null,"failed"),".")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/fetch-charge/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/fetch-charge/response.js"}))))},on=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Use this endpoint to pause processing a batch")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/pause/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/pause/response.js"}))))},cn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Use this endpoint to resume processing a batch")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/bulk-charges/resume/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/bulk-charges/resume/response.js"}))))},un=n("TVw3"),ln=function(){return r.a.createElement(Y,{id:"section-bulk-charge"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Bulk Charges",id:"bulk-charge"}),r.a.createElement("p",null,"The Bulk Charges API allows you create and manage multiple recurring payments from your customers"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(nn,{data:un.initiate}),r.a.createElement(an,{data:un.list}),r.a.createElement(rn,{data:un["fetch-batch"]}),r.a.createElement(sn,{data:un["fetch-charge"]}),r.a.createElement(on,{data:un.pause}),r.a.createElement(cn,{data:un.resume})))},dn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Fetch the payment session timeout on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Header",hasOptional:"false",data:e.data.header}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/control-panel/fetch-timeout/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/control-panel/fetch-timeout/response.js"}))))},pn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update the payment session timeout on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Header",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/control-panel/update-timeout/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/control-panel/update-timeout/response.js"}))))},hn=n("MbXk"),mn=function(){return r.a.createElement(Y,{id:"section-control-panel"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Control Panel",id:"control-panel"}),r.a.createElement("p",null,"The Control Panel API allows you manage some settings on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(dn,{data:hn["fetch-timeout"]}),r.a.createElement(pn,{data:hn["update-timeout"]})))},_n=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Initiate a payment by integrating the ",r.a.createElement(U,{link:"https://paystack.com/docs/payments/payment-channels",title:"payment channel"})," of your choice.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_200_ussd:"200 USSD",stat_200_mobile_money:"200 Mobile Money",stat_200_address:"200 Address",stat_400:"400 Bad Request"},filepath:"/charges/create/response.js"}))))},En=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Submit PIN to continue a charge")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/submit-pin/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_400:"400 Bad Request"},filepath:"/charges/submit-pin/response.js"}))))},fn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Submit OTP to complete a charge")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/submit-otp/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_400:"400 Bad Request"},filepath:"/charges/submit-otp/response.js"}))))},yn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Submit Phone when requested")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/submit-phone/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_400:"400 Bad Request"},filepath:"/charges/submit-phone/response.js"}))))},Tn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Submit Birthday when requested")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/submit-birthday/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_400:"400 Bad Request"},filepath:"/charges/submit-birthday/response.js"}))))},gn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Submit address to continue a charge")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/submit-address/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_failed:"200 Failed",stat_400:"400 Bad Request"},filepath:"/charges/submit-address/response.js"}))))},Rn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,'When you get "pending" as a charge status or if there was an exception when calling any of the /charge endpoints, wait 10 seconds or more, then make a check to see if its status has changed. Don\'t call too early as you may get a lot more pending than you should.')),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/charges/check/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_200_otp:"200 OTP",stat_200_pending:"200 Pending",stat_200_pin:"200 PIN",stat_200_failed:"200 Failed",stat_200_bank_auth:"200 Bank Auth",stat_200_phone:"200 Phone",stat_200_birthday:"200 Birthday",stat_400:"400 Bad Request"},filepath:"/charges/check/response.js"}))))},bn=n("25KT"),Sn=function(){return r.a.createElement(Y,{id:"section-charge"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Charge",id:"charge"}),r.a.createElement("p",null,"The Charge API allows you to configure payment channel of your choice when initiating a payment."))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(_n,{data:bn.create}),r.a.createElement(En,{data:bn["submit-pin"]}),r.a.createElement(fn,{data:bn["submit-otp"]}),r.a.createElement(yn,{data:bn["submit-phone"]}),r.a.createElement(Tn,{data:bn["submit-birthday"]}),r.a.createElement(gn,{data:bn["submit-address"]}),r.a.createElement(Rn,{data:bn.check})))},Cn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List disputes filed against you"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/list/response.js"}))))},On=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get more details about a dispute."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/fetch/response.js"}))))},Pn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"This endpoint retrieves disputes for a particular transaction")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/transaction/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/transaction/response.js"}))))},qn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Update details of a dispute on your integration")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK",stat_400:"Bad Request"},filepath:"/disputes/update/response.js"}))))},Un=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Provide evidence for a dispute")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/evidence/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/evidence/response.js"}))))},vn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get URL to upload a dispute evidence."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/upload-url/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/upload-url/response.js"}))))},kn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Resolve a dispute on your integration")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/resolve/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/resolve/response.js"}))))},Nn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Export disputes available on your integration")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/disputes/export/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/disputes/export/response.js"}))))},An=n("YqaQ"),Ln=function(){return r.a.createElement(Y,{id:"section-dispute"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Disputes",id:"dispute"}),r.a.createElement("p",null,"The Disputes API allows you manage transaction disputes on your integration"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Cn,{data:An.list}),r.a.createElement(On,{data:An.fetch}),r.a.createElement(Pn,{data:An.transaction}),r.a.createElement(qn,{data:An.update}),r.a.createElement(Un,{data:An.evidence}),r.a.createElement(vn,{data:An["upload-url"]}),r.a.createElement(kn,{data:An.resolve}),r.a.createElement(Nn,{data:An.export})))},$n=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Initiate a refund on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/refunds/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/refunds/create/response.js"}))))},jn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List refunds available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/refunds/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/refunds/list/response.js"}))))},Hn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a refund on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/refunds/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/refunds/fetch/response.js"}))))},wn=n("sOB7"),zn=function(){return r.a.createElement(Y,{id:"section-refund"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Refunds",id:"refund"}),r.a.createElement("p",null,"The Refunds API allows you create and manage transaction refunds"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement($n,{data:wn.create}),r.a.createElement(jn,{data:wn.list}),r.a.createElement(Hn,{data:wn.fetch})))},Bn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Check if an account number and BVN are linked"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/verification/match-bvn/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/verification/match-bvn/response.js"}))))},In=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Confirm an account belongs to the right customer"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/verification/resolve-account/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/verification/resolve-account/response.js"}))))},xn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get more information about a customer's card"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/verification/resolve-card/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/verification/resolve-card/response.js"}))))},Fn=n("3RBl"),Yn=function(){return r.a.createElement(Y,{id:"section-verification"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Verification",id:"verification"}),r.a.createElement("p",null,"The Verification API allows you perform KYC processes"),r.a.createElement(P.a,{type:"info",title:"Feature Availability"},"This feature is only available to businesses in Nigeria."))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Bn,{data:Fn["match-bvn"]}),r.a.createElement(In,{data:Fn["resolve-account"]}),r.a.createElement(xn,{data:Fn["resolve-card"]})))},Kn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Get a list of all supported banks and their properties")),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/miscellaneous/bank/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/miscellaneous/bank/response.js"}))))},Gn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Get a list of all providers for Dedicated NUBAN")),r.a.createElement("section",null,r.a.createElement(F,{title:"Header",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/miscellaneous/providers/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/miscellaneous/providers/response.js"}))))},Dn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Gets a list of Countries that Paystack currently supports"))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/miscellaneous/country/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/miscellaneous/country/response.js"}))))},Zn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Get a list of states for a country for address verification.")),r.a.createElement("section",null,r.a.createElement(F,{title:"Header",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"false",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/miscellaneous/avs-states/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/miscellaneous/avs-states/response.js"}))))},Mn=n("NRvx"),Jn=function(){return r.a.createElement(Y,{id:"section-miscellaneous"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Miscellaneous",id:"miscellaneous"}),r.a.createElement("p",null,"The Miscellaneous API are supporting APIs that can be used to provide more details to other APIs"))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Kn,{data:Mn.bank}),r.a.createElement(Gn,{data:Mn.providers}),r.a.createElement(Dn,{data:Mn.country}),r.a.createElement(Zn,{data:Mn["avs-states"]})))},Xn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Create a split payment on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/create/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/create/response.js"}))))},Vn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"List/search for the transaction splits available on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Query Param",hasOptional:"true",data:e.data.query}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/list/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/list/response.js"}))))},Qn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Get details of a split on your integration."),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/fetch/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/fetch/response.js"}))))},Wn=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Update a transaction split details on your integration"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"true",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/update/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/update/response.js"}))))},ea=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,r.a.createElement("p",null,"Add a Subaccount to a Transaction Split, or update the share of an existing Subaccount in a Transaction Split")),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/add-account/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/add-account/response.js"}))))},ta=function(e){return r.a.createElement(Y,{id:"section-"+e.data.id,code:"true"},r.a.createElement(r.a.Fragment,null,r.a.createElement(q.a,{type:"h2",title:e.data.title,id:e.data.id}),r.a.createElement("section",null,"Remove a subaccount from a transaction split"),r.a.createElement("section",null,r.a.createElement(F,{title:"Headers",hasOptional:"false",data:e.data.header})),r.a.createElement("section",null,r.a.createElement(F,{title:"Path Param",hasOptional:"false",data:e.data.path})),r.a.createElement("section",null,r.a.createElement(F,{title:"Body Param",hasOptional:"false",data:e.data.body}))),r.a.createElement(r.a.Fragment,null,r.a.createElement("section",null,r.a.createElement(ie,{type:"request",links:{bash:"cURL",js:"Node",php:"PHP"},filepath:"/transaction-splits/remove-account/requests.js",title:{method:e.data.method,url:e.data.route}}),r.a.createElement(ie,{type:"response",links:{stat_200:"200 OK"},filepath:"/transaction-splits/remove-account/response.js"}))))},na=n("+k7e"),aa=function(){return r.a.createElement(Y,{id:"section-split"},r.a.createElement(r.a.Fragment,null,r.a.createElement("header",{className:"inner_header"},r.a.createElement(q.a,{type:"h1",title:"Transaction Splits",id:"split"}),r.a.createElement("p",null,"The Transaction Splits API enables merchants split the settlement for a transaction across their payout account, and one or more Subaccounts."))),r.a.createElement(r.a.Fragment,null),r.a.createElement(r.a.Fragment,null,r.a.createElement(Xn,{data:na.create}),r.a.createElement(Vn,{data:na.list}),r.a.createElement(Qn,{data:na.fetch}),r.a.createElement(Wn,{data:na.update}),r.a.createElement(ea,{data:na["add-subaccount"]}),r.a.createElement(ta,{data:na["remove-subaccount"]})))},ra=function(){return Object(a.useEffect)((function(){var e={rootMargin:"-100px",threshold:Object(O.a)(Array(100).keys()).map((function(e){return e/100}))},t=new IntersectionObserver((function(e){e.forEach((function(e){var t=e.target.getAttribute("id");(t=t.substring(t.indexOf("-")+1),e.boundingClientRect.top<=280&&e.boundingClientRect.bottom>=150)?document.querySelector('ul li a[href="#'+t+'"]').classList.add("active"):document.querySelector('ul li a[href="#'+t+'"]').classList.remove("active")}))}),e);document.querySelectorAll("section[id]").forEach((function(e){t.observe(e)}))}),[]),r.a.createElement(r.a.Fragment,null,r.a.createElement(K,null),r.a.createElement(G,null),r.a.createElement(Z,null),r.a.createElement(Te,null),r.a.createElement(aa,null),r.a.createElement(Ue,null),r.a.createElement(we,null),r.a.createElement(Ye,null),r.a.createElement(Je,null),r.a.createElement(nt,null),r.a.createElement(ct,null),r.a.createElement(Et,null),r.a.createElement(qt,null),r.a.createElement(Nt,null),r.a.createElement(Bt,null),r.a.createElement(Zt,null),r.a.createElement(tn,null),r.a.createElement(ln,null),r.a.createElement(mn,null),r.a.createElement(Sn,null),r.a.createElement(Ln,null),r.a.createElement(zn,null),r.a.createElement(Yn,null),r.a.createElement(Jn,null))},sa=n("W2lv"),oa=n.n(sa),ia=function(){var e=Object(a.useState)(!1),t=e[0],n=e[1],s=Object(a.useState)(!1),o=s[0],i=s[1],c=Object(a.useState)(!1),u=c[0],l=c[1],p=Object(a.useState)(!1),h=p[0],m=p[1];Object(a.useEffect)((function(){var e=window.document.body;t||o?e.classList.add("disable-scroll"):e.classList.remove("disable-scroll")}),[t,o]);var E=function(){i(!o),m(!h)},f=function(){l(!u),n(!t),m(!h)};return r.a.createElement("section",{className:"api-layout"},r.a.createElement("div",{className:"layout__overlay "+(t?"layout__overlay--mobile":"")}),r.a.createElement("header",{className:"api-layout-header"},r.a.createElement(_,{isSearchMobile:o,toggleSearch:E}),r.a.createElement("div",{className:"mobile__actions "+(h?"mobile__actions--toggle":"")},r.a.createElement("button",{className:"action__button button--search",onClick:E},r.a.createElement(d.a,{className:"action__button__icon"}),r.a.createElement("span",{className:"button__text button__text--right"},"Search")),r.a.createElement("button",{className:"action__button action__button--right-space",onClick:f},r.a.createElement(oa.a,{className:"action__button__icon"}),r.a.createElement("span",{className:"button__text button__text--right"},"Menu")))),r.a.createElement("nav",{className:"api-layout-nav  "+(u?"api-layout-nav--mobile":"")},r.a.createElement(C,{toggleNav:f})),r.a.createElement("main",{className:"api-layout-content"},r.a.createElement(ra,null)))};n("zabS"),t.default=function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(s.a,{title:"Paystack API Reference"}),r.a.createElement(ia,null))}},"4F5i":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bulk charge items retrieved",\n  "data": [\n    {\n      "integration": 100073,\n      "bulkcharge": 18,\n      "customer": {\n        "id": 181336,\n        "first_name": null,\n        "last_name": null,\n        "email": "support@paystack.com",\n        "customer_code": "CUS_dw5posshfd1i5uj",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default"\n      },\n      "authorization": {\n        "authorization_code": "AUTH_jh3cfpca",\n        "bin": "412345",\n        "last4": "1381",\n        "exp_month": "08",\n        "exp_year": "2088",\n        "channel": "card",\n        "card_type": "visa visa",\n        "bank": "TEST BANK",\n        "country_code": "NG",\n        "brand": "visa",\n        "reusable": true,\n        "account_name": "BoJack Horseman"\n      },\n      "transaction": {\n        "id": 718835,\n        "domain": "test",\n        "status": "success",\n        "reference": "2mr588n0ik9enja",\n        "amount": 20500,\n        "message": null,\n        "gateway_response": "Successful",\n        "paid_at": "2017-02-04T06:05:02.000Z",\n        "created_at": "2017-02-04T06:05:02.000Z",\n        "channel": "card",\n        "currency": "NGN",\n        "ip_address": null,\n        "metadata": "",\n        "log": null,\n        "fees": null,\n        "fees_split": null,\n        "customer": {},\n        "authorization": {},\n        "plan": {},\n        "subaccount": {},\n        "paidAt": "2017-02-04T06:05:02.000Z",\n        "createdAt": "2017-02-04T06:05:02.000Z"\n      },\n      "domain": "test",\n      "amount": 20500,\n      "currency": "NGN",\n      "status": "success",\n      "id": 15,\n      "createdAt": "2017-02-04T06:04:26.000Z",\n      "updatedAt": "2017-02-04T06:05:03.000Z"\n    },\n    {\n      "integration": 100073,\n      "bulkcharge": 18,\n      "customer": {\n        "id": 181336,\n        "first_name": null,\n        "last_name": null,\n        "email": "support@paystack.com",\n        "customer_code": "CUS_dw5posshfd1i5uj",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default"\n      },\n      "authorization": {\n        "authorization_code": "AUTH_qdyfjbl3",\n        "bin": "412345",\n        "last4": "1381",\n        "exp_month": "08",\n        "exp_year": "2018",\n        "channel": "card",\n        "card_type": "visa visa",\n        "bank": "TEST BANK",\n        "country_code": "NG",\n        "brand": "visa",\n        "reusable": true,\n        "account_name": "BoJack Horseman"\n      },\n      "transaction": {\n        "id": 718836,\n        "domain": "test",\n        "status": "success",\n        "reference": "5xkmvfe2h4065zl",\n        "amount": 11500,\n        "message": null,\n        "gateway_response": "Successful",\n        "paid_at": "2017-02-04T06:05:02.000Z",\n        "created_at": "2017-02-04T06:05:02.000Z",\n        "channel": "card",\n        "currency": "NGN",\n        "ip_address": null,\n        "metadata": "",\n        "log": null,\n        "fees": null,\n        "fees_split": null,\n        "customer": {},\n        "authorization": {},\n        "plan": {},\n        "subaccount": {},\n        "paidAt": "2017-02-04T06:05:02.000Z",\n        "createdAt": "2017-02-04T06:05:02.000Z"\n      },\n      "domain": "test",\n      "amount": 11500,\n      "currency": "NGN",\n      "status": "success",\n      "id": 16,\n      "createdAt": "2017-02-04T06:04:26.000Z",\n      "updatedAt": "2017-02-04T06:05:03.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},"4GUd":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/split,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/split,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"4Uio":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account/:dedicated_account_id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dedicated_account/:dedicated_account_id',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dedicated_account/:dedicated_account_id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"4VEA":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Plan retrieved",\n  "data": {\n    "subscriptions": [],\n    "integration": 100032,\n    "domain": "test",\n    "name": "Monthly retainer",\n    "plan_code": "PLN_gx2wn530m0i3w3m",\n    "description": null,\n    "amount": 50000,\n    "interval": "monthly",\n    "send_invoices": true,\n    "send_sms": true,\n    "hosted_page": false,\n    "hosted_page_url": null,\n    "hosted_page_summary": null,\n    "currency": "NGN",\n    "id": 28,\n    "createdAt": "2016-03-29T22:42:50.000Z",\n    "updatedAt": "2016-03-29T22:42:50.000Z"\n  }\n}'},"5CLg":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_400",(function(){return d}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_otp",\n    "display_text": "OTP must have at least one character"\n  }\n}',r='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin",\n    "display_text": "The PIN must be exactly 4 digits"\n  }\n}',o='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "bc9w93gh629a4d7",\n    "status": "failed",\n    "message": "Transaction declined. Please use the test card."\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "Please send phone"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},"67mB":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Recipient retrieved",\n  "data": {\n      "domain": "test",\n      "type": "nuban",\n      "currency": "NGN",\n      "name": "Flesh",\n      "details": {\n        "account_number": "01000000000",\n        "account_name": null,\n        "bank_code": "044",\n        "bank_name": "Access Bank"\n      },\n      "metadata": {\n        "job": "Eater"\n      },\n      "recipient_code": "RCP_2x5j67tnnw1t98k",\n      "active": true,\n      "id": 28,\n      "createdAt": "2017-02-02T19:39:04.000Z",\n      "updatedAt": "2017-02-02T19:39:04.000Z"\n  }\n}'},"6GbB":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Recipients added successfully",\n  "data": {\n    "success": [\n      {\n        "domain": "test",\n        "name": "Habenero Mundane",\n        "type": "nuban",\n        "description": "",\n        "integration": 463433,\n        "currency": "NGN",\n        "metadata": null,\n        "details": {\n          "account_number": "0123456789",\n          "account_name": null,\n          "bank_code": "033",\n          "bank_name": "United Bank For Africa"\n        },\n        "recipient_code": "RCP_wh5k8r4vzuh5c94",\n        "active": true,\n        "id": 10152540,\n        "isDeleted": false,\n        "createdAt": "2020-11-09T10:12:48.213Z",\n        "updatedAt": "2020-11-09T10:12:48.213Z"\n      },\n      {\n        "domain": "test",\n        "name": "Soft Merry",\n        "type": "nuban",\n        "description": "",\n        "integration": 463433,\n        "currency": "NGN",\n        "metadata": null,\n        "details": {\n          "account_number": "98765432310",\n          "account_name": null,\n          "bank_code": "50211",\n          "bank_name": "Kuda Bank"\n        },\n        "recipient_code": "RCP_yu1kkyktoljnczg",\n        "active": true,\n        "id": 10152541,\n        "isDeleted": false,\n        "createdAt": "2020-11-09T10:12:48.213Z",\n        "updatedAt": "2020-11-09T10:12:48.213Z"\n      }\n    ],\n      "errors": []\n  }\n}'},"6Qjk":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Customer retrieved",\n  "data": {\n    "transactions": [],\n    "subscriptions": [],\n    "authorizations": [],\n    "first_name": null,\n    "last_name": null,\n    "email": "hello@paystack.com",\n    "phone": null,\n    "metadata": null,\n    "domain": "live",\n    "customer_code": "CUS_h00a7ngn0xbzf2g",\n    "risk_action": "default",\n    "id": 17593,\n    "integration": 190972,\n    "createdAt": "2019-10-25T15:05:23.000Z",\n    "updatedAt": "2019-10-25T15:05:23.000Z",\n    "created_at": "2019-10-25T15:05:23.000Z",\n    "updated_at": "2019-10-25T15:05:23.000Z",\n    "total_transactions": 0,\n    "total_transaction_value": [],\n    "dedicated_account": {\n      "id": 59,\n      "account_name": "KAROKART/RHODA CHURCH",\n      "account_number": "9807062474",\n      "created_at": "2019-09-10T11:10:12.000Z",\n      "updated_at": "2019-10-25T15:05:24.000Z",\n      "currency": "NGN",\n      "active": true,\n      "assigned": true,\n      "provider": {\n        "id": 1,\n        "provider_slug": "wema-bank",\n        "bank_id": 20,\n        "bank_name": "Wema Bank"\n      },\n      "assignment": {\n        "assignee_id": 17593,\n        "assignee_type": "Customer",\n        "account_type": "PAY-WITH-TRANSFER-RECURRING",\n        "integration": 190972\n      }\n    }\n  }\n}'},"6YxL":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/resend_otp\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "transfer_code": "TRF_vsyqdmlzble3uii", "reason": "resend_otp" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"transfer_code\": \"TRF_vsyqdmlzble3uii\",\n  \"reason\": \"resend_otp\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/resend_otp',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer/resend_otp";\n\n  $fields = [\n    "transfer_code" => "TRF_vsyqdmlzble3uii",\n    "reason" => "resend_otp"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"6sy7":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r})),n.d(t,"stat_500",(function(){return s}));var a='{\n    "status": true,\n    "message": "BVN resolved",\n    "data": {\n        "title": "Mr",\n        "first_name": "JOHN",\n        "middle_name": "MUKITE",\n        "last_name": "NAMEME",\n        "name_on_card": "MUKITE NAMEME",\n        "marital_status": "Married",\n        "dob": "17-Jun-80",\n        "formatted_dob": "1980-06-17", // YYYY-MM-DD\n        "mobile": "08091111111",\n        "mobile2": "08090000000",\n        "registration_date": "24-Dec-16",\n        "formatted_registration_date": "2016-12-24",\n        "bvn": "00000000000",\n        "gender": "Male",\n        "lga_of_origin": "Ilesa West",\n        "state_of_origin": "Osun State",\n        "residential_address": "126 Joel Ogunnaike St Ikeja GRA, Lagos",\n        "lga_of_residence": "Ikeja",\n        "nationality": "Nigeria",\n        "email": "MUKITE@EXAMPLE.COM",\n        "is_blacklisted": false,\n        "enrollment_bank": {\n            "name": "First Bank of Nigeria",\n            "code": "011",\n            "enrollment_branch": "IKEJA BRANCH"\n        },\n        "level_of_account": "Level 2 - Medium Level Accounts",\n        "nin": "",\n        "base_64_image": "Base_64_Encoded_Image=="\n    },\n    "meta": {\n        "calls_this_month": 12,\n        "free_calls_left": 0\n    }\n}',r='{\n\t"status": false,\n\t"message": "Unable to resolve BVN"\n}',s='{\n\t"status": false,\n\t"message": "BVN service unavailable"\n}'},"7DKR":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Refund retrieved",\n  "data": {\n    "integration": 100982,\n    "transaction": 1641,\n    "dispute": null,\n    "settlement": null,\n    "domain": "live",\n    "amount": 500000,\n    "deducted_amount": 500000,\n    "fully_deducted": true,\n    "currency": "NGN",\n    "channel": "migs",\n    "status": "processed",\n    "refunded_by": "eseyinwale@gmail.com",\n    "refunded_at": "2018-01-12T10:54:47.000Z",\n    "expected_at": "2017-10-01T21:10:59.000Z",\n    "customer_note": "xxx",\n    "merchant_note": "xxx",\n    "id": 1,\n    "createdAt": "2017-09-24T21:10:59.000Z",\n    "updatedAt": "2018-01-18T11:59:56.000Z"\n  }\n}'},"7hFO":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bulk charge batch has been paused"\n}'},"7mkF":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bank?pay_with_bank_transfer=true\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank?pay_with_bank_transfer=true,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank?pay_with_bank_transfer=true",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"87F3":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/product\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/product,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/product,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"8CaD":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/product\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "description": "Product Six Description", "name": "Product Six",\n      "price": 500000, "currency": "USD", "limited": false, \n      "quantity": 100 \n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"description\": \"Product Six Description\",\n  \"name\": \"Product Six\",\n  \"price\": 500000,\n  \"currency\": \"USD\",\n  \"limited\": false,\n  \"quantity\": 100\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/product',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s="<?php\n  $url = \"https://api.paystack.co/product\";\n\n  $fields = [\n    'description' => \"Product Six Description\",\n    'name' => \"Product Six\",\n    'price' => 500000,\n    'currency' => \"USD\",\n    'limited' => false,\n    'quantity' => 100,\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    \"Authorization: Bearer SECRET_KEY\",\n    \"Cache-Control: no-cache\",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>"},"8rXz":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/:id',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dispute/:id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"8u0L":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transfer retrieved",\n  "data": {\n    "recipient": {\n      "domain": "test",\n      "type": "nuban",\n      "currency": "NGN",\n      "name": "Flesh",\n      "details": {\n        "account_number": "olounje",\n        "account_name": null,\n        "bank_code": "044",\n        "bank_name": "Access Bank"\n      },\n      "metadata": null,\n      "recipient_code": "RCP_2x5j67tnnw1t98k",\n      "active": true,\n      "id": 28,\n      "integration": 100073,\n      "createdAt": "2017-02-02T19:39:04.000Z",\n      "updatedAt": "2017-02-02T19:39:04.000Z"\n    },\n    "domain": "test",\n    "amount": 4400,\n    "currency": "NGN",\n    "source": "balance",\n    "source_details": null,\n    "reason": "Redemption",\n    "status": "pending",\n    "failures": null,\n    "transfer_code": "TRF_2x5j67tnnw1t98k",\n    "id": 14938,\n    "createdAt": "2017-02-03T17:21:54.000Z",\n    "updatedAt": "2017-02-03T17:21:54.000Z"\n  }\n}'},"8wCQ":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a="curl https://api.paystack.co/country\n-X GET",r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/country',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/country",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"93xa":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Notification sent"\n}'},"961U":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_200_failed",(function(){return r})),n.d(t,"stat_400_invalid",(function(){return s}));var a='{\n  "status": true,\n  "message": "Transaction retrieved",\n  "data": {\n    "id": 292584114,\n    "domain": "test",\n    "status": "success",\n    "reference": "203520101",\n    "amount": 10000,\n    "message": null,\n    "gateway_response": "Successful",\n    "paid_at": "2019-10-09T13:03:28.000Z",\n    "created_at": "2019-10-09T13:00:16.000Z",\n    "channel": "card",\n    "currency": "NGN",\n    "ip_address": "197.211.43.98",\n    "metadata": {\n      "custom_fields": [\n        {\n          "display_name": "Mobile Number",\n          "variable_name": "mobile_number",\n          "value": "+2348012345678"\n        }\n      ],\n      "referrer": "http://localhost:3001/integration/microphone.html?"\n    },\n    "log": {\n      "start_time": 1570626018,\n      "time_spent": 192,\n      "attempts": 1,\n      "errors": 0,\n      "success": true,\n      "mobile": false,\n      "input": [],\n      "history": [\n        {\n          "type": "action",\n          "message": "Attempted to pay with card",\n          "time": 191\n        },\n        {\n          "type": "success",\n          "message": "Successfully paid with card",\n          "time": 192\n        }\n      ]\n    },\n    "fees": 150,\n    "fees_split": null,\n    "authorization": {\n      "authorization_code": "AUTH_2e4k18sj52",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_JrPFkMYhcu8AD75eQWKl",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 1809887,\n      "first_name": null,\n      "last_name": null,\n      "email": "customer@email.com",\n      "customer_code": "CUS_0c35ys9w8ma5tbr",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "deny"\n    },\n    "plan": {},\n    "subaccount": {},\n    "order_id": null,\n    "paidAt": "2019-10-09T13:03:28.000Z",\n    "createdAt": "2019-10-09T13:00:16.000Z",\n    "requested_amount": 1500000\n  }\n}',r='{  \n  "status":true,\n  "message":"Verification successful",\n  "data": {  \n    "amount":27000,\n    "currency":"NGN",\n    "transaction_date":"2016-10-01T11:03:09.000Z",\n    "status":"failed",\n    "reference":"djfoidjkdkj41",\n    "domain":"test",\n    "metadata":0,\n    "gateway_response":"Insufficient Funds",\n    "message":null,\n    "channel":"card",\n    "ip_address":"41.1.25.1",\n    "log": {  \n      "time_spent":9,\n      "attempts":1,\n      "authentication":null,\n      "errors":0,\n      "success":true,\n      "mobile":false,\n      "input":[ ],\n      "channel":null,\n      "history": [  \n         {  \n           "type":"input",\n           "message":"Filled these fields: card number, card expiry, card cvv",\n           "time":7\n         },\n         {  \n           "type":"action",\n           "message":"Attempted to pay",\n           "time":7\n         },\n         {  \n           "type":"close",\n           "message":"Page closed",\n           "time":9\n         }\n      ]\n    },\n    "fees":null,\n    "authorization":{  \n      "authorization_code":"AUTH_8dfhjjdt",\n      "card_type":"visa",\n      "last4":"1381",\n      "exp_month":"08",\n      "exp_year":"2018",\n      "bin":"412345",\n      "bank":"TEST BANK",\n      "channel":"card",\n      "signature": "SIG_idyuhgd87dUYSHO92D",\n      "reusable":true,\n      "country_code":"NG",\n      "account_name": "BoJack Horseman"\n    },\n    "customer":{  \n      "id":84312,\n      "customer_code":"CUS_hdhye17yj8qd2tx",\n      "first_name":"BoJack",\n      "last_name":"Horseman",\n      "email":"bojack@horseman.com"\n    },\n    "plan":""\n  }\n}\n',s='{  \n  "status":false,\n  "message":"Invalid key"\n}'},"9RgO":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/disable_otp\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\'\n-X POST',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/disable_otp',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer/disable_otp";\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"9yWY":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Recipients retrieved",\n  "data": [\n    {\n      "domain": "test",\n      "type": "nuban",\n      "currency": "NGN",\n      "name": "Flesh",\n      "details": {\n        "account_number": "01000000000",\n        "account_name": null,\n        "bank_code": "044",\n        "bank_name": "Access Bank"\n      },\n      "metadata": {\n        "job": "Eater"\n      },\n      "recipient_code": "RCP_2x5j67tnnw1t98k",\n      "active": true,\n      "id": 28,\n      "createdAt": "2017-02-02T19:39:04.000Z",\n      "updatedAt": "2017-02-02T19:39:04.000Z"\n    },\n    {\n      "integration": 100073,\n      "domain": "test",\n      "type": "nuban",\n      "currency": "NGN",\n      "name": "Flesh",\n      "details": {\n        "account_number": "0100000010",\n        "account_name": null,\n        "bank_code": "044",\n        "bank_name": "Access Bank"\n      },\n      "metadata": {},\n      "recipient_code": "RCP_1i2k27vk4suemug",\n      "active": true,\n      "id": 27,\n      "createdAt": "2017-02-02T19:35:33.000Z",\n      "updatedAt": "2017-02-02T19:35:33.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},A13I:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/plan/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ name: "Monthly retainer (renamed)" }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Monthly retainer (renamed)\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/plan/:id_or_code',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/plan/:id_or_code";\n\n  $fields = [\n    \'name\' => "Monthly retainer (renamed)"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},ABvw:function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),s=n("vOnD").a.ul.withConfig({displayName:"UnorderedList__List",componentId:"sc-11uwpn-0"})(["font-size:15px;margin:15px 0;padding:0;list-style:none;li{display:flex;align-items:center;height:30px;}li:before{content:'✓';width:14px;height:14px;border-radius:50%;border:solid 1px #728F9E14;display:flex;justify-content:center;align-items:center;font-size:11px;line-height:11px;font-weight:600;color:#728F9E;background:#EEF2F5;margin-right:8px;}"]);t.a=function(e){return r.a.createElement(s,null,e.items.map((function(e,t){return r.a.createElement("li",{key:t},e)})))}},AFIf:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subaccount/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ primary_contact_email: "dafe@aba.com", percentage_charge: 18.9 }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"primary_contact_email\": \"dafe@aba.com\",\n  \"percentage_charge\": 18.9\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subaccount/:id_or_code',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/subaccount/:id_or_code";\n\n  $fields = [\n    \'primary_contact_email\' => "dafe@aba.com",\n    \'percentage_charge\' => 18.9\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},ATAW:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request created",\n  "data": {\n    "id": 3136406,\n    "domain": "test",\n    "amount": 42000,\n    "currency": "NGN",\n    "due_date": "2020-07-08T00:00:00.000Z",\n    "has_invoice": true,\n    "invoice_number": 1,\n    "description": "a test invoice",\n    "line_items": [\n      {\n        "name": "item 1",\n        "amount": 20000\n      },\n      {\n        "name": "item 2",\n        "amount": 20000\n      }\n    ],\n    "tax": [\n      {\n        "name": "VAT",\n        "amount": 2000\n      }\n    ],\n    "request_code": "PRQ_1weqqsn2wwzgft8",\n    "status": "pending",\n    "paid": false,\n    "metadata": null,\n    "notifications": [],\n    "offline_reference": "4286263136406",\n    "customer": 25833615,\n    "created_at": "2020-06-29T16:07:33.073Z"\n  }\n}'},"B/AY":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/verify/:reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/verify/:reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/verify/:reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},BFR0:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment requests retrieved",\n  "data": [\n    {\n      "id": 3136406,\n      "domain": "test",\n      "amount": 42000,\n      "currency": "NGN",\n      "due_date": "2020-07-08T00:00:00.000Z",\n      "has_invoice": true,\n      "invoice_number": 1,\n      "description": "a test invoice",\n      "pdf_url": null,\n      "line_items": [\n        {\n          "name": "item 1",\n          "amount": 20000\n        },\n        {\n          "name": "item 2",\n          "amount": 20000\n        }\n      ],\n      "tax": [\n        {\n          "name": "VAT",\n          "amount": 2000\n        }\n      ],\n      "request_code": "PRQ_1weqqsn2wwzgft8",\n      "status": "pending",\n      "paid": false,\n      "paid_at": null,\n      "metadata": null,\n      "notifications": [],\n      "offline_reference": "4286263136406",\n      "customer": {\n        "id": 25833615,\n        "first_name": "Damilola",\n        "last_name": "Odujoko",\n        "email": "damilola@example.com",\n        "customer_code": "CUS_xwaj0txjryg393b",\n        "phone": null,\n        "metadata": {\n          "calling_code": "+234"\n        },\n        "risk_action": "default",\n        "international_format_phone": null\n      },\n      "created_at": "2020-06-29T16:07:33.000Z"\n    }\n  ],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},BfI2:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name":"Percentage Split", \n      "type":"percentage", \n      "currency": "NGN",\n      "subaccounts":[{\n        "subaccount": "ACCT_z3x6z3nbo14xsil",\n        "share": 20\n    },\n    {\n        "subaccount": "ACCT_pwwualwty4nhq9d",\n        "share": 30\n    }], \n      "bearer_type":"subaccount", \n      "bearer_subaccount":"ACCT_hdl8abxl8drhrl3"\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "name":"Percentage Split", \n  "type":"percentage",\n  "currency": "NGN", \n\t"subaccounts":[{\n    "subaccount": "ACCT_z3x6z3nbo14xsil",\n    "share": 20\n  },\n  {\n      "subaccount": "ACCT_pwwualwty4nhq9d",\n      "share": 30\n  }], \n\t"bearer_type":"subaccount", \n\t"bearer_subaccount":"ACCT_hdl8abxl8drhrl3"\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/split\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/split";\n\n  $fields = [\n    \'name\' => "Percentage Split", \n    \'type\' => "percentage",\n    \'currency\' => "NGN", \n    \'subaccounts\' => [{\n      "subaccount" => "ACCT_z3x6z3nbo14xsil",\n      "share" => 20\n    },\n    {\n        "subaccount" => "ACCT_pwwualwty4nhq9d",\n        "share" => 30 \n    }], \n    \'bearer_type\' => "subaccount", \n    \'bearer_subaccount\' => "ACCT_hdl8abxl8drhrl3"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},CDHm:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/check_authorization\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000", "authorization_code": "AUTH_72btv547" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\",\n  \"authorization_code\": \"AUTH_72btv547\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/check_authorization',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transaction/check_authorization";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n    "authorization_code": "AUTH_72btv547"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},CNV9:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Split group updated",\n  "data": {\n    "id": 95,\n    "name": "Updated Name",\n    "type": "percentage",\n    "currency": "NGN",\n    "integration": 165956,\n    "domain": "live",\n    "split_code": "SPL_uMzcGbG5ca",\n    "active": false,\n    "bearer_type": "all",\n    "bearer_subaccount": null,\n    "createdAt": "2020-06-22T16:20:53.000Z",\n    "updatedAt": "2020-06-22T17:26:59.000Z",\n    "subaccounts": [\n      {\n        "subaccount": {\n          "id": 12700,\n          "subaccount_code": "ACCT_jsuq5uwf3n8la7b",\n          "business_name": "Ayobami GTB",\n          "description": "Ayobami GTB",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Guaranty Trust Bank",\n          "account_number": "0259198351"\n        },\n        "share": 80\n      }\n    ],\n    "total_subaccounts": 1\n  }\n}'},CfCy:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_400",(function(){return d}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_otp",\n    "display_text": "Please send OTP (none will be sent to your phone)"\n  }\n}',r='{\n  "status": true,\n  "message": "Reference check successful",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin"\n  }\n}',o='{\n  "status": true,\n  "message": "Reference check successful",\n  "data": {\n    "reference": "ojk8k0bimgftf0x",\n    "status": "failed",\n    "message": "Insufficient funds"\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "Please send phone"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},Ck1t:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccount updated",\n  "data": {\n    "integration": 100973,\n    "domain": "test",\n    "subaccount_code": "ACCT_4hl4xenwpjy5wb",\n    "business_name": "Sunshine Studios",\n    "description": null,\n    "primary_contact_name": null,\n    "primary_contact_email": "dafe@aba.com",\n    "primary_contact_phone": null,\n    "metadata": null,\n    "percentage_charge": 18.9,\n    "is_verified": false,\n    "settlement_bank": "Access Bank",\n    "account_number": "0193274682",\n    "settlement_schedule": "AUTO",\n    "active": true,\n    "migrate": false,\n    "id": 55,\n    "createdAt": "2016-10-05T13:22:04.000Z",\n    "updatedAt": "2016-10-21T02:19:47.000Z"\n  }\n}'},D3Mv:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Page created",\n  "data": {\n    "name": "Buttercup Brunch",\n    "description": "Gather your friends for the ritual that is brunch",\n    "integration": 100032,\n    "domain": "test",\n    "slug": "5nApBwZkvY",\n    "currency": "NGN",\n    "active": true,\n    "id": 18,\n    "createdAt": "2016-03-30T00:49:57.514Z",\n    "updatedAt": "2016-03-30T00:49:57.514Z"\n  }\n}'},D5hu:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "NUBAN Providers successfully retrieved",\n  "data": [\n    {\n      "name": "Wema Bank",\n      "slug": "wema-bank",\n      "code": "035",\n      "longcode": "035150103",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": null,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 20,\n      "createdAt": "2016-07-14T10:04:29.000Z",\n      "updatedAt": "2021-02-09T17:49:59.000Z"\n    }\n  ]\n}'},DNlv:function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),s=n("vOnD").a.ol.withConfig({displayName:"OrderedList__List",componentId:"sc-176wb3i-0"})(["font-size:15px;margin:15px 0;padding:0;list-style:none;counter-reset:item;li{display:flex;align-items:center;position:relative;margin-bottom:6px;counter-increment:item;&:last-child{margin-bottom:0;}}span,a{padding-left:24px;}span a{padding-left:0;}li:before{content:counter(item);width:14px;height:14px;border-radius:50%;border:solid 1px #728F9E14;display:flex;justify-content:center;align-items:center;font-size:11px;line-height:11px;font-weight:500;color:#728F9E;background:#EEF2F5;position:absolute;top:3px;}"]);t.a=function(e){return r.a.createElement(s,null,e.items.map((function(e,t){return r.a.createElement("li",{key:t},e)})))}},DPLZ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_404",(function(){return r}));var a='{\n  "status": true,\n  "message": "Subscription successfully created",\n  "data": {\n    "customer": 1173,\n    "plan": 28,\n    "integration": 100032,\n    "domain": "test",\n    "start": 1459296064,\n    "status": "active",\n    "quantity": 1,\n    "amount": 50000,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "subscription_code": "SUB_vsyqdmlzble3uii",\n    "email_token": "d7gofp6yppn3qz7",\n    "id": 9,\n    "createdAt": "2016-03-30T00:01:04.687Z",\n    "updatedAt": "2016-03-30T00:01:04.687Z"\n  }\n}',r='{\n  "status": false,\n  "message": "The customer specified has no saved authorizations"\n}'},Dg4L:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subscription/disable\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "code": "SUB_vsyqdmlzble3uii", "token": "d7gofp6yppn3qz7" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"code\": \"SUB_vsyqdmlzble3uii\",\n  \"token\": \"d7gofp6yppn3qz7\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subscription/disable',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/subscription/disable";\n\n  $fields = [\n    \'code\' => "SUB_vsyqdmlzble3uii",\n    \'token\' => "d7gofp6yppn3qz7"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},Dohc:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Banks retrieved",\n  "data": [\n    {\n      "name": "Abbey Mortgage Bank",\n      "slug": "abbey-mortgage-bank",\n      "code": "801",\n      "longcode": "",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": false,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 174,\n      "createdAt": "2020-12-07T16:19:09.000Z",\n      "updatedAt": "2020-12-07T16:19:19.000Z"\n    },\n    {\n      "name": "Coronation Merchant Bank",\n      "slug": "coronation-merchant-bank",\n      "code": "559",\n      "longcode": "",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": false,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 173,\n      "createdAt": "2020-11-24T10:25:07.000Z",\n      "updatedAt": "2020-11-24T10:25:07.000Z"\n    },\n    {\n      "name": "Infinity MFB",\n      "slug": "infinity-mfb",\n      "code": "50457",\n      "longcode": "",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": false,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 172,\n      "createdAt": "2020-11-24T10:23:37.000Z",\n      "updatedAt": "2020-11-24T10:23:37.000Z"\n    },\n    {\n      "name": "Paycom",\n      "slug": "paycom",\n      "code": "999992",\n      "longcode": "",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": false,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 171,\n      "createdAt": "2020-11-24T10:20:45.000Z",\n      "updatedAt": "2020-11-24T10:20:54.000Z"\n    },\n    {\n      "name": "Petra Mircofinance Bank Plc",\n      "slug": "petra-microfinance-bank-plc",\n      "code": "50746",\n      "longcode": "",\n      "gateway": null,\n      "pay_with_bank": false,\n      "active": true,\n      "is_deleted": false,\n      "country": "Nigeria",\n      "currency": "NGN",\n      "type": "nuban",\n      "id": 170,\n      "createdAt": "2020-11-24T10:03:06.000Z",\n      "updatedAt": "2020-11-24T10:03:06.000Z"\n    }\n  ],\n  "meta": {\n      "next": "YmFuazoxNjk=",\n      "previous": null,\n      "perPage": 5\n  }\n}'},DuZw:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", \n      amount: "10000",\n      metadata: {\n        custom_fields: [\n          {\n            value: "makurdi",\n            display_name: "Donation for",\n            variable_name: "donation_for"\n          }\n        ]\n      },\n      bank: {\n          code: "057",\n          account_number: "0000000000"\n      },\n      birthday: "1995-12-23"\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "email": "customer@email.com",\n  "amount": "10000",\n  "metadata": {\n    "custom_fields": [\n      {\n        "value": "makurdi",\n        "display_name": "Donation for",\n        "variable_name": "donation_for"\n      }\n    ]\n  },\n  "bank":{\n      "code": "057",\n      "account_number": "0000000000"\n  },\n  "birthday": "1995-12-23"\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/charge\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/charge";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "10000",\n    "metadata" => {\n      "custom_fields" => [\n        {\n          "value" => "makurdi",\n          "display_name" => "Donation for",\n          "variable_name" => "donation_for"\n        }\n      ]\n    },\n    "bank" => {\n        "code" => "057",\n        "account_number" => "0000000000"\n    },\n    "birthday" => "1995-12-23"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},E2fG:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/submit_pin\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ pin: "1234", reference: "5bwib5v6anhe9xa" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"pin\": \"1234\",\n  \"reference\": \"5bwib5v6anhe9xa\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/submit_pin',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/charge/submit_pin";\n\n  $fields = [\n    \'pin\' => "1234",\n    \'reference\' => "5bwib5v6anhe9xa"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},EBCz:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ [{"authorization": "AUTH_n95vpedf", "amount": 2500}, \n      {"authorization": "AUTH_ljdt4e4j", "amount": 1500}]\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  [{\"authorization\": \"AUTH_n95vpedf\", \"amount\": 2500}, \n  {\"authorization\": \"AUTH_ljdt4e4j\", \"amount\": 1500}]\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $curl = curl_init();\n  $url = "https://api.paystack.co/bulkcharge";\n\n  $fields = \'[{\n    "authorization": "AUTH_XXXX", \n    "amount": 2500\n  }, \n  {\n    "authorization": "AUTH_XXXX", \n    "amount": 1500\n  }]\';\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => $url,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => \'\',\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 0,\n    CURLOPT_FOLLOWLOCATION => true,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => \'POST\',\n    CURLOPT_POSTFIELDS => $fields,\n    CURLOPT_HTTPHEADER => array(\n      \'Authorization: Bearer SECRET_KEY\',\n      \'Content-Type: application/json\'\n    ),\n  ));\n\n  $response = curl_exec($curl);\n\n  curl_close($curl);\n  echo $response;\n?>'},EeQk:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/paymentrequest,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},EhpR:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment session timeout retrieved",\n  "data": {\n    "payment_session_timeout": 30\n  }\n}'},Er9V:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page/:id/product\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "product": [473, 292] }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"product\": [473, 292]\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page/:id/product',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/page/:id/product";\n\n  $fields = [\n    \'product\' => [473, 292]\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},F68s:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subscription\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subscription,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/subscription,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},F8k7:function(e){e.exports=JSON.parse('{"initiate":{"id":"transfer-initiate","title":"Initiate Transfer","route":"/transfer","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"source","type":"String","description":"Where should we transfer from? Only <code>balance</code> for now","required":true},{"param":"amount","type":"Integer","description":"Amount to transfer in <strong>kobo</strong> if currency is <code>NGN</code> and <strong>pesewas</strong> if currency is <code>GHS</code>.","required":true},{"param":"recipient","type":"String","description":"Code for transfer recipient","required":true},{"param":"reason","type":"String","description":"The reason for the transfer","required":false},{"param":"currency","type":"String","description":"Specify the currency of the transfer. Defaults to NGN","required":false},{"param":"reference","type":"String","description":"If specified, the field should be a unique identifier (in lowercase) for the object. Only <code>-</code>,<code>_</code> and alphanumeric characters allowed.","required":false}],"query":[],"path":[]},"finalize":{"id":"transfer-finalize","title":"Finalize Transfer","route":"/transfer/finalize_transfer","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"transfer_code","type":"String","description":"The transfer code you want to finalize","required":true},{"param":"otp","type":"String","description":"OTP sent to business phone to verify transfer","required":true}],"query":[],"path":[]},"bulk":{"id":"transfer-bulk","title":"Initiate Bulk Transfer","route":"/transfer/bulk","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"source","type":"String","description":"Where should we transfer from? Only <code>balance</code> for now","required":true},{"param":"transfers","type":"Array","description":"A list of transfer object. Each object should contain <code>amount</code>, <code>recipient</code>, and <code>reference</code>","required":true}],"query":[],"path":[]},"list":{"id":"transfer-list","title":"List Transfers","route":"/transfer","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what transfer you want to page. If not specify we use a default value of 1.","required":true},{"param":"customer","type":"String","description":"Filter by customer ID","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing transfer e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing transfer e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"transfer-fetch","title":"Fetch Transfer","route":"/transfer/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"The transfer <code>ID</code> or <code>code</code> you want to fetch","required":true}]},"verify":{"id":"transfer-verify","title":"Verify Transfer","route":"/transfer/verify/:reference","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"reference","type":"String","description":"Transfer reference","required":true}]}}')},FG1S:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request totals",\n  "data": {\n    "pending": [\n      {\n        "currency": "NGN",\n        "amount": 42000\n      },\n      {\n        "currency": "USD",\n        "amount": 0\n      }\n    ],\n    "successful": [\n      {\n        "currency": "NGN",\n        "amount": 0\n      },\n      {\n        "currency": "USD",\n        "amount": 0\n      }\n    ],\n    "total": [\n      {\n        "currency": "NGN",\n        "amount": 42000\n      },\n      {\n        "currency": "USD",\n        "amount": 0\n      }\n    ]\n  }\n}'},FXO4:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/plan/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/plan/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/plan/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},Fdtq:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dedicated_account',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dedicated_account",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},Frmw:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge/resume/:batch_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge/resume/:batch_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bulkcharge/resume/:batch_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},GGt2:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transfer/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},GKKm:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/split/:id',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/split/:id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},GnGZ:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subaccount\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "business_name": "Sunshine Studios", "settlement_bank": "044", "account_number": "0193274682", "percentage_charge": 18.2 }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"business_name\": \"Sunshine Studios\",\n  \"settlement_bank\": \"044\", \n  \"account_number\": \"0193274682\", \n  \"percentage_charge\": 18.2 \n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subaccount',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/subaccount";\n\n  $fields = [\n    \'business_name\' => "Sunshine Studios",\n    \'settlement_bank\' => "044", \n    \'account_number\' => "0193274682", \n    \'percentage_charge\' => 18.2 \n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"H+bb":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Page retrieved",\n  "data": {\n    "integration": 100032,\n    "domain": "test",\n    "name": "Offering collections",\n    "description": "Give unto the Lord, and it shall be multiplied ten-fold to you.",\n    "amount": null,\n    "currency": "NGN",\n    "slug": "5nApBwZkvY",\n    "active": true,\n    "id": 18,\n    "createdAt": "2016-03-30T00:49:57.000Z",\n    "updatedAt": "2016-03-30T00:49:57.000Z",\n    "products": [\n      {\n        "product_id": 523,\n        "name": "Product Four",\n        "description": "Product Four Description",\n        "product_code": "PROD_l9p81u9pkjqjunb",\n        "page": 18,\n        "price": 500000,\n        "currency": "NGN",\n        "quantity": 0,\n        "type": "good",\n        "features": null,\n        "is_shippable": 0,\n        "domain": "test",\n        "integration": 343288,\n        "active": 1,\n        "in_stock": 1\n      },\n      {\n        "product_id": 522,\n        "name": "Product Five",\n        "description": "Product Five Description",\n        "product_code": "PROD_8ne9cxutagmtsyz",\n        "page": 18,\n        "price": 500000,\n        "currency": "NGN",\n        "quantity": 0,\n        "type": "good",\n        "features": null,\n        "is_shippable": 0,\n        "domain": "test",\n        "integration": 343288,\n        "active": 1,\n        "in_stock": 0\n      }\n    ]\n  }\n}'},H2TS:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_401",(function(){return r}));var a='{\n  "status": true,\n  "message": "Products retrieved",\n  "data": [\n    {\n      "integration": 343288,\n      "name": "Product Four",\n      "description": "Product Four Description",\n      "product_code": "PROD_l9p81u9pkjqjunb",\n      "price": 500000,\n      "currency": "NGN",\n      "quantity": 0,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": true,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": true,\n      "metadata": null,\n      "id": 523,\n      "createdAt": "2019-06-29T14:06:01.000Z",\n      "updatedAt": "2019-06-29T14:06:01.000Z"\n    },\n    {\n      "integration": 343288,\n      "name": "Product Five",\n      "description": "Product Five Description",\n      "product_code": "PROD_8ne9cxutagmtsyz",\n      "price": 500000,\n      "currency": "NGN",\n      "quantity": 0,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": false,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": false,\n      "metadata": null,\n      "id": 522,\n      "createdAt": "2019-06-29T14:04:50.000Z",\n      "updatedAt": "2019-06-29T14:04:50.000Z"\n    },\n    {\n      "integration": 343288,\n      "name": "Product Three",\n      "description": "Product Three Description",\n      "product_code": "PROD_numva2ypta07syb",\n      "price": 500000,\n      "currency": "NGN",\n      "quantity": 0,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": false,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": false,\n      "metadata": null,\n      "id": 521,\n      "createdAt": "2019-06-29T14:01:43.000Z",\n      "updatedAt": "2019-06-29T14:01:43.000Z"\n    },\n    {\n      "integration": 343288,\n      "name": "Product Two",\n      "description": "Product Two Description",\n      "product_code": "PROD_byz1ess2lpep67b",\n      "price": 500000,\n      "currency": "NGN",\n      "quantity": 0,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": true,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": false,\n      "metadata": null,\n      "id": 520,\n      "createdAt": "2019-06-29T14:01:18.000Z",\n      "updatedAt": "2019-06-29T14:01:18.000Z"\n    },\n    {\n      "integration": 343288,\n      "name": "Product One",\n      "description": "Product One Description",\n      "product_code": "PROD_qcie3smv3zxf4vz",\n      "price": 500000,\n      "currency": "NGN",\n      "quantity": 10,\n      "quantity_sold": null,\n      "type": "good",\n      "image_path": "",\n      "file_path": "",\n      "is_shippable": false,\n      "unlimited": false,\n      "domain": "test",\n      "active": true,\n      "features": null,\n      "in_stock": true,\n      "metadata": null,\n      "id": 519,\n      "createdAt": "2019-06-29T13:52:42.000Z",\n      "updatedAt": "2019-06-29T13:52:42.000Z"\n    }\n  ],\n  "meta": {\n    "total": 5,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}',r='{\n  "status": false,\n  "message": "Invalid key"\n}'},HEVo:function(e,t,n){"use strict";n.r(t),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s})),n.d(t,"bash",(function(){return a}));var a='curl https://api.paystack.co/dedicated_account/split\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "account_number": "0033322211" }\'\n-X DELETE',r="const https = require('follow-redirects').https;\nconst fs = require('fs');\n\nconst options = {\n  'method': 'DELETE',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account/split',\n  'headers': {\n    'authorization': 'Bearer SEECRET_KEY',\n    'content-type': 'application/json'\n  },\n  'maxRedirects': 20\n};\n\nconst req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nconst postData = JSON.stringify({\"account_number\":\"0033322211\"});\n\nreq.setHeader('Content-Length', postData.length);\n\nreq.write(postData);\n\nreq.end();",s='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account/split",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "DELETE",\n  CURLOPT_POSTFIELDS => array("account_number" => "0033322211"),\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SEECRET_KEY",\n    "content-type: application/json",\n    "Cookie: __cfduid=df6355b0f005797cd79527d1a6da37c131598191689"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n'},HPAf:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/balance/ledger\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/balance/ledger,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/balance/ledger,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"I6P/":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/submit_otp\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ otp: "123456", reference: "5bwib5v6anhe9xa" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"otp\": \"123456\",\n  \"reference\": \"5bwib5v6anhe9xa\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/submit_otp',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/charge/submit_otp";\n\n  $fields = [\n    \'otp\' => "123456",\n    \'reference\' => "5bwib5v6anhe9xa"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"IS+m":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/export\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/export,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/export,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},ITfV:function(e,t,n){"use strict";t.a={plain:{color:"#403f53",backgroundColor:"#FBFBFB"},styles:[{types:["changed"],style:{color:"rgb(162, 191, 252)",fontStyle:"italic"}},{types:["deleted"],style:{color:"rgba(239, 83, 80, 0.56)",fontStyle:"italic"}},{types:["inserted","attr-name"],style:{color:"rgb(72, 118, 214)",fontStyle:"italic"}},{types:["comment"],style:{color:"rgb(152, 159, 177)",fontStyle:"italic"}},{types:["string","builtin","char","constant","url"],style:{color:"rgb(72, 118, 214)"}},{types:["variable"],style:{color:"rgb(201, 103, 101)"}},{types:["number"],style:{color:"rgb(170, 9, 130)"}},{types:["punctuation"],style:{color:"rgb(153, 76, 195)"}},{types:["function","selector","doctype"],style:{color:"rgb(153, 76, 195)",fontStyle:"italic"}},{types:["class-name"],style:{color:"rgb(17, 17, 17)"}},{types:["tag"],style:{color:"rgb(153, 76, 195)"}},{types:["operator","property","keyword","namespace"],style:{color:"rgb(12, 150, 155)"}},{types:["boolean"],style:{color:"rgb(188, 84, 84)"}}]}},Ilq0:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/integration/payment_session_timeout\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/integration/payment_session_timeout,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/integration/payment_session_timeout,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},J4Ga:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r}));var a='{\n  "status": true,\n  "message": "Dispute updated successfully",\n  "data": [\n    {\n      "currency": "NGN",\n      "last4": null,\n      "bin": null,\n      "transaction_reference": null,\n      "merchant_transaction_reference": null,\n      "refund_amount": 1002,\n      "status": "resolved",\n      "domain": "test",\n      "resolution": "merchant-accepted",\n      "source": "bank",\n      "category": "general",\n      "note": null,\n      "attachments": "attachement",\n      "id": 624,\n      "transaction": {\n        "id": 5991760,\n        "domain": "test",\n        "status": "success",\n        "reference": "asjck8gf76zd1dr",\n        "amount": 39100,\n        "message": null,\n        "gateway_response": "Successful",\n        "paid_at": "2017-11-09T00:01:56.000Z",\n        "created_at": "2017-11-09T00:01:36.000Z",\n        "channel": "card",\n        "currency": "NGN",\n        "ip_address": null,\n        "metadata": "",\n        "log": null,\n        "fees": 587,\n        "fees_split": null,\n        "authorization": {},\n        "customer": {\n          "international_format_phone": null\n        },\n        "plan": {},\n        "subaccount": {},\n        "split": {},\n        "order_id": null,\n        "paidAt": "2017-11-09T00:01:56.000Z",\n        "createdAt": "2017-11-09T00:01:36.000Z",\n        "requested_amount": null\n      },\n      "category": null,\n      "customer": {\n        "id": 10207,\n        "first_name": null,\n        "last_name": null,\n        "email": "shola@baddest.com",\n        "customer_code": "CUS_unz4q52yjsd6064",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default",\n        "international_format_phone": null\n      },\n      "organization": 1,\n      "evidence": null,\n      "resolvedAt": "2019-08-28T14:14:41.000Z",\n      "createdAt": "2019-08-28T14:14:41.000Z",\n      "updatedAt": "2019-08-28T14:29:07.000Z",\n      "dueAt": null\n    }\n  ]\n}',r='{\n  "status": false,\n  "message": "Refund amount cannot be greater than initial amount"\n}'},JdmE:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subscription disabled successfully"\n}'},JgjR:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transferrecipient,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transferrecipient,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},JyXb:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_200_failed",(function(){return r})),n.d(t,"stat_400_invalid",(function(){return s}));var a='{\n  "status": true,\n  "message": "Verification successful",\n  "data": {\n    "amount": 27000,\n    "currency": "NGN",\n    "transaction_date": "2016-10-01T11:03:09.000Z",\n    "status": "success",\n    "reference": "DG4uishudoq90LD",\n    "domain": "test",\n    "metadata": 0,\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "41.1.25.1",\n    "log": {\n      "time_spent": 9,\n      "attempts": 1,\n      "authentication": null,\n      "errors": 0,\n      "success": true,\n      "mobile": false,\n      "input": [],\n      "channel": null,\n      "history": [{\n        "type": "input",\n        "message": "Filled these fields: card number, card expiry, card cvv",\n        "time": 7\n        },\n        {\n          "type": "action",\n          "message": "Attempted to pay",\n          "time": 7\n        },\n        {\n          "type": "success",\n          "message": "Successfully paid",\n          "time": 8\n        },\n        {\n          "type": "close",\n          "message": "Page closed",\n          "time": 9\n        }\n      ]\n    }\n    "fees": null,\n    "authorization": {\n      "authorization_code": "AUTH_8dfhjjdt",\n      "card_type": "visa",\n      "last4": "1381",\n      "exp_month": "08",\n      "exp_year": "2018",\n      "bin": "412345",\n      "bank": "TEST BANK",\n      "channel": "card",\n      "signature": "SIG_idyuhgd87dUYSHO92D",\n      "reusable": true,\n      "country_code": "NG",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 84312,\n      "customer_code": "CUS_hdhye17yj8qd2tx",\n      "first_name": "BoJack",\n      "last_name": "Horseman",\n      "email": "bojack@horseman.com"\n    },\n    "plan": "PLN_0as2m9n02cl0kp6",\n    "requested_amount": 1500000\n  }\n}',r='{  \n  "status":true,\n  "message":"Verification successful",\n  "data": {  \n    "amount":27000,\n    "currency":"NGN",\n    "transaction_date":"2016-10-01T11:03:09.000Z",\n    "status":"failed",\n    "reference":"djfoidjkdkj41",\n    "domain":"test",\n    "metadata":0,\n    "gateway_response":"Insufficient Funds",\n    "message":null,\n    "channel":"card",\n    "ip_address":"41.1.25.1",\n    "log": {  \n      "time_spent":9,\n      "attempts":1,\n      "authentication":null,\n      "errors":0,\n      "success":true,\n      "mobile":false,\n      "input":[ ],\n      "channel":null,\n      "history": [  \n         {  \n           "type":"input",\n           "message":"Filled these fields: card number, card expiry, card cvv",\n           "time":7\n         },\n         {  \n           "type":"action",\n           "message":"Attempted to pay",\n           "time":7\n         },\n         {  \n           "type":"close",\n           "message":"Page closed",\n           "time":9\n         }\n      ]\n    },\n    "fees":null,\n    "authorization":{  \n      "authorization_code":"AUTH_8dfhjjdt",\n      "card_type":"visa",\n      "last4":"1381",\n      "exp_month":"08",\n      "exp_year":"2018",\n      "bin":"412345",\n      "bank":"TEST BANK",\n      "channel":"card",\n      "signature": "SIG_idyuhgd87dUYSHO92D",\n      "reusable":true,\n      "country_code":"NG",\n      "account_name": "BoJack Horseman"\n    },\n    "customer":{  \n      "id":84312,\n      "customer_code":"CUS_hdhye17yj8qd2tx",\n      "first_name":"BoJack",\n      "last_name":"Horseman",\n      "email":"bojack@horseman.com"\n    },\n    "plan":""\n  }\n}\n',s='{  \n  "status":false,\n  "message":"Invalid key"\n}'},"K/KC":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n    "status": true,\n    "message": "Dedicated account providers retrieved",\n    "data": [\n        {\n            "provider_slug": "access-bank",\n            "bank_id": 1,\n            "bank_name": "Access Bank",\n            "id": 6\n        },\n        {\n            "provider_slug": "wema-bank",\n            "bank_id": 20,\n            "bank_name": "Wema Bank",\n            "id": 5\n        }\n       \n    ]\n}'},K8Ph:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/plan\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/plan,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/plan,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},KAE5:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/customer,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},KGpS:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/:id/upload_url?upload_filename=filename.ext\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/:id/upload_url?upload_filename=filename.ext',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dispute/:id/upload_url?upload_filename=filename.ext",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},KwFT:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/refund/:reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/refund/:reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/refund/:reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},L91f:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_400",(function(){return d}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "ojk8k0bimgftf0x",\n    "status": "send_otp",\n    "display_text": "Please send OTP (none will be sent to your phone)"\n  }\n}',r='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin",\n    "display_text": "The PIN must be exactly 4 digits"\n  }\n}',o='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "bc9w93gh629a4d7",\n    "status": "failed",\n    "message": "Error occured while enrolling you for OTP!"\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "The phone number must have at least one character"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},LFJs:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/totals\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/totals,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/paymentrequest/totals,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},LJFq:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Split retrieved",\n  "data": {\n    "id": 143,\n    "name": "Test Doc",\n    "split_code": "SPL_UO2vBzEqHW",\n    "integration": 428626,\n    "domain": "test",\n    "type": "percentage",\n    "active": 1,\n    "currency": "NGN",\n    "bearer_type": "subaccount",\n    "bearer_subaccount": 40809,\n    "created_at": "2020-06-30T11:52:24.000Z",\n    "updated_at": "2020-06-30T11:52:24.000Z",\n    "subaccounts": [\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_z3x6z3nbo14xsil",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 80,\n          "settlement_bank": "Business Bank",\n          "account_number": "1234567890"\n        },\n        "share": 30\n      },\n      {\n        "subaccount": {\n          "id": 40811,\n          "subaccount_code": "ACCT_pwwualwty4nhq9d",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 80,\n          "settlement_bank": "Business Bank",\n          "account_number": "0123456789"\n        },\n        "share": 20\n      }\n    ],\n    "total_subaccounts": 2\n  }\n}'},M9A4:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/product/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/product/:id',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/product/:id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},MbXk:function(e){e.exports=JSON.parse('{"fetch-timeout":{"id":"control-panel-fetch-timeout","title":"Fetch Payment Session Timeout","route":"/integration/payment_session_timeout","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]},"update-timeout":{"id":"control-panel-update-timeout","title":"Update Payment Session Timeout","route":"/integration/payment_session_timeout","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"timeout","type":"Integer","description":"Time before stopping session <strong>(in seconds)</strong>. Set to 0 to cancel session timeouts","required":true}],"query":[],"path":[]}}')},NRvx:function(e){e.exports=JSON.parse('{"bank":{"id":"miscellaneous-bank","title":"List Banks","route":"/bank","method":"GET","header":[],"body":[],"query":[{"param":"country","type":"String","description":"The country from which to obtain the list of supported banks. e.g <code>country=ghana</code> or <code>country=nigeria</code>","required":true},{"param":"use_cursor","type":"boolean","description":"Flag to enable cursor pagination on the endpoint","required":true},{"param":"next","type":"String","description":"A cursor that indicates your place in the list. It can be used to fetch the next page of the list","required":false},{"param":"previous","type":"String","description":"A cursor that indicates your place in the list. It should be used to fetch the previous page of the list after an intial next request","required":false},{"param":"perPage","type":"Integer","description":"The number of objects to return per page. Defaults to 50, and limited to 100 records per page.","required":true},{"param":"gateway","type":"String","description":"The gateway type of the bank. It can be one of these: [emandate, digitalbankmandate] ","required":false},{"param":"type","type":"String","description":"Type of financial channel. For Ghanaian channels, please use either <strong>mobile_money</strong> for mobile money channels OR <strong>ghipps</strong> for bank channels","required":false},{"param":"currency","type":"String","description":"Any of <code>NGN</code>, <code>USD</code>, <code>GHS</code>  or <code>ZAR</code>","required":false}],"path":[]},"country":{"id":"miscellaneous-country","title":"List/Search Countries","route":"/country","method":"GET","header":[],"body":[],"query":[],"path":[]},"providers":{"id":"miscellaneous-providers","title":"List Providers","route":"/banks","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"pay_with_bank_transfer","type":"Boolean","description":"A flag to filter for available providers","required":true}],"path":[]},"avs-states":{"id":"miscellaneous-avs-states","title":"List States (AVS)","route":"/address_verification/states","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"country","type":"Integer","description":"The country code of the states to list. It is gotten after the charge request.","required":true}],"path":[]}}')},NYRD:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subscription/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subscription/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/subscription/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},NZwA:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_404",(function(){return r}));var a='{\n  "status": true,\n  "message": "Transfer retrieved",\n  "data": {\n    "integration": 119333,\n    "recipient": {\n      "domain": "test",\n      "type": "nuban",\n      "currency": "NGN",\n      "name": "Zombie",\n      "details": {\n        "account_number": "0100000001",\n        "account_name": null,\n        "bank_code": "044",\n        "bank_name": "Access Bank"\n      },\n      "description": "Zombier",\n      "metadata": "",\n      "recipient_code": "RCP_c2mty1w1uvd4av4",\n      "active": true,\n      "email": null,\n      "id": 31911,\n      "integration": 119333,\n      "createdAt": "2017-10-13T20:35:51.000Z",\n      "updatedAt": "2017-10-13T20:35:51.000Z"\n    },\n    "domain": "test",\n    "amount": 50000,\n    "currency": "NGN",\n    "reference": "ref_demo",\n    "source": "balance",\n    "source_details": null,\n    "reason": "Test for reference",\n    "status": "success",\n    "failures": null,\n    "transfer_code": "TRF_kjati32r73poyt5",\n    "titan_code": null,\n    "transferred_at": null,\n    "id": 476948,\n    "createdAt": "2018-07-22T10:29:33.000Z",\n    "updatedAt": "2018-07-22T10:29:33.000Z"\n  }\n}',r='{\n  "status": false,\n  "message": "Transfer not found"\n}'},NulJ:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/:id',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/:id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},O3nu:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/balance\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/balance,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/balance,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},O5B8:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name": "Updated Name", "active": true }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Updated Name\",\n  \"active\": true\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/split/:id',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/split/:id";\n\n  $fields = [\n    "name" => "Updated Name",\n    "active" => true\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},O8sa:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Customer created",\n  "data": {\n    "email": "customer@email.com",\n    "integration": 100032,\n    "domain": "test",\n    "customer_code": "CUS_xnxdt6s1zg1f4nx",\n    "id": 1173,\n    "identified": false,\n    "identifications":null,\n    "createdAt": "2016-03-29T20:03:09.584Z",\n    "updatedAt": "2016-03-29T20:03:09.584Z"\n  }\n}'},OB1P:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/identity/bvn/resolve/:BVN\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https');\n\nconst options = {\n  'method': 'GET',\n  'hostname': 'api.paystack.co',\n  'path': '/identity/bvn/resolve/:BVN',\n  'headers': {\n    'Authorization': 'Bearer YOUR_SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n    let data = ''\n  \n    res.on('data', (chunk) => {\n      data += chunk\n    });\n  \n    res.on('end', () => {\n      console.log(JSON.parse(data))\n    })\n  }).on('error', error => {\n    console.error(error)\n})",s="<?php\n\n  $curl = curl_init();\n\n  curl_setopt_array($curl, array(\n    CURLOPT_URL => 'https://api.paystack.co/identity/bvn/resolve/:BVN',\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => '',\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => 'GET',\n    CURLOPT_HTTPHEADER => array(\n      'Authorization: Bearer YOUR_SECRET_KEY',\n      'Cache-Control: no-cache'\n    ),\n));\n\n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n  curl_close($curl);\n  \n  if ($err) {\n    echo \"cURL Error #:\" . $err;\n  } else {\n    echo $response;\n  }\n?>"},OmPK:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge/pause/:batch_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge/pause/:batch_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bulkcharge/pause/:batch_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},OyLD:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/settlement/:id/transactions\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/settlement/:id/transactions,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/settlement/:id/transactions,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},P9go:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/archive/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-X POST',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/archive/:id_or_code',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/paymentrequest/archive/:id_or_code";\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},PBde:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bulk charges retrieved",\n  "data": [\n    {\n      "domain": "test",\n      "batch_code": "BCH_1nV4L1D7cayggh",\n      "status": "complete",\n      "id": 1733,\n      "createdAt": "2017-02-04T05:44:19.000Z",\n      "updatedAt": "2017-02-04T05:45:02.000Z"\n    }\n  ],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},PSFq:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transferrecipient/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transferrecipient/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},PVtg:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_403",(function(){return r}));var a='{\n  "status": true,\n  "message": "Customer updated",\n  "data": {\n    "first_name": "Peter",\n    "last_name": "Griffin",\n    "email": "peter@familyguy.com",\n    "phone": null,\n    "metadata": {},\n    "domain": "test",\n    "identified": false,\n    "identifications": null,\n    "customer_code": "CUS_xr58yrr2ujlft9k",\n    "risk_action": "allow",\n    "id": 2109,\n    "integration": 100032,\n    "createdAt": "2016-01-26T13:43:38.000Z",\n    "updatedAt": "2016-08-23T03:56:43.000Z"\n  }\n}',r='{\n  "status": false,\n  "message": "You cannot modify risk level of customers on this integration"\n}'},Pg6r:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Refunds retrieved",\n  "data": [\n    {\n      "id": 1,\n      "integration": 100982,\n      "domain": "live",\n      "transaction": 1641,\n      "dispute": 20,\n      "amount": 500000,\n      "deducted_amount": 500000,\n      "currency": "NGN",\n      "channel": "migs",\n      "fully_deducted": 1,\n      "refunded_by": "customer@gmail.com",\n      "refunded_at": "2018-01-12T10:54:47.000Z",\n      "expected_at": "2017-10-01T21:10:59.000Z",\n      "settlement": null,\n      "customer_note": "xxx",\n      "merchant_note": "xxx",\n      "created_at": "2017-09-24T21:10:59.000Z",\n      "updated_at": "2018-01-18T11:59:56.000Z",\n      "status": "processed"\n    },\n    {\n      "id": 2,\n      "integration": 100982,\n      "domain": "test",\n      "transaction": 323896,\n      "dispute": 45,\n      "amount": 500000,\n      "deducted_amount": null,\n      "currency": "NGN",\n      "channel": "migs",\n      "fully_deducted": null,\n      "refunded_by": "customer@gmail.com",\n      "refunded_at": "2017-09-24T21:11:53.000Z",\n      "expected_at": "2017-10-01T21:11:53.000Z",\n      "settlement": null,\n      "customer_note": "xxx",\n      "merchant_note": "xxx",\n      "created_at": "2017-09-24T21:11:53.000Z",\n      "updated_at": "2017-09-24T21:11:53.000Z",\n      "status": "pending"\n    }\n  ]\n}'},"Q74/":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccount removed"\n}'},QQyW:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Authorization URL created",\n  "data": {\n    "authorization_url": "https://checkout.paystack.com/0peioxfhpn",\n    "access_code": "0peioxfhpn",\n    "reference": "7PVGX8MEk85tgeEpVDtD"\n  }\n}'},QiBX:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subscription/enable\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "code": "SUB_vsyqdmlzble3uii", "token": "d7gofp6yppn3qz7" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"code\": \"SUB_vsyqdmlzble3uii\",\n  \"token\": \"d7gofp6yppn3qz7\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subscription/enable',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/subscription/enable";\n\n  $fields = [\n    \'code\' => "SUB_vsyqdmlzble3uii",\n    \'token\' => "d7gofp6yppn3qz7"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},QmSB:function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),s=n("vOnD"),o=s.a.h1.withConfig({displayName:"Permalink__H1",componentId:"sc-1waa3o2-0"})(["position:relative;"]),i=s.a.h2.withConfig({displayName:"Permalink__H2",componentId:"sc-1waa3o2-1"})(["position:relative;"]),c=s.a.h3.withConfig({displayName:"Permalink__H3",componentId:"sc-1waa3o2-2"})(["position:relative;"]),u=s.a.h4.withConfig({displayName:"Permalink__H4",componentId:"sc-1waa3o2-3"})(["position:relative;"]),l=s.a.h5.withConfig({displayName:"Permalink__H5",componentId:"sc-1waa3o2-4"})(["position:relative;"]),d=s.a.h6.withConfig({displayName:"Permalink__H6",componentId:"sc-1waa3o2-5"})(["position:relative;"]);t.a=function(e){var t=e.type,n=e.title,a=e.id,s=r.a.createElement("a",{href:"#"+a,"aria-label":"redirect permalink",className:"anchor before"},r.a.createElement("svg",{"aria-hidden":"true",focusable:"false",height:"16",version:"1.1",viewBox:"0 0 16 16",width:"16"},r.a.createElement("path",{fillRule:"evenodd",d:"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"}))),p={h1:r.a.createElement(o,{id:a},s,n),h2:r.a.createElement(i,{id:a},s,n),h3:r.a.createElement(c,{id:a},s,n),h4:r.a.createElement(u,{id:a},s,n),h5:r.a.createElement(l,{id:a},s,n),h6:r.a.createElement(d,{id:a},s,n)};return r.a.createElement(r.a.Fragment,null,p[t])}},QtWY:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "OTP has been resent"\n}'},RTPz:function(e){e.exports=JSON.parse('{"fetch":{"id":"settlement-fetch","title":"Fetch Settlements","route":"/settlement","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"subaccount","type":"String","description":"Provide a subaccount ID to export only settlements for that subaccount. Set to <code>none</code> to export only transactions for the account.","required":false},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing settlements e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing settlements e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch-transaction":{"id":"settlement-transactions","title":"Fetch Settlement Transactions","route":"/settlement/:id/transactions","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing settlement transactions e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing settlement transactions e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[{"param":"id","type":"String","description":"The settlement ID in which you want to fetch its transactions","required":true}]}}')},RfB0:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Plan updated. 1 subscription(s) affected"\n}'},SGKY:function(e){e.exports=JSON.parse('{"create":{"id":"transfer-recipient-create","title":"Create Transfer Recipient","route":"/transferrecipient","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"type","type":"String","description":"Recipient Type (Only <code>nuban</code> at this time)","required":true},{"param":"name","type":"String","description":"A name for the recipient","required":true},{"param":"account_number","type":"String","description":"Required if type is <code>nuban</code>","required":true},{"param":"bank_code","type":"String","description":"Required if type is <code>nuban</code>. You can get the list of Bank Codes by calling the <a href=\\"#miscellaneous-bank\\">List Banks</a> endpoint.","required":true},{"param":"description","type":"String","description":"A description for this plan","required":false},{"param":"currency","type":"String","description":"Currency for the account receiving the transfer","required":false},{"param":"authorization_code","type":"String","description":"An authorization code from a previous transaction","required":false},{"param":"metadata","type":"Object","description":"Store additional information about your recipient in a structured format, JSON","required":false}],"query":[],"path":[]},"bulk":{"id":"transfer-recipient-bulk","title":"Bulk Create Transfer Recipient","route":"/transferrecipient/bulk","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"batch","type":"Array","description":"A list of transfer recipient object. Each object should contain <code>type</code>, <code>name</code>, and <code>bank_code</code>. Any <a href=\\"#transfer-recipient-create\\">Create Transfer Recipient</a> param can also be passed.","required":true}],"query":[],"path":[]},"list":{"id":"transfer-recipient-list","title":"List Transfer Recipients","route":"/transferrecipient","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing transfer recipients e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing transfer recipients e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"transfer-recipient-fetch","title":"Fetch Transfer Recipient","route":"/transferrecipient/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"An ID or code for the recipient whose details you want to receive.","required":true}]},"update":{"id":"transfer-recipient-update","title":"Update Transfer Recipient","route":"/transferrecipient/:id_or_code","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"A name for the recipient","required":true},{"param":"email","type":"String","description":"Email address of the recipient","required":true},{"param":"description","type":"String","description":"A description for this plan","required":false}],"query":[],"path":[{"param":"id_or_code","type":"String","description":"Transfer Recipient\'s ID or code","required":true}]},"delete":{"id":"transfer-recipient-delete","title":"Delete Transfer Recipient","route":"/transferrecipient/:id_or_code","method":"DELETE","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"An ID or code for the recipient who you want to delete.","required":true}]}}')},SOke:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/disable_otp_finalize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "otp": "928783" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"otp\": \"928783\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/disable_otp_finalize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer/disable_otp_finalize";\n\n  $fields = [\n    "otp" => "928783"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},SROB:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "source": "balance", "reason": "Calm down", \n      "amount":3794800, "recipient": "RCP_gx2wn530m0i3w3m"\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"source\": \"balance\", \n  \"reason\": \"Calm down\", \n  \"amount\":3794800, \n  \"recipient\": \"RCP_gx2wn530m0i3w3m\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer";\n\n  $fields = [\n    "source" => "balance", \n    "reason" => "Calm down", \n    "amount" => 3794800, \n    "recipient" => "RCP_gx2wn530m0i3w3m"\n    ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},SWIC:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bulkcharge/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"T3o/":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subscription enabled successfully"\n}'},"T8+/":function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Balances retrieved",\n  "data": [\n    {\n      "currency": "NGN",\n      "balance": 1700000\n    }\n  ]\n}'},TBuq:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer": 481193, "preferred_bank":"wema-bank", \n      "split_code": "SPL_e7jnRLtzla" \n    }\'\n-X POST',r="const https = require('follow-redirects').https;\nconst fs = require('fs');\n\nlet options = {\n  'method': 'POST',\n  'hostname': 'api.paystack.co',\n  'path': '/dedicated_account',\n  'headers': {\n    'authorization': 'Bearer SEECRET_KEY',\n    'content-type': 'application/json',\n    'user-agent': 'Paystack-Developers-Hub'\n  },\n  'maxRedirects': 20\n};\n\nlet req = https.request(options, function (res) {\n  var chunks = [];\n\n  res.on(\"data\", function (chunk) {\n    chunks.push(chunk);\n  });\n\n  res.on(\"end\", function (chunk) {\n    var body = Buffer.concat(chunks);\n    console.log(body.toString());\n  });\n\n  res.on(\"error\", function (error) {\n    console.error(error);\n  });\n});\n\nlet postData = JSON.stringify({\"customer\":481193,\"preferred_bank\":\"wema-bank\", \"split_code\": \"SPL_e7jnRLtzla\"});\n\nreq.write(postData);\n\nreq.end();",s='<?php\n\n$curl = curl_init();\n\ncurl_setopt_array($curl, array(\n  CURLOPT_URL => "https://api.paystack.co/dedicated_account",\n  CURLOPT_RETURNTRANSFER => true,\n  CURLOPT_ENCODING => "",\n  CURLOPT_MAXREDIRS => 10,\n  CURLOPT_TIMEOUT => 0,\n  CURLOPT_FOLLOWLOCATION => true,\n  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n  CURLOPT_CUSTOMREQUEST => "POST",\n  CURLOPT_POSTFIELDS =>"{"customer":481193,"preferred_bank":"wema-bank", "split_code": "SPL_e7jnRLtzla"}",\n  CURLOPT_HTTPHEADER => array(\n    "authorization: Bearer SECRET_KEY",\n    "content-type: application/json",\n    "user-agent: Paystack-Developers-Hub"\n  ),\n));\n\n$response = curl_exec($curl);\n\ncurl_close($curl);\necho $response;\n'},TLrx:function(e){e.exports=JSON.parse('{"create":{"id":"page-create","title":"Create Page","route":"/page","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of page","required":true},{"param":"description","type":"String","description":"A description for this page","required":false},{"param":"amount","type":"Integer","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":false},{"param":"slug","type":"String","description":"URL slug you would like to be associated with this page. Page will be accessible at https://paystack.com/pay/[slug]","required":false},{"param":"metadata","type":"Object","description":"Extra data to configure the payment page including subaccount, logo image, transaction charge","required":false},{"param":"redirect_url","type":"String","description":"If you would like Paystack to redirect someplace upon successful payment, specify the URL here.","required":false},{"param":"custom_fields","type":"Array","description":"If you would like to accept custom fields, specify them here.","required":false}],"query":[],"path":[]},"list":{"id":"page-list","title":"List Pages","route":"/page","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing page e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing page e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"page-fetch","title":"Fetch Page","route":"/page/:id_or_slug","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_slug","type":"String","description":"The page <code>ID</code> or <code>slug</code> you want to fetch","required":true}]},"update":{"id":"page-update","title":"Update Page","route":"/page/:id_or_slug","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of page","required":true},{"param":"description","type":"String","description":"A description for this page","required":true},{"param":"amount","type":"Integer","description":"Default amount you want to accept using this page. If none is set, customer is free to provide any amount of their choice. The latter scenario is useful for accepting donations","required":false},{"param":"active","type":"Boolean","description":"Set to false to deactivate page url","required":false}],"query":[],"path":[{"param":"id_or_slug","type":"String","description":"Page ID or slug","required":true}]},"check-slug":{"id":"page-check-slug","title":"Check Slug Availability","route":"/page/check_slug_availability/:slug","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"slug","type":"String","description":"URL slug to be confirmed","required":true}]},"add-products":{"id":"page-add-products","title":"Add Products","route":"/page/:id/product","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"product","type":"Array of Integer","description":"Ids of all the products","required":true}],"query":[],"path":[{"param":"id","type":"Integer","description":"Id of the payment page","required":true}]}}')},TVw3:function(e){e.exports=JSON.parse('{"initiate":{"id":"bulk-charge-initiate","title":"Initiate Bulk Charge","route":"/bulkcharge","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"(no name )","type":"Array","description":"A list of charge object. Each object consists of an <code>authorization</code> and <code>amount</code>","required":true}],"query":[],"path":[]},"list":{"id":"bulk-charge-list","title":"List Bulk Charge Batches","route":"/bulkcharge","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what transfer you want to page. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing batches e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing batches e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch-batch":{"id":"bulk-charge-fetch-batch","title":"Fetch Bulk Charge Batch","route":"/bulkcharge/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"An ID or code for the charge whose batches you want to retrieve.","required":true}]},"fetch-charge":{"id":"bulk-charge-fetch-charge","title":"Fetch Charges in a Batch","route":"/bulkcharge/:id_or_code/charges","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"status","type":"String","description":"Either one of these values: <code>pending</code>, <code>success</code> or <code>failed</code>","required":true},{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what transfer you want to page. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing charges e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing charges e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[{"param":"id_or_code","type":"String","description":"An ID or code for the batch whose charges you want to retrieve.","required":true}]},"pause":{"id":"bulk-charge-pause","title":"Pause Bulk Charge Batch","route":"/bulkcharge/pause/:batch_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"batch_code","type":"String","description":"The batch code for the bulk charge you want to pause","required":true}]},"resume":{"id":"bulk-charge-resume","title":"Resume Bulk Charge Batch","route":"/bulkcharge/resume/:batch_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"batch_code","type":"String","description":"The batch code for the bulk charge you want to resume","required":true}]}}')},TasI:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/:id/evidence\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer_email": "cus@gmail.com",\n      "customer_name": "Mensah King",\n      "customer_phone": "0802345167",\n      "service_details": "claim for buying product",\n      "delivery_address": "3a ladoke street ogbomoso"\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"customer_email\": \"cus@gmail.com\",\n  \"customer_name\": \"Mensah King\",\n  \"customer_phone\": \"0802345167\",\n  \"service_details\": \"claim for buying product\",\n  \"delivery_address\": \"3a ladoke street ogbomoso\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/:id/evidence',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/dispute/:id/evidence";\n\n  $fields = [\n    "customer_email" => "cus@gmail.com",\n    "customer_name" => "Mensah King",\n    "customer_phone" => "0802345167",\n    "service_details" => "claim for buying product",\n    "delivery_address" => "3a ladoke street ogbomoso"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},Tb6w:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "NUBAN successfully created",\n  "data": {\n    "bank": {\n      "name": "Wema Bank",\n      "id": 20,\n      "slug": "wema-bank"\n    },\n    "account_name": "KAROKART / RHODA CHURCH",\n    "account_number": "9930000737",\n    "assigned": true,\n    "currency": "NGN",\n    "metadata": null,\n    "active": true,\n    "id": 253,\n    "created_at": "2019-12-12T12:39:04.000Z",\n    "updated_at": "2020-01-06T15:51:24.000Z",\n    "assignment": {\n      "integration": 100043,\n      "assignee_id": 7454289,\n      "assignee_type": "Customer",\n      "expired": false,\n      "account_type": "PAY-WITH-TRANSFER-RECURRING",\n      "assigned_at": "2020-01-06T15:51:24.764Z"\n    },\n    "customer": {\n      "id": 7454289,\n      "first_name": "RHODA",\n      "last_name": "CHURCH",\n      "email": "rhodachurch@email.com",\n      "customer_code": "CUS_kpb3qj71u1m0rw8",\n      "phone": "+2349053267565",\n      "risk_action": "default"\n    }\n  }\n}'},U5ZO:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name": "Buttercup Brunch", "amount": 500000\n      "description": "Gather your friends for the ritual that is brunch",\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Buttercup Brunch\",\n  \"description\": \"Gather your friends for the ritual that is brunch\",\n  \"amount\": 500000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/page";\n\n  $fields = [\n    \'name\' => "Buttercup Brunch",\n    \'description\' => "Gather your friends for the ritual that is brunch",\n    \'amount\' => 500000\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},URgU:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subscription retrieved successfully",\n  "data": {\n    "invoices": [],\n    "customer": {\n      "first_name": "BoJack",\n      "last_name": "Horseman",\n      "email": "bojack@horsinaround.com",\n      "phone": null,\n      "metadata": {\n        "photos": [\n          {\n            "type": "twitter",\n            "typeId": "twitter",\n            "typeName": "Twitter",\n            "url": "https://d2ojpxxtu63wzl.cloudfront.net/static/61b1a0a1d4dda2c9fe9e165fed07f812_a722ae7148870cc2e33465d1807dfdc6efca33ad2c4e1f8943a79eead3c21311",\n            "isPrimary": false\n          }\n        ]\n      },\n      "domain": "test",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "id": 1173,\n      "integration": 100032,\n      "createdAt": "2016-03-29T20:03:09.000Z",\n      "updatedAt": "2016-03-29T20:53:05.000Z"\n    },\n    "plan": {\n      "domain": "test",\n      "name": "Monthly retainer (renamed)",\n      "plan_code": "PLN_gx2wn530m0i3w3m",\n      "description": null,\n      "amount": 50000,\n      "interval": "monthly",\n      "send_invoices": true,\n      "send_sms": true,\n      "hosted_page": false,\n      "hosted_page_url": null,\n      "hosted_page_summary": null,\n      "currency": "NGN",\n      "id": 28,\n      "integration": 100032,\n      "createdAt": "2016-03-29T22:42:50.000Z",\n      "updatedAt": "2016-03-29T23:51:41.000Z"\n    },\n    "integration": 100032,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "domain": "test",\n    "start": 1459296064,\n    "status": "active",\n    "quantity": 1,\n    "amount": 50000,\n    "subscription_code": "SUB_vsyqdmlzble3uii",\n    "email_token": "d7gofp6yppn3qz7",\n    "easy_cron_id": null,\n    "cron_expression": "0 0 28 * *",\n    "next_payment_date": "2016-04-28T07:00:00.000Z",\n    "open_invoice": null,\n    "id": 9,\n    "createdAt": "2016-03-30T00:01:04.000Z",\n    "updatedAt": "2016-03-30T00:22:58.000Z"\n  }\n}'},UdgX:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split/:id/subaccount/add\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "subaccount": "ACCT_hdl8abxl8drhrl3", "share": 40000 }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"subaccount\": \"ACCT_hdl8abxl8drhrl3\", \n  \"share\": 40000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/split/:id/subaccount/add',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/split/:id/subaccount/add";\n\n  $fields = [\n    "subaccount" => "ACCT_hdl8abxl8drhrl3", \n    "share" => 40000\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},UgU6:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Export successful",\n  "data": {\n      "path": "https://s3.eu-west-1.amazonaws.com/files.paystack.co/exports/100043/disputes/161834548008.csv?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAIFGL5IZL2DJHOPPA%2F20210419%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20210419T115718Z&X-Amz-Expires=60&X-Amz-Signature=8fc02bdf7f12411a6505559b4c35b069a8a478295b98c0587907777ef5e31bda&X-Amz-SignedHeaders=host",\n      "expiresAt": "2021-04-19 11:58:18"\n  }\n}'},UohS:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_400",(function(){return d}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "ojk8k0bimgftf0x",\n    "status": "send_otp",\n    "display_text": "Please send OTP (none will be sent to your phone)"\n  }\n}',r='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin",\n    "display_text": "The PIN must be exactly 4 digits"\n  }\n}',o='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "bc9w93gh629a4d7",\n    "status": "failed",\n    "message": "Error occured while enrolling you for OTP!"\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "The phone number must have at least one character"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},VAFt:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_400",(function(){return d}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_otp",\n    "display_text": "Please send OTP"\n  }\n}',r='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin",\n    "display_text": "The PIN must be exactly 4 digits"\n  }\n}',o='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "bc9w93gh629a4d7",\n    "status": "failed",\n    "message": "Transaction declined. Please use the test card."\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "Please send phone"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": false,\n  "message": "Transaction reference is invalid"\n}'},VIy6:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Assigned Managed Account Successfully Created",\n  "data": {\n    "bank": {\n      "name": "Wema Bank",\n      "id": 20,\n      "slug": "wema-bank"\n    },\n    "account_name": "KAROKART/YINKA ADE",\n    "account_number": "6731105168",\n    "assigned": true,\n    "currency": "NGN",\n    "metadata": null,\n    "active": true,\n    "id": 97,\n    "created_at": "2019-11-13T13:52:39.000Z",\n    "updated_at": "2020-03-17T07:52:23.000Z",\n    "assignment": {\n      "integration": 100043,\n      "assignee_id": 17328,\n      "assignee_type": "Customer",\n      "expired": false,\n      "account_type": "PAY-WITH-TRANSFER-RECURRING",\n      "assigned_at": "2020-03-17T07:52:23.023Z",\n      "expired_at": null\n    },\n    "split_config": {"split_code":"SPL_e7jnRLtzla"},\n    "customer": {\n      "id": 17328,\n      "first_name": "YINKA",\n      "last_name": "ADE",\n      "email": "yinka@testemail.com",\n      "customer_code": "CUS_xxxxxxxx",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    }\n  }\n}'},VcNT:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/:id/resolve\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "resolution": "merchant-accepted", "message": "Merchant accepted", \n      "uploaded_filename": "qesp8a4df1xejihd9x5q", "refund_amount": 1002 }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"resolution\": \"merchant-accepted\",\n  \"message\": \"Merchant accepted\",\n  \"uploaded_filename\": \"qesp8a4df1xejihd9x5q\",\n  \"refund_amount\": 1002\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/:id/resolve',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/dispute/:id/resolve";\n\n  $fields = [\n    "resolution" => "merchant-accepted",\n    "message": "Merchant accepted",\n    "uploaded_filename": "qesp8a4df1xejihd9x5q",\n    "refund_amount" => 1002\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},VgB2:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return a}));var a='"meta": {\n  "total": 2,\n  "skipped": 0,\n  "perPage": 50,\n  "page": 1,\n  "pageCount": 1\n}'},"VxX+":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/decision/bin/539983\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/decision/bin/539983',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/decision/bin/539983",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},W8tB:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account/available_providers\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dedicated_account/available_providers',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dedicated_account/available_providers",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},WM3w:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient/bulk\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{\n      "batch": [\n      {\n        "type":"nuban",\n        "name" : "Habenero Mundane",\n        "account_number": "0123456789",\n        "bank_code": "033",\n        "currency": "NGN"\n      },\n      {\n        "type":"nuban",\n        "name" : "Soft Merry",\n        "account_number": "98765432310",\n        "bank_code": "50211",\n        "currency": "NGN"\n      }]\n}\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "batch": [\n  {\n    "type":"nuban",\n    "name" : "Habenero Mundane",\n    "account_number": "0123456789",\n    "bank_code": "033",\n    "currency": "NGN"\n  },\n  {\n    "type":"nuban",\n    "name" : "Soft Merry",\n    "account_number": "98765432310",\n    "bank_code": "50211",\n    "currency": "NGN"\n  }\n]\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/transferrecipient/bulk\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/transferrecipient/bulk";\n\n  $fields = [\n    "batch" => [{\n      "type" => "nuban",\n      "name" => "Habenero Mundane",\n      "account_number" => "0123456789",\n      "bank_code" => "033",\n      "currency" => "NGN"\n    },\n    {\n      "type" => "nuban",\n      "name" => "Soft Merry",\n      "account_number" => "98765432310",\n      "bank_code" => "50211",\n      "currency" => "NGN"\n    }]\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},X2nH:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer/deactivate_authorization\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "authorization_code": "AUTH_72btv547" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"authorization_code\": \"AUTH_72btv547\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/deactivate_authorization',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/customer/deactivate_authorization";\n\n  $fields = [\n    "authorization_code": "AUTH_72btv547"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},X7ac:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "States retrieved",\n  "data": [\n    {\n      "name": "Alberta",\n      "slug": "alberta",\n      "abbreviation": "AB"\n    },\n    {\n      "name": "British Columbia",\n      "slug": "british-columbia",\n      "abbreviation": "BC"\n    }\n  ]\n}'},XHCF:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/export\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/export,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dispute/export,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},XbEq:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_200_failed",(function(){return r})),n.d(t,"stat_400_invalid",(function(){return s}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 27000,\n    "currency": "NGN",\n    "transaction_date": "2020-05-27T11:45:03.000Z",\n    "status": "success",\n    "reference": "cn65lf4ixmkzvda",\n    "domain": "test",\n    "metadata": "",\n    "gateway_response": "Approved",\n    "message": null,\n    "channel": "card",\n    "ip_address": null,\n    "log": null,\n    "fees": 14500,\n    "authorization": {\n      "authorization_code": "AUTH_pmx3mgawyd",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_2Gvc6pNuzJmj4TCchXfp",\n      "account_name": null\n    },\n    "customer": {\n      "id": 23215815,\n      "first_name": null,\n      "last_name": null,\n      "email": "mail@mail.com",\n      "customer_code": "CUS_wt0zmhzb0xqd4nr",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null,\n    "id": 696105928\n  }\n}',r='{  \n  "status":true,\n  "message":"Charge Attempted",\n  "data":{  \n    "amount":27000,\n    "currency":"NGN",\n    "transaction_date":"2016-10-01T11:03:09.000Z",\n    "status":"failed",\n    "reference":"DG4uishudoq90LD",\n    "domain":"test",\n    "metadata":0,\n    "gateway_response":"Insufficient Funds",\n    "message":null,\n    "channel":"card",\n    "ip_address":"41.1.25.1",\n    "log":null,\n    "fees":null,\n    "authorization": {\n      "authorization_code": "AUTH_5z72ux0koz",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_ZdUx7Z5ujd75rt9OMTN4",\n      "account_name": "BoJack Horseman"\n    },\n    "customer":{  \n      "id":84312,\n      "customer_code":"CUS_hdhye17yj8qd2tx",\n      "first_name":"BoJack",\n      "last_name":"Horseman",\n      "email":"bojack@horseman.com"\n    },\n    "plan":"PLN_0as2m9n02cl0kp6"\n  }\n}',s='{  \n  "status": false,\n  "message": "Invalid key"\n}'},Xjol:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "description": "Update test invoice", "due_date": "2017-05-10" }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"description\": \"Update test invoice\", \n  \"due_date\": \"2017-05-10\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/:id_or_code',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/paymentrequest/:id_or_code";\n\n  $fields = [\n    "description" => "Update test invoice", \n    "due_date" => "2017-05-10"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"Xo++":function(e,t,n){var a=n("q1tI");function r(e){return a.createElement("svg",e,[a.createElement("path",{d:"M10.2908 4.24082L1.82075 18.3808C1.64612 18.6832 1.55372 19.0261 1.55274 19.3753C1.55176 19.7246 1.64224 20.0679 1.81518 20.3713C1.98812 20.6747 2.23748 20.9276 2.53846 21.1047C2.83944 21.2818 3.18155 21.377 3.53075 21.3808H20.4708C20.82 21.377 21.1621 21.2818 21.463 21.1047C21.764 20.9276 22.0134 20.6747 22.1863 20.3713C22.3593 20.0679 22.4497 19.7246 22.4488 19.3753C22.4478 19.0261 22.3554 18.6832 22.1808 18.3808L13.7108 4.24082C13.5325 3.94693 13.2815 3.70394 12.9819 3.5353C12.6824 3.36667 12.3445 3.27808 12.0008 3.27808C11.657 3.27808 11.3191 3.36667 11.0196 3.5353C10.72 3.70394 10.469 3.94693 10.2908 4.24082Z",fill:"#FFAA22",key:0}),a.createElement("path",{d:"M12 9.38086V13.3809",stroke:"white",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round",key:1}),a.createElement("path",{d:"M12 17.3809H12.0075",stroke:"white",strokeWidth:"1.5",strokeLinecap:"round",strokeLinejoin:"round",key:2})])}r.defaultProps={width:"24",height:"25",viewBox:"0 0 24 25",fill:"none"},e.exports=r,r.default=r},YLrW:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Dispute successfully resolved",\n  "data": {\n    "currency": "NGN",\n    "last4": null,\n    "bin": null,\n    "transaction_reference": null,\n    "merchant_transaction_reference": null,\n    "refund_amount": 1002,\n    "status": "resolved",\n    "domain": "test",\n    "resolution": "merchant-accepted",\n    "category": "general",\n    "note": null,\n    "attachments": "attachment",\n    "id": 624,\n    "transaction": {\n      "id": 5991760,\n      "domain": "test",\n      "status": "success",\n      "reference": "asjck8gf76zd1dr",\n      "amount": 39100,\n      "message": null,\n      "gateway_response": "Successful",\n      "paid_at": "2017-11-09T00:01:56.000Z",\n      "created_at": "2017-11-09T00:01:36.000Z",\n      "channel": "card",\n      "currency": "NGN",\n      "ip_address": null,\n      "metadata": "",\n      "log": null,\n      "fees": 587,\n      "fees_split": null,\n      "authorization": {},\n      "customer": {\n        "international_format_phone": null\n      },\n      "plan": {},\n      "subaccount": {},\n      "split": {},\n      "order_id": null,\n      "paidAt": "2017-11-09T00:01:56.000Z",\n      "createdAt": "2017-11-09T00:01:36.000Z",\n      "requested_amount": null\n    },\n    "created_by": 30,\n    "evidence": null,\n    "resolvedAt": "2019-08-28T15:23:31.000Z",\n    "createdAt": "2019-08-28T14:14:41.000Z",\n    "updatedAt": "2019-08-28T15:23:31.000Z",\n    "dueAt": null,\n    "message": {\n      "dispute": 624,\n      "sender": "demo@test.co",\n      "body": "Merchant accepted",\n      "id": 718,\n      "createdAt": "2019-08-28T15:23:31.418Z",\n      "updatedAt": "2019-08-28T15:23:31.418Z"\n    }\n  }\n}'},YqaQ:function(e){e.exports=JSON.parse('{"list":{"id":"dispute-list","title":"List Disputes","route":"/dispute","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"from","type":"Date","description":"A timestamp from which to start listing dispute e.g. <code>2016-09-21</code>","required":true},{"param":"to","type":"Date","description":"A timestamp at which to stop listing dispute e.g. <code>2016-09-21</code>","required":true},{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":false},{"param":"page","type":"Integer","description":"Specify exactly what dispute you want to page. If not specify we use a default value of 1.","required":false},{"param":"transaction","type":"String","description":"Transaction Id","required":false},{"param":"status","type":"String","description":"Dispute Status. Acceptable values: { awaiting-merchant-feedback | awaiting-bank-feedback | pending | resolved }","required":false}],"path":[]},"fetch":{"id":"dispute-fetch","title":"Fetch Dispute","route":"/dispute/:id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id","type":"String","description":"The dispute <code>ID</code> you want to fetch","required":true}]},"transaction":{"id":"dispute-transaction","title":"List Transaction Disputes","route":"/dispute/transaction/:id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id","type":"String","description":"The transaction <code>ID</code> you want to fetch","required":true}]},"update":{"id":"dispute-update","title":"Update Dispute","route":"/dispute/:id","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"refund_amount","type":"Integer","description":"the amount to refund, in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"uploaded_filename","type":"String","description":"filename of attachment returned via response from upload url(GET /dispute/:id/upload_url)","required":false}],"query":[],"path":[{"param":"id","type":"String","description":"Dispute ID","required":true}]},"evidence":{"id":"dispute-evidence","title":"Add Evidence","route":"/dispute/:id/evidence","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer_email","type":"String","description":"Customer email","required":true},{"param":"customer_name","type":"String","description":"Customer name","required":true},{"param":"customer_phone","type":"String","description":"Customer phone","required":true},{"param":"service_details","type":"String","description":"Details of service involved","required":true},{"param":"delivery_address","type":"String","description":"Delivery Address","required":false},{"param":"delivery_date","type":"Date","description":"ISO 8601 representation of delivery date (YYYY-MM-DD)","required":false}],"query":[],"path":[]},"upload-url":{"id":"dispute-upload-url","title":"Get Upload URL","route":"/dispute/:id/upload_url","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"upload_filename","type":"String","description":"The file name, with its extension, that you want to upload. e.g <code>filename.pdf</code>","required":true}],"path":[{"param":"id","type":"String","description":"Dispute Id","required":true}]},"resolve":{"id":"dispute-resolve","title":"Resolve a Dispute","route":"/dispute/:id/resolve","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"resolution","type":"String","description":"Dispute resolution. Accepted values: { merchant-accepted | declined }.","required":true},{"param":"message","type":"String","description":"Reason for resolving","required":true},{"param":"refund_amount","type":"Integer","description":"the amount to refund, in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"uploaded_filename","type":"String","description":"filename of attachment returned via response from upload url(GET /dispute/:id/upload_url)","required":true},{"param":"evidence","type":"Integer","description":"Evidence Id for fraud claims","required":false}],"query":[],"path":[{"param":"id","type":"String","description":"Dispute ID","required":true}]},"export":{"id":"dispute-export","title":"Export Disputes","route":"/dispute/export","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"from","type":"Date","description":"A timestamp from which to start listing dispute e.g. <code>2016-09-21</code>","required":true},{"param":"to","type":"Date","description":"A timestamp at which to stop listing dispute e.g. <code>2016-09-21</code>","required":true},{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":false},{"param":"page","type":"Integer","description":"Specify exactly what dispute you want to page. If not specify we use a default value of 1.","required":false},{"param":"transaction","type":"String","description":"Transaction Id","required":false},{"param":"status","type":"String","description":"Dispute Status. Acceptable values: { awaiting-merchant-feedback | awaiting-bank-feedback | pending | resolved }","required":false}],"path":[]}}')},Z8kK:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccounts retrieved",\n  "data": [\n    {\n      "integration": 129938,\n      "domain": "test",\n      "subaccount_code": "ACCT_cljt3j4cp0kb2gq",\n      "business_name": "Business 2",\n      "description": null,\n      "primary_contact_name": null,\n      "primary_contact_email": null,\n      "primary_contact_phone": null,\n      "metadata": null,\n      "percentage_charge": 20,\n      "is_verified": false,\n      "settlement_bank": "Zenith Bank",\n      "account_number": "0193274382",\n      "active": true,\n      "migrate": false,\n      "id": 53,\n      "createdAt": "2016-10-05T12:55:47.000Z",\n      "updatedAt": "2016-10-05T12:55:47.000Z"\n    },\n    {\n      "integration": 129938,\n      "domain": "test",\n      "subaccount_code": "ACCT_vwy3d1gck2c9gxi",\n      "business_name": "Sunshine Studios",\n      "description": null,\n      "primary_contact_name": null,\n      "primary_contact_email": null,\n      "primary_contact_phone": null,\n      "metadata": null,\n      "percentage_charge": 20,\n      "is_verified": false,\n      "settlement_bank": "Access Bank",\n      "account_number": "0128633833",\n      "active": true,\n      "migrate": false,\n      "id": 35,\n      "createdAt": "2016-10-04T09:06:00.000Z",\n      "updatedAt": "2016-10-04T09:06:00.000Z"\n    },\n    {\n      "integration": 129938,\n      "domain": "test",\n      "subaccount_code": "ACCT_5mikcokeaknxk1f",\n      "business_name": "Business 2",\n      "description": null,\n      "primary_contact_name": null,\n      "primary_contact_email": null,\n      "primary_contact_phone": null,\n      "percentage_charge": 20,\n      "is_verified": false,\n      "settlement_bank": "Access Bank",\n      "account_number": "0000000000",\n      "active": true,\n      "migrate": false,\n      "id": 34,\n      "createdAt": "2016-10-04T08:46:18.000Z",\n      "updatedAt": "2016-10-04T08:46:18.000Z"\n    }\n  ],\n  "meta": {\n    "total": 20,\n    "skipped": 0,\n    "perPage": "3",\n    "page": 1,\n    "pageCount": 7\n  }\n}'},ZAhx:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transaction totals",\n  "data": {\n    "total_transactions": 10,\n    "unique_customers": 3,\n    "total_volume": 14000,\n    "total_volume_by_currency": [\n      {\n        "currency": "NGN",\n        "amount": 14000\n      }\n    ],\n    "pending_transfers": 24000,\n    "pending_transfers_by_currency": [\n      {\n        "currency": "NGN",\n        "amount": 24000\n      }\n    ]\n  }\n}'},ZINq:function(e,t,n){var a={"./api-snippets/bulk-charges/fetch-batch/requests":"SWIC","./api-snippets/bulk-charges/fetch-batch/requests.js":"SWIC","./api-snippets/bulk-charges/fetch-batch/response":"nygo","./api-snippets/bulk-charges/fetch-batch/response.js":"nygo","./api-snippets/bulk-charges/fetch-charge/requests":"u/L6","./api-snippets/bulk-charges/fetch-charge/requests.js":"u/L6","./api-snippets/bulk-charges/fetch-charge/response":"4F5i","./api-snippets/bulk-charges/fetch-charge/response.js":"4F5i","./api-snippets/bulk-charges/initiate/requests":"EBCz","./api-snippets/bulk-charges/initiate/requests.js":"EBCz","./api-snippets/bulk-charges/initiate/response":"Zpn4","./api-snippets/bulk-charges/initiate/response.js":"Zpn4","./api-snippets/bulk-charges/list/requests":"xTgc","./api-snippets/bulk-charges/list/requests.js":"xTgc","./api-snippets/bulk-charges/list/response":"PBde","./api-snippets/bulk-charges/list/response.js":"PBde","./api-snippets/bulk-charges/pause/requests":"OmPK","./api-snippets/bulk-charges/pause/requests.js":"OmPK","./api-snippets/bulk-charges/pause/response":"7hFO","./api-snippets/bulk-charges/pause/response.js":"7hFO","./api-snippets/bulk-charges/resume/requests":"Frmw","./api-snippets/bulk-charges/resume/requests.js":"Frmw","./api-snippets/bulk-charges/resume/response":"cC25","./api-snippets/bulk-charges/resume/response.js":"cC25","./api-snippets/charges/check/requests":"eolb","./api-snippets/charges/check/requests.js":"eolb","./api-snippets/charges/check/response":"CfCy","./api-snippets/charges/check/response.js":"CfCy","./api-snippets/charges/create/requests":"DuZw","./api-snippets/charges/create/requests.js":"DuZw","./api-snippets/charges/create/response":"qofJ","./api-snippets/charges/create/response.js":"qofJ","./api-snippets/charges/submit-address/requests":"c6VF","./api-snippets/charges/submit-address/requests.js":"c6VF","./api-snippets/charges/submit-address/response":"3V6g","./api-snippets/charges/submit-address/response.js":"3V6g","./api-snippets/charges/submit-birthday/requests":"oVg5","./api-snippets/charges/submit-birthday/requests.js":"oVg5","./api-snippets/charges/submit-birthday/response":"UohS","./api-snippets/charges/submit-birthday/response.js":"UohS","./api-snippets/charges/submit-otp/requests":"I6P/","./api-snippets/charges/submit-otp/requests.js":"I6P/","./api-snippets/charges/submit-otp/response":"5CLg","./api-snippets/charges/submit-otp/response.js":"5CLg","./api-snippets/charges/submit-phone/requests":"/nPT","./api-snippets/charges/submit-phone/requests.js":"/nPT","./api-snippets/charges/submit-phone/response":"L91f","./api-snippets/charges/submit-phone/response.js":"L91f","./api-snippets/charges/submit-pin/requests":"E2fG","./api-snippets/charges/submit-pin/requests.js":"E2fG","./api-snippets/charges/submit-pin/response":"VAFt","./api-snippets/charges/submit-pin/response.js":"VAFt","./api-snippets/control-panel/fetch-timeout/requests":"Ilq0","./api-snippets/control-panel/fetch-timeout/requests.js":"Ilq0","./api-snippets/control-panel/fetch-timeout/response":"EhpR","./api-snippets/control-panel/fetch-timeout/response.js":"EhpR","./api-snippets/control-panel/update-timeout/requests":"00mh","./api-snippets/control-panel/update-timeout/requests.js":"00mh","./api-snippets/control-panel/update-timeout/response":"asxJ","./api-snippets/control-panel/update-timeout/response.js":"asxJ","./api-snippets/customers/create/requests":"zaJs","./api-snippets/customers/create/requests.js":"zaJs","./api-snippets/customers/create/response":"O8sa","./api-snippets/customers/create/response.js":"O8sa","./api-snippets/customers/deactivate_authorization/requests":"X2nH","./api-snippets/customers/deactivate_authorization/requests.js":"X2nH","./api-snippets/customers/deactivate_authorization/response":"jcg5","./api-snippets/customers/deactivate_authorization/response.js":"jcg5","./api-snippets/customers/fetch/requests":"kn/q","./api-snippets/customers/fetch/requests.js":"kn/q","./api-snippets/customers/fetch/response":"ywUy","./api-snippets/customers/fetch/response.js":"ywUy","./api-snippets/customers/id_validation/requests":"ZJS/","./api-snippets/customers/id_validation/requests.js":"ZJS/","./api-snippets/customers/id_validation/response":"k2AB","./api-snippets/customers/id_validation/response.js":"k2AB","./api-snippets/customers/list/requests":"KAE5","./api-snippets/customers/list/requests.js":"KAE5","./api-snippets/customers/list/response":"eFmc","./api-snippets/customers/list/response.js":"eFmc","./api-snippets/customers/update/requests":"vQVd","./api-snippets/customers/update/requests.js":"vQVd","./api-snippets/customers/update/response":"ii9E","./api-snippets/customers/update/response.js":"ii9E","./api-snippets/customers/whitelist_blacklist/requests":"aUDE","./api-snippets/customers/whitelist_blacklist/requests.js":"aUDE","./api-snippets/customers/whitelist_blacklist/response":"PVtg","./api-snippets/customers/whitelist_blacklist/response.js":"PVtg","./api-snippets/dedicated-nuban/add-split/requests":"TBuq","./api-snippets/dedicated-nuban/add-split/requests.js":"TBuq","./api-snippets/dedicated-nuban/add-split/response":"VIy6","./api-snippets/dedicated-nuban/add-split/response.js":"VIy6","./api-snippets/dedicated-nuban/create/requests":"haSG","./api-snippets/dedicated-nuban/create/requests.js":"haSG","./api-snippets/dedicated-nuban/create/response":"Tb6w","./api-snippets/dedicated-nuban/create/response.js":"Tb6w","./api-snippets/dedicated-nuban/deactivate/requests":"tUV0","./api-snippets/dedicated-nuban/deactivate/requests.js":"tUV0","./api-snippets/dedicated-nuban/deactivate/response":"fEwz","./api-snippets/dedicated-nuban/deactivate/response.js":"fEwz","./api-snippets/dedicated-nuban/fetch/requests":"4Uio","./api-snippets/dedicated-nuban/fetch/requests.js":"4Uio","./api-snippets/dedicated-nuban/fetch/response":"6Qjk","./api-snippets/dedicated-nuban/fetch/response.js":"6Qjk","./api-snippets/dedicated-nuban/list/requests":"Fdtq","./api-snippets/dedicated-nuban/list/requests.js":"Fdtq","./api-snippets/dedicated-nuban/list/response":"g0NR","./api-snippets/dedicated-nuban/list/response.js":"g0NR","./api-snippets/dedicated-nuban/providers/request":"W8tB","./api-snippets/dedicated-nuban/providers/request.js":"W8tB","./api-snippets/dedicated-nuban/providers/response":"K/KC","./api-snippets/dedicated-nuban/providers/response.js":"K/KC","./api-snippets/dedicated-nuban/remove-split/requests":"HEVo","./api-snippets/dedicated-nuban/remove-split/requests.js":"HEVo","./api-snippets/dedicated-nuban/remove-split/response":"h8Q4","./api-snippets/dedicated-nuban/remove-split/response.js":"h8Q4","./api-snippets/disputes/evidence/requests":"TasI","./api-snippets/disputes/evidence/requests.js":"TasI","./api-snippets/disputes/evidence/response":"qIBN","./api-snippets/disputes/evidence/response.js":"qIBN","./api-snippets/disputes/export/requests":"XHCF","./api-snippets/disputes/export/requests.js":"XHCF","./api-snippets/disputes/export/response":"UgU6","./api-snippets/disputes/export/response.js":"UgU6","./api-snippets/disputes/fetch/requests":"8rXz","./api-snippets/disputes/fetch/requests.js":"8rXz","./api-snippets/disputes/fetch/response":"bOBQ","./api-snippets/disputes/fetch/response.js":"bOBQ","./api-snippets/disputes/list/requests":"wZJq","./api-snippets/disputes/list/requests.js":"wZJq","./api-snippets/disputes/list/response":"chUl","./api-snippets/disputes/list/response.js":"chUl","./api-snippets/disputes/resolve/requests":"VcNT","./api-snippets/disputes/resolve/requests.js":"VcNT","./api-snippets/disputes/resolve/response":"YLrW","./api-snippets/disputes/resolve/response.js":"YLrW","./api-snippets/disputes/transaction/requests":"h0D8","./api-snippets/disputes/transaction/requests.js":"h0D8","./api-snippets/disputes/transaction/response":"fDpv","./api-snippets/disputes/transaction/response.js":"fDpv","./api-snippets/disputes/update/requests":"3UeP","./api-snippets/disputes/update/requests.js":"3UeP","./api-snippets/disputes/update/response":"J4Ga","./api-snippets/disputes/update/response.js":"J4Ga","./api-snippets/disputes/upload-url/requests":"KGpS","./api-snippets/disputes/upload-url/requests.js":"KGpS","./api-snippets/disputes/upload-url/response":"iAO3","./api-snippets/disputes/upload-url/response.js":"iAO3","./api-snippets/introduction/meta-format":"VgB2","./api-snippets/introduction/meta-format.js":"VgB2","./api-snippets/introduction/response-format":"mSAH","./api-snippets/introduction/response-format.js":"mSAH","./api-snippets/invoices/archive/requests":"P9go","./api-snippets/invoices/archive/requests.js":"P9go","./api-snippets/invoices/archive/response":"k2fg","./api-snippets/invoices/archive/response.js":"k2fg","./api-snippets/invoices/create/requests":"cuZb","./api-snippets/invoices/create/requests.js":"cuZb","./api-snippets/invoices/create/response":"ATAW","./api-snippets/invoices/create/response.js":"ATAW","./api-snippets/invoices/fetch/requests":"1jh5","./api-snippets/invoices/fetch/requests.js":"1jh5","./api-snippets/invoices/fetch/response":"Zk0o","./api-snippets/invoices/fetch/response.js":"Zk0o","./api-snippets/invoices/finalize/requests":"pv0b","./api-snippets/invoices/finalize/requests.js":"pv0b","./api-snippets/invoices/finalize/response":"fYgV","./api-snippets/invoices/finalize/response.js":"fYgV","./api-snippets/invoices/list/requests":"EeQk","./api-snippets/invoices/list/requests.js":"EeQk","./api-snippets/invoices/list/response":"BFR0","./api-snippets/invoices/list/response.js":"BFR0","./api-snippets/invoices/send_notification/requests":"bSzG","./api-snippets/invoices/send_notification/requests.js":"bSzG","./api-snippets/invoices/send_notification/response":"93xa","./api-snippets/invoices/send_notification/response.js":"93xa","./api-snippets/invoices/total/requests":"LFJs","./api-snippets/invoices/total/requests.js":"LFJs","./api-snippets/invoices/total/response":"FG1S","./api-snippets/invoices/total/response.js":"FG1S","./api-snippets/invoices/update/requests":"Xjol","./api-snippets/invoices/update/requests.js":"Xjol","./api-snippets/invoices/update/response":"lWae","./api-snippets/invoices/update/response.js":"lWae","./api-snippets/invoices/verify/requests":"1+Mt","./api-snippets/invoices/verify/requests.js":"1+Mt","./api-snippets/invoices/verify/response":"vVa9","./api-snippets/invoices/verify/response.js":"vVa9","./api-snippets/miscellaneous/avs-states/requests":"ZWo8","./api-snippets/miscellaneous/avs-states/requests.js":"ZWo8","./api-snippets/miscellaneous/avs-states/response":"X7ac","./api-snippets/miscellaneous/avs-states/response.js":"X7ac","./api-snippets/miscellaneous/bank/requests":"m4Hx","./api-snippets/miscellaneous/bank/requests.js":"m4Hx","./api-snippets/miscellaneous/bank/response":"Dohc","./api-snippets/miscellaneous/bank/response.js":"Dohc","./api-snippets/miscellaneous/country/requests":"8wCQ","./api-snippets/miscellaneous/country/requests.js":"8wCQ","./api-snippets/miscellaneous/country/response":"ewoO","./api-snippets/miscellaneous/country/response.js":"ewoO","./api-snippets/miscellaneous/providers/requests":"7mkF","./api-snippets/miscellaneous/providers/requests.js":"7mkF","./api-snippets/miscellaneous/providers/response":"D5hu","./api-snippets/miscellaneous/providers/response.js":"D5hu","./api-snippets/payment-pages/add-product/requests":"Er9V","./api-snippets/payment-pages/add-product/requests.js":"Er9V","./api-snippets/payment-pages/add-product/response":"2MXo","./api-snippets/payment-pages/add-product/response.js":"2MXo","./api-snippets/payment-pages/check-slug/requests":"hSCL","./api-snippets/payment-pages/check-slug/requests.js":"hSCL","./api-snippets/payment-pages/check-slug/response":"fILZ","./api-snippets/payment-pages/check-slug/response.js":"fILZ","./api-snippets/payment-pages/create/requests":"U5ZO","./api-snippets/payment-pages/create/requests.js":"U5ZO","./api-snippets/payment-pages/create/response":"D3Mv","./api-snippets/payment-pages/create/response.js":"D3Mv","./api-snippets/payment-pages/fetch/requests":"ieMM","./api-snippets/payment-pages/fetch/requests.js":"ieMM","./api-snippets/payment-pages/fetch/response":"H+bb","./api-snippets/payment-pages/fetch/response.js":"H+bb","./api-snippets/payment-pages/list/requests":"cEg4","./api-snippets/payment-pages/list/requests.js":"cEg4","./api-snippets/payment-pages/list/response":"3jXp","./api-snippets/payment-pages/list/response.js":"3jXp","./api-snippets/payment-pages/update/requests":"l48b","./api-snippets/payment-pages/update/requests.js":"l48b","./api-snippets/payment-pages/update/response":"vM9H","./api-snippets/payment-pages/update/response.js":"vM9H","./api-snippets/plans/create/requests":"te2E","./api-snippets/plans/create/requests.js":"te2E","./api-snippets/plans/create/response":"pNO7","./api-snippets/plans/create/response.js":"pNO7","./api-snippets/plans/fetch/requests":"FXO4","./api-snippets/plans/fetch/requests.js":"FXO4","./api-snippets/plans/fetch/response":"4VEA","./api-snippets/plans/fetch/response.js":"4VEA","./api-snippets/plans/list/requests":"K8Ph","./api-snippets/plans/list/requests.js":"K8Ph","./api-snippets/plans/list/response":"gJrL","./api-snippets/plans/list/response.js":"gJrL","./api-snippets/plans/update/requests":"A13I","./api-snippets/plans/update/requests.js":"A13I","./api-snippets/plans/update/response":"RfB0","./api-snippets/plans/update/response.js":"RfB0","./api-snippets/products/create/requests":"8CaD","./api-snippets/products/create/requests.js":"8CaD","./api-snippets/products/create/response":"Zajl","./api-snippets/products/create/response.js":"Zajl","./api-snippets/products/fetch/requests":"M9A4","./api-snippets/products/fetch/requests.js":"M9A4","./api-snippets/products/fetch/response":"/HFO","./api-snippets/products/fetch/response.js":"/HFO","./api-snippets/products/list/requests":"87F3","./api-snippets/products/list/requests.js":"87F3","./api-snippets/products/list/response":"H2TS","./api-snippets/products/list/response.js":"H2TS","./api-snippets/products/update/requests":"lfNR","./api-snippets/products/update/requests.js":"lfNR","./api-snippets/products/update/response":"dsll","./api-snippets/products/update/response.js":"dsll","./api-snippets/refunds/create/requests":"tqvS","./api-snippets/refunds/create/requests.js":"tqvS","./api-snippets/refunds/create/response":"yJtx","./api-snippets/refunds/create/response.js":"yJtx","./api-snippets/refunds/fetch/requests":"KwFT","./api-snippets/refunds/fetch/requests.js":"KwFT","./api-snippets/refunds/fetch/response":"7DKR","./api-snippets/refunds/fetch/response.js":"7DKR","./api-snippets/refunds/list/requests":"cZEq","./api-snippets/refunds/list/requests.js":"cZEq","./api-snippets/refunds/list/response":"Pg6r","./api-snippets/refunds/list/response.js":"Pg6r","./api-snippets/settlements/fetch-transactions/requests":"OyLD","./api-snippets/settlements/fetch-transactions/requests.js":"OyLD","./api-snippets/settlements/fetch-transactions/response":"3plp","./api-snippets/settlements/fetch-transactions/response.js":"3plp","./api-snippets/settlements/fetch/requests":"nWCd","./api-snippets/settlements/fetch/requests.js":"nWCd","./api-snippets/settlements/fetch/response":"onRE","./api-snippets/settlements/fetch/response.js":"onRE","./api-snippets/subaccounts/create/requests":"GnGZ","./api-snippets/subaccounts/create/requests.js":"GnGZ","./api-snippets/subaccounts/create/response":"jC1y","./api-snippets/subaccounts/create/response.js":"jC1y","./api-snippets/subaccounts/fetch/requests":"ZM1j","./api-snippets/subaccounts/fetch/requests.js":"ZM1j","./api-snippets/subaccounts/fetch/response":"xggl","./api-snippets/subaccounts/fetch/response.js":"xggl","./api-snippets/subaccounts/list/requests":"1TTo","./api-snippets/subaccounts/list/requests.js":"1TTo","./api-snippets/subaccounts/list/response":"Z8kK","./api-snippets/subaccounts/list/response.js":"Z8kK","./api-snippets/subaccounts/update/requests":"AFIf","./api-snippets/subaccounts/update/requests.js":"AFIf","./api-snippets/subaccounts/update/response":"Ck1t","./api-snippets/subaccounts/update/response.js":"Ck1t","./api-snippets/subscriptions/create/requests":"h/mE","./api-snippets/subscriptions/create/requests.js":"h/mE","./api-snippets/subscriptions/create/response":"DPLZ","./api-snippets/subscriptions/create/response.js":"DPLZ","./api-snippets/subscriptions/disable/requests":"Dg4L","./api-snippets/subscriptions/disable/requests.js":"Dg4L","./api-snippets/subscriptions/disable/response":"JdmE","./api-snippets/subscriptions/disable/response.js":"JdmE","./api-snippets/subscriptions/enable/requests":"QiBX","./api-snippets/subscriptions/enable/requests.js":"QiBX","./api-snippets/subscriptions/enable/response":"T3o/","./api-snippets/subscriptions/enable/response.js":"T3o/","./api-snippets/subscriptions/fetch/requests":"NYRD","./api-snippets/subscriptions/fetch/requests.js":"NYRD","./api-snippets/subscriptions/fetch/response":"URgU","./api-snippets/subscriptions/fetch/response.js":"URgU","./api-snippets/subscriptions/list/requests":"F68s","./api-snippets/subscriptions/list/requests.js":"F68s","./api-snippets/subscriptions/list/response":"s5u1","./api-snippets/subscriptions/list/response.js":"s5u1","./api-snippets/transaction-splits/add-account/requests":"UdgX","./api-snippets/transaction-splits/add-account/requests.js":"UdgX","./api-snippets/transaction-splits/add-account/response":"qwGz","./api-snippets/transaction-splits/add-account/response.js":"qwGz","./api-snippets/transaction-splits/create/requests":"BfI2","./api-snippets/transaction-splits/create/requests.js":"BfI2","./api-snippets/transaction-splits/create/response":"s5iQ","./api-snippets/transaction-splits/create/response.js":"s5iQ","./api-snippets/transaction-splits/fetch/requests":"GKKm","./api-snippets/transaction-splits/fetch/requests.js":"GKKm","./api-snippets/transaction-splits/fetch/response":"LJFq","./api-snippets/transaction-splits/fetch/response.js":"LJFq","./api-snippets/transaction-splits/list/requests":"4GUd","./api-snippets/transaction-splits/list/requests.js":"4GUd","./api-snippets/transaction-splits/list/response":"/aSM","./api-snippets/transaction-splits/list/response.js":"/aSM","./api-snippets/transaction-splits/remove-account/requests":"uOuR","./api-snippets/transaction-splits/remove-account/requests.js":"uOuR","./api-snippets/transaction-splits/remove-account/response":"Q74/","./api-snippets/transaction-splits/remove-account/response.js":"Q74/","./api-snippets/transaction-splits/update/requests":"O5B8","./api-snippets/transaction-splits/update/requests.js":"O5B8","./api-snippets/transaction-splits/update/response":"CNV9","./api-snippets/transaction-splits/update/response.js":"CNV9","./api-snippets/transactions/charge_authorization/requests":"3s0q","./api-snippets/transactions/charge_authorization/requests.js":"3s0q","./api-snippets/transactions/charge_authorization/response":"XbEq","./api-snippets/transactions/charge_authorization/response.js":"XbEq","./api-snippets/transactions/check_authorization/requests":"CDHm","./api-snippets/transactions/check_authorization/requests.js":"CDHm","./api-snippets/transactions/check_authorization/response":"zcxC","./api-snippets/transactions/check_authorization/response.js":"zcxC","./api-snippets/transactions/export/requests":"IS+m","./api-snippets/transactions/export/requests.js":"IS+m","./api-snippets/transactions/export/response":"2y3F","./api-snippets/transactions/export/response.js":"2y3F","./api-snippets/transactions/fetch/requests":"NulJ","./api-snippets/transactions/fetch/requests.js":"NulJ","./api-snippets/transactions/fetch/response":"961U","./api-snippets/transactions/fetch/response.js":"961U","./api-snippets/transactions/initialize/requests":"g8XE","./api-snippets/transactions/initialize/requests.js":"g8XE","./api-snippets/transactions/initialize/response":"QQyW","./api-snippets/transactions/initialize/response.js":"QQyW","./api-snippets/transactions/list/requests":"rMen","./api-snippets/transactions/list/requests.js":"rMen","./api-snippets/transactions/list/response":"iZwC","./api-snippets/transactions/list/response.js":"iZwC","./api-snippets/transactions/partial_debit/requests":"jYxI","./api-snippets/transactions/partial_debit/requests.js":"jYxI","./api-snippets/transactions/partial_debit/response":"zwvs","./api-snippets/transactions/partial_debit/response.js":"zwvs","./api-snippets/transactions/totals/requests":"njS0","./api-snippets/transactions/totals/requests.js":"njS0","./api-snippets/transactions/totals/response":"ZAhx","./api-snippets/transactions/totals/response.js":"ZAhx","./api-snippets/transactions/verify/requests":"B/AY","./api-snippets/transactions/verify/requests.js":"B/AY","./api-snippets/transactions/verify/response":"JyXb","./api-snippets/transactions/verify/response.js":"JyXb","./api-snippets/transactions/view_timeline/requests":"2krq","./api-snippets/transactions/view_timeline/requests.js":"2krq","./api-snippets/transactions/view_timeline/response":"ft5A","./api-snippets/transactions/view_timeline/response.js":"ft5A","./api-snippets/transfer-recipient/bulk/requests":"WM3w","./api-snippets/transfer-recipient/bulk/requests.js":"WM3w","./api-snippets/transfer-recipient/bulk/response":"6GbB","./api-snippets/transfer-recipient/bulk/response.js":"6GbB","./api-snippets/transfer-recipient/create/requests":"r3hh","./api-snippets/transfer-recipient/create/requests.js":"r3hh","./api-snippets/transfer-recipient/create/response":"1+jd","./api-snippets/transfer-recipient/create/response.js":"1+jd","./api-snippets/transfer-recipient/delete/requests":"1+n/","./api-snippets/transfer-recipient/delete/requests.js":"1+n/","./api-snippets/transfer-recipient/delete/response":"v29Y","./api-snippets/transfer-recipient/delete/response.js":"v29Y","./api-snippets/transfer-recipient/fetch/requests":"PSFq","./api-snippets/transfer-recipient/fetch/requests.js":"PSFq","./api-snippets/transfer-recipient/fetch/response":"67mB","./api-snippets/transfer-recipient/fetch/response.js":"67mB","./api-snippets/transfer-recipient/list/requests":"JgjR","./api-snippets/transfer-recipient/list/requests.js":"JgjR","./api-snippets/transfer-recipient/list/response":"9yWY","./api-snippets/transfer-recipient/list/response.js":"9yWY","./api-snippets/transfer-recipient/update/requests":"u4V8","./api-snippets/transfer-recipient/update/requests.js":"u4V8","./api-snippets/transfer-recipient/update/response":"hUGB","./api-snippets/transfer-recipient/update/response.js":"hUGB","./api-snippets/transfers-control/balance-ledger/requests":"HPAf","./api-snippets/transfers-control/balance-ledger/requests.js":"HPAf","./api-snippets/transfers-control/balance-ledger/response":"e6eS","./api-snippets/transfers-control/balance-ledger/response.js":"e6eS","./api-snippets/transfers-control/balance/requests":"O3nu","./api-snippets/transfers-control/balance/requests.js":"O3nu","./api-snippets/transfers-control/balance/response":"T8+/","./api-snippets/transfers-control/balance/response.js":"T8+/","./api-snippets/transfers-control/disable-otp/requests":"9RgO","./api-snippets/transfers-control/disable-otp/requests.js":"9RgO","./api-snippets/transfers-control/disable-otp/response":"slfs","./api-snippets/transfers-control/disable-otp/response.js":"slfs","./api-snippets/transfers-control/enable-otp/requests":"zkoo","./api-snippets/transfers-control/enable-otp/requests.js":"zkoo","./api-snippets/transfers-control/enable-otp/response":"ylwN","./api-snippets/transfers-control/enable-otp/response.js":"ylwN","./api-snippets/transfers-control/finalize-disable-otp/requests":"SOke","./api-snippets/transfers-control/finalize-disable-otp/requests.js":"SOke","./api-snippets/transfers-control/finalize-disable-otp/response":"jJEH","./api-snippets/transfers-control/finalize-disable-otp/response.js":"jJEH","./api-snippets/transfers-control/resend-otp/requests":"6YxL","./api-snippets/transfers-control/resend-otp/requests.js":"6YxL","./api-snippets/transfers-control/resend-otp/response":"QtWY","./api-snippets/transfers-control/resend-otp/response.js":"QtWY","./api-snippets/transfers/bulk/requests":"ZrTi","./api-snippets/transfers/bulk/requests.js":"ZrTi","./api-snippets/transfers/bulk/response":"p7PI","./api-snippets/transfers/bulk/response.js":"p7PI","./api-snippets/transfers/fetch/requests":"GGt2","./api-snippets/transfers/fetch/requests.js":"GGt2","./api-snippets/transfers/fetch/response":"8u0L","./api-snippets/transfers/fetch/response.js":"8u0L","./api-snippets/transfers/finalize/requests":"2cC8","./api-snippets/transfers/finalize/requests.js":"2cC8","./api-snippets/transfers/finalize/response":"06EG","./api-snippets/transfers/finalize/response.js":"06EG","./api-snippets/transfers/initiate/requests":"SROB","./api-snippets/transfers/initiate/requests.js":"SROB","./api-snippets/transfers/initiate/response":"z1db","./api-snippets/transfers/initiate/response.js":"z1db","./api-snippets/transfers/list/requests":"cbeM","./api-snippets/transfers/list/requests.js":"cbeM","./api-snippets/transfers/list/response":"ok49","./api-snippets/transfers/list/response.js":"ok49","./api-snippets/transfers/verify/requests":"++Lo","./api-snippets/transfers/verify/requests.js":"++Lo","./api-snippets/transfers/verify/response":"NZwA","./api-snippets/transfers/verify/response.js":"NZwA","./api-snippets/verification/match-bvn/requests":"hDdT","./api-snippets/verification/match-bvn/requests.js":"hDdT","./api-snippets/verification/match-bvn/response":"zdca","./api-snippets/verification/match-bvn/response.js":"zdca","./api-snippets/verification/resolve-account/requests":"0KS8","./api-snippets/verification/resolve-account/requests.js":"0KS8","./api-snippets/verification/resolve-account/response":"22f2","./api-snippets/verification/resolve-account/response.js":"22f2","./api-snippets/verification/resolve-bvn-premium/requests":"OB1P","./api-snippets/verification/resolve-bvn-premium/requests.js":"OB1P","./api-snippets/verification/resolve-bvn-premium/responses":"6sy7","./api-snippets/verification/resolve-bvn-premium/responses.js":"6sy7","./api-snippets/verification/resolve-bvn/requests":"aROD","./api-snippets/verification/resolve-bvn/requests.js":"aROD","./api-snippets/verification/resolve-bvn/response":"xZLy","./api-snippets/verification/resolve-bvn/response.js":"xZLy","./api-snippets/verification/resolve-card/requests":"VxX+","./api-snippets/verification/resolve-card/requests.js":"VxX+","./api-snippets/verification/resolve-card/response":"jwPA","./api-snippets/verification/resolve-card/response.js":"jwPA"};function r(e){var t=s(e);return n(t)}function s(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}r.keys=function(){return Object.keys(a)},r.resolve=s,e.exports=r,r.id="ZINq"},"ZJS/":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer/{customer_code}/identification\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{\n      "country": "NG",\n      "type": "bvn",\n      "value": "200123456677",\n      "first_name": "Asta",\n      "last_name": "Lavista"\n}\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n\t\"country\": \"NG\",\n  \"type\": \"bvn\",\n  \"value\": \"200123456677\",\n  \"first_name\": \"Asta\",\n  \"last_name\": \"Lavista\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/{customer_code}/identification',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/customer/{customer_code}/identification";\n\n  $fields = [\n    "country": "NG",\n    "type": "bvn",\n    "value": "200123456677",\n    "first_name": "Asta",\n    "last_name": "Lavista"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},ZM1j:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subaccount/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subaccount/:id_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/subaccount/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},ZWo8:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/address_verification/states?country=CA\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/address_verification/states?country=CA,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/address_verification/states?country=CA",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},Zajl:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r})),n.d(t,"stat_401",(function(){return s}));var a='{\n  "status": true,\n  "message": "Product successfully created",\n  "data": {\n    "name": "Product One",\n    "description": "Product One Description",\n    "currency": "NGN",\n    "price": 500000,\n    "unlimited": true,\n    "domain": "test",\n    "integration": 343288,\n    "product_code": "PROD_f58aly7bvn32uiz",\n    "quantity": 0,\n    "type": "good",\n    "is_shippable": false,\n    "active": true,\n    "in_stock": true,\n    "id": 524,\n    "createdAt": "2019-06-29T14:10:29.742Z",\n    "updatedAt": "2019-06-29T14:10:29.742Z"\n  }\n}',r='{\n  "status": false,\n  "message": "Product with same name already exists"\n}',s='{\n  "status": false,\n  "message": "Invalid Key"\n}'},Zk0o:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request retrieved",\n  "data": {\n    "transactions": [],\n    "domain": "test",\n    "request_code": "PRQ_1weqqsn2wwzgft8",\n    "description": "a test invoice",\n    "line_items": [\n      {\n        "name": "item 1",\n        "amount": 20000\n      },\n      {\n        "name": "item 2",\n        "amount": 20000\n      }\n    ],\n    "tax": [\n      {\n        "name": "VAT",\n        "amount": 2000\n      }\n    ],\n    "amount": 42000,\n    "discount": null,\n    "currency": "NGN",\n    "due_date": "2020-07-08T00:00:00.000Z",\n    "status": "pending",\n    "paid": false,\n    "paid_at": null,\n    "metadata": null,\n    "has_invoice": true,\n    "invoice_number": 1,\n    "offline_reference": "4286263136406",\n    "pdf_url": null,\n    "notifications": [],\n    "archived": false,\n    "source": "user",\n    "payment_method": null,\n    "note": null,\n    "amount_paid": null,\n    "id": 3136406,\n    "integration": 428626,\n    "customer": {\n      "transactions": [],\n      "subscriptions": [],\n      "authorizations": [],\n      "first_name": "Damilola",\n      "last_name": "Odujoko",\n      "email": "damilola@example.com",\n      "phone": null,\n      "metadata": {\n        "calling_code": "+234"\n      },\n      "domain": "test",\n      "customer_code": "CUS_xwaj0txjryg393b",\n      "risk_action": "default",\n      "id": 25833615,\n      "integration": 428626,\n      "createdAt": "2020-06-29T16:06:53.000Z",\n      "updatedAt": "2020-06-29T16:06:53.000Z"\n    },\n    "createdAt": "2020-06-29T16:07:33.000Z",\n    "updatedAt": "2020-06-29T16:07:33.000Z",\n    "pending_amount": 42000\n  }\n}'},Zpn4:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Charges have been queued",\n  "data": {\n    "domain": "test",\n    "batch_code": "BCH_180tl7oq7cayggh",\n    "status": "active",\n    "id": 17,\n    "integration": 100073,\n    "createdAt": "2017-02-04T05:44:19.000Z",\n    "updatedAt": "2017-02-04T05:44:19.000Z"\n  }\n}'},ZrTi:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/bulk\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "currency": "NGN",\n      "source": "balance",\n      "transfers": [{\n        "amount": 50000,\n        "recipient": "RCP_db342dvqvz9qcrn", \n        "reference": "ref_943899312"\n      },\n      {\n        "amount": 50000,\n        "recipient": "RCP_db342dvqvz9qcrn",\n        "reference": "ref_943889313"\n      }]\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "currency": "NGN",\n\t"source": "balance",\n\t"transfers": [{\n    "amount": 50000,\n    "recipient": "RCP_db342dvqvz9qcrn", \n    "reference": "ref_943899312"\n\t},\n\t{\n    "amount": 50000,\n    "recipient": "RCP_db342dvqvz9qcrn",\n    "reference": "ref_943889313"\n\t}]\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/transfer/bulk\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/transfer/bulk";\n\n  $fields = [\n    "currency" => "NGN",\n    "source" => "balance",\n    "transfers" => [{\n      "amount" => 50000,\n      "recipient" => "RCP_db342dvqvz9qcrn", \n      "reference" => "ref_943899312"\n    },\n    {\n      "amount" => 50000,\n      "recipient" => "RCP_db342dvqvz9qcrn",\n      "reference" => "ref_943889313"\n    }]\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},aROD:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bank/resolve_bvn/:bvn\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank/resolve_bvn/:bvn',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank/resolve_bvn/:bvn",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},aUDE:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer/set_risk_action\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ customer: "CUS_xr58yrr2ujlft9k", risk_action: "allow" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"customer\": \"CUS_xr58yrr2ujlft9k\",\n  \"risk_action\": \"allow\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/set_risk_action',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/customer/set_risk_action";\n\n  $fields = [\n    \'customer\' => "CUS_xr58yrr2ujlft9k",\n    \'risk_action\' => "allow"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},asxJ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment session timeout updated",\n  "data": {\n    "payment_session_timeout": 30\n  }\n}'},bOBQ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Dispute retrieved",\n  "data": {\n    "id": 2867,\n    "refund_amount": null,\n    "currency": null,\n    "status": "archived",\n    "resolution": null,\n    "domain": "test",\n    "transaction": {\n      "id": 5991760,\n      "domain": "test",\n      "status": "success",\n      "reference": "asjck8gf76zd1dr",\n      "amount": 39100,\n      "message": null,\n      "gateway_response": "Successful",\n      "paid_at": "2017-11-09T00:01:56.000Z",\n      "created_at": "2017-11-09T00:01:36.000Z",\n      "channel": "card",\n      "currency": "NGN",\n      "ip_address": null,\n      "metadata": "",\n      "log": null,\n      "fees": 587,\n      "fees_split": null,\n      "authorization": {},\n      "customer": {\n        "international_format_phone": null\n      },\n      "plan": {},\n      "subaccount": {},\n      "split": {},\n      "order_id": null,\n      "paidAt": "2017-11-09T00:01:56.000Z",\n      "createdAt": "2017-11-09T00:01:36.000Z",\n      "requested_amount": null\n    },\n    "transaction_reference": null,\n    "category": null,\n    "customer": {\n      "id": 10207,\n      "first_name": null,\n      "last_name": null,\n      "email": "shola@baddest.com",\n      "customer_code": "CUS_unz4q52yjsd6064",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "bin": null,\n    "last4": null,\n    "dueAt": null,\n    "resolvedAt": null,\n    "evidence": null,\n    "attachments": "[]",\n    "note": null,\n    "history": [\n      {\n        "status": "pending",\n        "by": "demo@test.co",\n        "createdAt": "2017-11-16T16:12:24.000Z"\n      }\n    ],\n    "messages": [\n      {\n        "sender": "demo@test.co",\n        "body": "test this",\n        "createdAt": "2017-11-16T16:12:24.000Z"\n      }\n    ],\n    "createdAt": "2017-11-16T16:12:24.000Z",\n    "updatedAt": "2019-08-16T08:05:25.000Z"\n  }\n}\n'},bSzG:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co//paymentrequest/notify/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-X POST',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '//paymentrequest/notify/:id_or_code',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.end()",s='<?php\n  $url = "https://api.paystack.co//paymentrequest/notify/:id_or_code";\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},c6VF:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/submit_address\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "reference": "7c7rpkqpc0tijs8",\n      "address": "140 N 2ND ST",\n      "city": "Stroudsburg",\n      "state": "PA",\n      "zip_code": "18360"\n    }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"reference\": \"7c7rpkqpc0tijs8\",\n  \"address\": \"140 N 2ND ST\",\n  \"city\": \"Stroudsburg\",\n  \"state\": \"PA\",\n  \"zip_code\": \"18360\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/submit_address',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/charge/submit_address";\n\n  $fields = [\n    "reference" => "7c7rpkqpc0tijs8",\n    "address" => "140 N 2ND ST",\n    "city" => "Stroudsburg",\n    "state" => "PA",\n    "zip_code" => "18360"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},cC25:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bulk charge batch has been resumed"\n}'},cEg4:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/page,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},cXsT:function(e){e.exports=JSON.parse('{"balance":{"id":"transfer-control-balance","title":"Check Balance","route":"/balance","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]},"balance-ledger":{"id":"transfer-control-balance-ledger","title":"Fetch Balance Ledger","route":"/balance/ledger","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]},"resend-otp":{"id":"transfer-control-resend-otp","title":"Resend Transfers OTP","route":"/transfer/resend_otp","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"transfer_code","type":"String","description":"Transfer code","required":true},{"param":"reason","type":"String","description":"Either <code>resend_otp</code> or <code>transfer</code>","required":true}],"query":[],"path":[]},"disable-otp":{"id":"transfer-control-disable-otp","title":"Disable Transfers OTP","route":"/transfer/disable_otp","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]},"finalize-disable-otp":{"id":"transfer-control-finalize-disable-otp","title":"Finalize Disable OTP","route":"/transfer/disable_otp_finalize","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"otp","type":"String","description":"OTP sent to business phone to verify disabling OTP requirement","required":true}],"query":[],"path":[]},"enable-otp":{"id":"transfer-control-enable-otp","title":"Enable Transfers OTP","route":"/transfer/enable_otp","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]}}')},cZEq:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/refund\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/refund,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/refund,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},cbeM:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transfer,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},chUl:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Disputes retrieved",\n  "data": [\n    {\n      "id": 2867,\n      "refund_amount": null,\n      "currency": null,\n      "status": "archived",\n      "resolution": null,\n      "domain": "test",\n      "transaction": {\n        "id": 5991760,\n        "domain": "test",\n        "status": "success",\n        "reference": "asjck8gf76zd1dr",\n        "amount": 39100,\n        "message": null,\n        "gateway_response": "Successful",\n        "paid_at": "2017-11-09T00:01:56.000Z",\n        "created_at": "2017-11-09T00:01:36.000Z",\n        "channel": "card",\n        "currency": "NGN",\n        "ip_address": null,\n        "metadata": "",\n        "log": null,\n        "fees": 587,\n        "fees_split": null,\n        "authorization": {},\n        "customer": null,\n        "plan": {},\n        "subaccount": {},\n        "split": {},\n        "order_id": null,\n        "paidAt": "2017-11-09T00:01:56.000Z",\n        "createdAt": "2017-11-09T00:01:36.000Z",\n        "pos_transaction_data": null\n      },\n      "transaction_reference": null,\n      "category": null,\n      "customer": {\n        "id": 10207,\n        "first_name": null,\n        "last_name": null,\n        "email": "shola@baddest.com",\n        "customer_code": "CUS_unz4q52yjsd6064",\n        "phone": null,\n        "metadata": null,\n        "risk_action": "default",\n        "international_format_phone": null\n      },\n      "bin": null,\n      "last4": null,\n      "dueAt": null,\n      "resolvedAt": null,\n      "evidence": null,\n      "attachments": "[]",\n      "note": null,\n      "history": [\n        {\n          "status": "pending",\n          "by": "demo@test.co",\n          "createdAt": "2017-11-16T16:12:24.000Z"\n        }\n      ],\n      "messages": [\n        {\n          "sender": "demo@test.co",\n          "body": "test this",\n          "createdAt": "2017-11-16T16:12:24.000Z"\n        }\n    ],\n      "createdAt": "2017-11-16T16:12:24.000Z",\n      "updatedAt": "2019-08-16T08:05:25.000Z"\n    }\n  ],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},cuZb:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "description": "a test invoice",\n      "line_items": [\n        {"name": "item 1", "amount": 20000},\n        {"name": "item 2", "amount": 20000}\n      ],\n      "tax": [\n        {"name": "VAT", "amount": 2000}\n      ],\n      "customer": "CUS_xwaj0txjryg393b",\n      "due_date": "2020-07-08"\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "description": "a test invoice",\n\t"line_items": [\n\t\t{"name": "item 1", "amount": 20000},\n\t\t{"name": "item 2", "amount": 20000}\n\t],\n\t"tax": [\n\t\t{"name": "VAT", "amount": 2000}\n\t],\n\t"customer": "CUS_xwaj0txjryg393b",\n\t"due_date": "2020-07-08"\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/paymentrequest\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/paymentrequest";\n\n  $fields = [\n    "description" => "a test invoice",\n    "line_items"=> [\n      {"name" => "item 1", "amount" => 20000},\n      {"name" => "item 2", "amount" => 20000}\n    ],\n    "tax" => [\n      {"name" => "VAT", "amount" => 2000}\n    ],\n    "customer" => "CUS_xwaj0txjryg393b",\n    "due_date" => "2020-07-08"\n    ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},djUW:function(e,t,n){},dsll:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r})),n.d(t,"stat_401",(function(){return s}));var a='{\n  "status": true,\n  "message": "Product successfully updated",\n  "data": {\n    "name": "Prod One",\n    "description": "Prod 1",\n    "product_code": "PROD_ohc0xq1ajpt2271",\n    "price": 20000,\n    "currency": "NGN",\n    "quantity": 5,\n    "quantity_sold": null,\n    "type": "good",\n    "image_path": "",\n    "file_path": "",\n    "is_shippable": false,\n    "unlimited": false,\n    "domain": "test",\n    "active": true,\n    "features": null,\n    "in_stock": true,\n    "metadata": null,\n    "id": 526,\n    "integration": 343288,\n    "createdAt": "2019-06-29T14:46:52.000Z",\n    "updatedAt": "2019-06-29T15:29:21.000Z"\n  }\n}',r='{\n  "status": false,\n  "message": "Product with same name already exists"\n}',s='{\n  "status": false,\n  "message": "Invalid Key"\n}'},e6eS:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Balance ledger retrieved",\n  "data": [\n      {\n        "integration": 463433,\n        "domain": "test",\n        "balance": 2078224968,\n        "currency": "NGN",\n        "difference": -50000,\n        "reason": "Who dey breet?",\n        "model_responsible": "Transfer",\n        "model_row": 56610600,\n        "id": 149411613,\n        "createdAt": "2021-04-08T09:39:49.000Z",\n        "updatedAt": "2021-04-08T09:39:49.000Z"\n      },\n      {\n        "integration": 463433,\n        "domain": "test",\n        "balance": 2078274968,\n        "currency": "NGN",\n        "difference": 10000,\n        "reason": "",\n        "model_responsible": "Transaction",\n        "model_row": 1073891448,\n        "id": 149314482,\n        "createdAt": "2021-04-08T00:00:11.000Z",\n        "updatedAt": "2021-04-08T00:00:11.000Z"\n      },\n      {\n        "integration": 463433,\n        "domain": "test",\n        "balance": 2078264968,\n        "currency": "NGN",\n        "difference": 500000,\n        "reason": "",\n        "model_responsible": "Transaction",\n        "model_row": 1073278150,\n        "id": 149178966,\n        "createdAt": "2021-04-07T15:26:36.000Z",\n        "updatedAt": "2021-04-07T15:26:36.000Z"\n      },\n      {\n        "integration": 463433,\n        "domain": "test",\n        "balance": 2077764968,\n        "currency": "NGN",\n        "difference": 230845,\n        "reason": "",\n        "model_responsible": "Transaction",\n        "model_row": 1073230164,\n        "id": 149164577,\n        "createdAt": "2021-04-07T14:56:02.000Z",\n        "updatedAt": "2021-04-07T14:56:02.000Z"\n      },\n      {\n        "integration": 463433,\n        "domain": "test",\n        "balance": 2077534123,\n        "currency": "NGN",\n        "difference": -210000,\n        "reason": "",\n        "model_responsible": "Refund",\n        "model_row": 1600361,\n        "id": 149089424,\n        "createdAt": "2021-04-07T12:19:22.000Z",\n        "updatedAt": "2021-04-07T12:19:22.000Z"\n      },\n      ...\n  ],\n  "meta": {\n      "total": 36944,\n      "skipped": 0,\n      "perPage": 50,\n      "page": 1,\n      "pageCount": 739\n  }\n}'},eFmc:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Customers retrieved",\n  "data": [\n    {\n      "integration": 100032,\n      "first_name": "Bojack",\n      "last_name": "Horseman",\n      "email": "bojack@horsinaround.com",\n      "phone": null,\n      "metadata": {\n        "photos": [\n          {\n            "type": "twitter",\n            "typeId": "twitter",\n            "typeName": "Twitter",\n            "url": "https://d2ojpxxtu63wzl.cloudfront.net/static/61b1a0a1d4dda2c9fe9e165fed07f812_a722ae7148870cc2e33465d1807dfdc6efca33ad2c4e1f8943a79eead3c21311",\n            "isPrimary": true\n          }\n        ]\n      },\n      "domain": "test",\n      "customer_code": "CUS_xnxdt6s1zg1f4nx",\n      "id": 1173,\n      "createdAt": "2016-03-29T20:03:09.000Z",\n      "updatedAt": "2016-03-29T20:03:10.000Z"\n    },\n    {\n      "integration": 100032,\n      "first_name": "Diane",\n      "last_name": "Nguyen",\n      "email": "diane@writersclub.com",\n      "phone": "16504173147",\n      "metadata": null,\n      "domain": "test",\n      "customer_code": "CUS_1uld4hluw0g2gn0",\n      "id": 63,\n      "createdAt": "2016-01-13T01:15:47.000Z",\n      "updatedAt": "2016-02-24T16:56:48.000Z"\n    },\n    {\n      "integration": 100032,\n      "first_name": null,\n      "last_name": null,\n      "email": "todd@chavez.com",\n      "phone": null,\n      "metadata": null,\n      "domain": "test",\n      "customer_code": "CUS_soirsjdqkyjfwcr",\n      "id": 65,\n      "createdAt": "2016-01-13T01:15:47.000Z",\n      "updatedAt": "2016-01-13T01:15:47.000Z"\n    }\n  ],\n  "meta": {\n    "total": 3,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},eolb:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/:reference\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/:reference',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/charge/:reference",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},ewoO:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Countries retrieved",\n  "data": [\n    {\n      "id": 1,\n      "name": "Nigeria",\n      "iso_code": "NG",\n      "default_currency_code": "NGN",\n      "integration_defaults": {},\n      "relationships": {\n        "currency": {\n          "type": "currency",\n          "data": [\n            "NGN",\n            "USD"\n          ]\n        },\n        "integration_feature": {\n          "type": "integration_feature",\n          "data": []\n        },\n        "integration_type": {\n          "type": "integration_type",\n          "data": [\n            "ITYPE_001",\n            "ITYPE_002",\n            "ITYPE_003"\n          ]\n        },\n        "payment_method": {\n          "type": "payment_method",\n          "data": [\n            "PAYM_001",\n            "PAYM_002",\n            "PAYM_003",\n            "PAYM_004"\n          ]\n        }\n      }\n    },\n    {\n      "id": 2,\n      "name": "Ghana",\n      "iso_code": "GH",\n      "default_currency_code": "GHS",\n      "integration_defaults": {},\n      "relationships": {\n        "currency": {\n          "type": "currency",\n          "data": [\n            "GHS",\n            "USD"\n          ]\n        },\n        "integration_feature": {\n          "type": "integration_feature",\n          "data": []\n        },\n        "integration_type": {\n          "type": "integration_type",\n          "data": [\n            "ITYPE_004",\n            "ITYPE_005"\n          ]\n        },\n        "payment_method": {\n          "type": "payment_method",\n          "data": [\n            "PAYM_001"\n          ]\n        }\n      }\n    }\n  ]\n}'},f9oa:function(e,t,n){},fDpv:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Dispute retrieved successfully",\n  "data": {\n    "history": [\n      {\n        "id": 6094,\n        "dispute": 2867,\n        "status": "pending",\n        "by": "demo@test.co",\n        "createdAt": "2017-11-16T16:12:24.000Z",\n        "updatedAt": "2017-11-16T16:12:24.000Z"\n      }\n    ],\n    "messages": [\n      {\n        "sender": "demo@test.co",\n        "body": "test this",\n        "dispute": 2867,\n        "id": 148,\n        "is_deleted": 0,\n        "createdAt": "2017-11-16T16:12:24.000Z",\n        "updatedAt": "2017-11-16T16:12:24.000Z"\n      }\n    ],\n    "currency": null,\n    "last4": null,\n    "bin": null,\n    "transaction_reference": null,\n    "merchant_transaction_reference": null,\n    "refund_amount": null,\n    "status": "archived",\n    "domain": "test",\n    "resolution": null,\n    "category": null,\n    "note": null,\n    "attachments": "[]",\n    "id": 2867,\n    "integration": 100043,\n    "transaction": {\n      "id": 5991760,\n      "domain": "test",\n      "status": "success",\n      "reference": "asjck8gf76zd1dr",\n      "amount": 39100,\n      "message": null,\n      "gateway_response": "Successful",\n      "paid_at": "2017-11-09T00:01:56.000Z",\n      "created_at": "2017-11-09T00:01:36.000Z",\n      "channel": "card",\n      "currency": "NGN",\n      "ip_address": null,\n      "metadata": "",\n      "log": null,\n      "fees": 587,\n      "fees_split": null,\n      "authorization": {},\n      "customer": {\n        "international_format_phone": null\n      },\n      "plan": {},\n      "subaccount": {},\n      "split": {},\n      "order_id": null,\n      "paidAt": "2017-11-09T00:01:56.000Z",\n      "createdAt": "2017-11-09T00:01:36.000Z",\n      "requested_amount": null\n    },\n    "created_by": null,\n    "evidence": null,\n    "resolvedAt": null,\n    "createdAt": "2017-11-16T16:12:24.000Z",\n    "updatedAt": "2019-08-16T08:05:25.000Z",\n    "dueAt": null\n  }\n}'},fEwz:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Managed Account Successfully Unassigned",\n  "data": {\n    "bank": {\n      "name": "Wema Bank",\n      "id": 20,\n      "slug": "wema-bank"\n    },\n    "account_name": "KAROKART/A YINKA",\n    "account_number": "9930020212",\n    "assigned": false,\n    "currency": "NGN",\n    "metadata": null,\n    "active": true,\n    "id": 173,\n    "created_at": "2019-12-09T13:31:38.000Z",\n    "updated_at": "2020-08-28T10:04:25.000Z",\n    "assignment": {\n      "assignee_id": 1530104,\n      "assignee_type": "Integration",\n      "assigned_at": "2019-12-09T13:40:21.000Z",\n      "integration": 100043,\n      "account_type": "PAY-WITH-TRANSFER-RECURRING"\n    }\n  }\n}'},fILZ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Slug is available"\n}'},fYgV:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request finalized",\n  "data": {\n    "id": 3136496,\n    "domain": "test",\n    "amount": 45000,\n    "currency": "NGN",\n    "due_date": "2020-06-30T22:59:59.000Z",\n    "has_invoice": true,\n    "invoice_number": 2,\n    "description": "Testing Invoice",\n    "pdf_url": null,\n    "line_items": [\n      {\n        "name": "Water",\n        "amount": 15000,\n        "quantity": 1\n      },\n      {\n        "name": "Bread",\n        "amount": 30000,\n        "quantity": 1\n      }\n    ],\n    "tax": [],\n    "request_code": "PRQ_rtjkfk1tpmvqo40",\n    "status": "pending",\n    "paid": false,\n    "paid_at": null,\n    "metadata": null,\n    "notifications": [],\n    "offline_reference": "4286263136496",\n    "customer": {\n      "id": 25833615,\n      "first_name": "Damilola",\n      "last_name": "Odujoko",\n      "email": "damilola@email.com",\n      "customer_code": "CUS_xwaj0txjryg393b",\n      "phone": null,\n      "metadata": {\n        "calling_code": "+234"\n      },\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "created_at": "2020-06-29T16:22:35.000Z",\n    "pending_amount": 45000\n  }\n}'},ft5A:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_404_not_found",(function(){return r}));var a='{\n  "status": true,\n  "message": "Timeline retrieved",\n  "data": {\n    "time_spent": 9061,\n    "attempts": 1,\n    "authentication": null,\n    "errors": 1,\n    "success": false,\n    "mobile": false,\n    "input": [],\n    "channel": "card",\n    "history": [\n      {\n        "type": "open",\n        "message": "Opened payment page",\n        "time": 1\n      },\n      {\n        "type": "input",\n        "message": "Filled these fields: card number, card expiry, card cvc",\n        "time": 39\n      },\n      {\n        "type": "action",\n        "message": "Attempted to pay",\n        "time": 39\n      },\n      {\n        "type": "error",\n        "message": "Error: Declined",\n        "time": 48\n      },\n      {\n        "type": "input",\n        "message": "Filled these fields: card expiry, card cvc",\n        "time": 9061\n      },\n      {\n        "type": "close",\n        "message": "Page closed",\n        "time": 9061\n      }\n    ]\n  }\n}',r='{  \n  "status": false,\n  "message": "Transaction ID or reference is invalid"\n}'},g0NR:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Managed accounts successfully retrieved",\n  "data": [{\n    "customer": {\n      "id": 1530104,\n      "first_name": "yinka",\n      "last_name": "Ojo",\n      "email": "hello@company.co",\n      "customer_code": "CUS_dy1r7ts03zixbq5",\n      "phone": "08154239386",\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "bank": {\n      "name": "Wema Bank",\n      "id": 20,\n      "slug": "wema-bank"\n    },\n    "id": 173,\n    "account_name": "KAROKART/A YINKA",\n    "account_number": "9930020212",\n    "created_at": "2019-12-09T13:31:38.000Z",\n    "updated_at": "2020-06-11T14:04:28.000Z",\n    "currency": "NGN",\n    "split_config": {\n      "subaccount": "ACCT_xdrne0tcvr5jkei"\n    },\n    "active": true,\n    "assigned": true\n  }],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},g8XE:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/initialize\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com", amount: "20000" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\",\n  \"amount\": \"20000\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/initialize',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transaction/initialize";\n\n  $fields = [\n    \'email\' => "customer@email.com",\n    \'amount\' => "20000",\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},gBHp:function(e){e.exports=JSON.parse('{"create":{"id":"product-create","title":"Create Product","route":"/product","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of product","required":true},{"param":"description","type":"String","description":"A description for this product","required":true},{"param":"price","type":"Integer","description":"Price should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"currency","type":"String","description":"Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD","required":true},{"param":"limited","type":"Boolean","description":"Set to <code>true</code> if the product has limited stock. Leave as <code>false</code> if the product has unlimited stock","required":false},{"param":"quantity","type":"Integer","description":"Number of products in stock. Use if <code>limited</code> is <code>true</code>","required":false}],"query":[],"path":[]},"list":{"id":"product-list","title":"List Products","route":"/product","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing product e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing product e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"product-fetch","title":"Fetch Product","route":"/product/:id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id","type":"String","description":"The product <code>ID</code> you want to fetch","required":true}]},"update":{"id":"product-update","title":"Update Product","route":"/product/:id","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"name","type":"String","description":"Name of product","required":true},{"param":"description","type":"String","description":"A description for this product","required":true},{"param":"price","type":"Integer","description":"Price should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"currency","type":"String","description":"Currency in which price is set. Allowed values are: NGN, GHS, ZAR or USD","required":true},{"param":"limited","type":"Boolean","description":"Set to <code>true</code> if the product has limited stock. Leave as <code>false</code> if the product has unlimited stock","required":false},{"param":"quantity","type":"Integer","description":"Number of products in stock. Use if <code>limited</code> is <code>true</code>","required":false}],"query":[],"path":[{"param":"id","type":"String","description":"Product ID","required":true}]}}')},gJrL:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Plans retrieved",\n  "data": [\n    {\n      "subscriptions": [\n        {\n          "customer": 63,\n          "plan": 27,\n          "integration": 100032,\n          "domain": "test",\n          "start": 1458505748,\n          "status": "complete",\n          "quantity": 1,\n          "amount": 100000,\n          "subscription_code": "SUB_birvokwpp0sftun",\n          "email_token": "9y62mxp4uh25das",\n          "authorization": {\n            "authorization_code": "AUTH_6tmt288t0o",\n            "bin": "408408",\n            "last4": "4081",\n            "exp_month": "12",\n            "exp_year": "2020",\n            "channel": "card",\n            "card_type": "visa visa",\n            "bank": "TEST BANK",\n            "country_code": "NG",\n            "brand": "visa",\n            "reusable": true,\n            "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n            "account_name": "BoJack Horseman"\n          },\n          "easy_cron_id": null,\n          "cron_expression": "0 0 * * 0",\n          "next_payment_date": "2016-03-27T07:00:00.000Z",\n          "open_invoice": null,\n          "id": 8,\n          "createdAt": "2016-03-20T20:29:08.000Z",\n          "updatedAt": "2016-03-22T16:23:52.000Z"\n        }\n      ],\n      "integration": 100032,\n      "domain": "test",\n      "name": "Satin Flower",\n      "plan_code": "PLN_lkozbpsoyd4je9t",\n      "description": null,\n      "amount": 100000,\n      "interval": "weekly",\n      "send_invoices": true,\n      "send_sms": true,\n      "hosted_page": false,\n      "hosted_page_url": null,\n      "hosted_page_summary": null,\n      "currency": "NGN",\n      "id": 27,\n      "createdAt": "2016-03-21T02:44:14.000Z",\n      "updatedAt": "2016-03-21T02:44:14.000Z"\n    },\n    {\n      "subscriptions": [],\n      "integration": 100032,\n      "domain": "test",\n      "name": "Monthly retainer",\n      "plan_code": "PLN_gx2wn530m0i3w3m",\n      "description": null,\n      "amount": 50000,\n      "interval": "monthly",\n      "send_invoices": true,\n      "send_sms": true,\n      "hosted_page": false,\n      "hosted_page_url": null,\n      "hosted_page_summary": null,\n      "currency": "NGN",\n      "id": 28,\n      "createdAt": "2016-03-29T22:42:50.000Z",\n      "updatedAt": "2016-03-29T22:42:50.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},"h/mE":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/subscription\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer": "CUS_xnxdt6s1zg1f4nx", "plan": "PLN_gx2wn530m0i3w3m" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"customer\": \"CUS_xnxdt6s1zg1f4nx\",\n  \"plan\": \"PLN_gx2wn530m0i3w3m\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/subscription',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/subscription";\n\n  $fields = [\n    \'customer\' => "CUS_xnxdt6s1zg1f4nx",\n    \'plan\' => "PLN_gx2wn530m0i3w3m"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},h0D8:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute/transaction/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute/transaction/:id,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dispute/transaction/:id,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},h8Q4:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": "success",\n  "message": "Subaccount unassigned",\n  "data": {\n    "id": 22173,\n    "split_config": NULL,\n    "account_name": "KAROKART/YINKA ADE",\n    "account_number": "0033322211",\n    "currency": "NGN",\n    "assigned": true,\n    "active": true,\n    "createdAt": "2020-03-11T15:14:00.707Z",\n    "updatedAt": "2020-03-11T15:14:00.707Z",\n  }\n}'},hDdT:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bvn/match\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ bvn: "12345678912",\n      account_number: "0000000000",\n      bank_code: "087",\n      first_name: "bojack",\n      last_name: "horseman"\n  }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"bvn\": \"12345678912\",\n  \"account_number\": \"0000000000\",\n  \"bank_code\": \"087\",\n  \"first_name\": \"bojack\",\n  \"last_name\": \"horseman\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bvn/match',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/bvn/match";\n\n  $fields = [\n    "bvn" => "12345678912",\n    "account_number" => "0000000000",\n    "bank_code" => "087",\n    "first_name" => "bojack",\n    "last_name" => "horseman"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},hSCL:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page/check_slug_availability/:slug\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page/check_slug_availability/:slug',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/page/check_slug_availability/:slug",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},hUGB:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Recipient updated",\n  "data": {\n    "type": "nuban",\n    "name": "Rick Sanchez",\n    "metadata": {\n      "job": "Flesh Eater",\n      "retired": true\n    },\n    "domain": "test",\n    "details": {\n      "account_number": "01000000010",\n      "account_name": null,\n      "bank_code": "044",\n      "bank_name": "Access Bank"\n    },\n    "currency": "NGN",\n    "recipient_code": "RCP_1i2k27vk4suemug",\n    "active": true,\n    "id": 27,\n    "createdAt": "2017-02-02T19:35:33.686Z",\n    "updatedAt": "2017-02-02T19:35:33.686Z"\n  }\n}'},haSG:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "customer":481193,"preferred_bank":"wema-bank" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"customer\": 481193, \n  \"preferred_bank\": \"wema-bank\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dedicated_account',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/dedicated_account";\n\n  $fields = [\n    "customer" => 481193,\n    "preferred_bank" => "wema-bank"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},hgqN:function(e,t,n){var a=n("q1tI");function r(e){return a.createElement("svg",e,a.createElement("path",{d:"M21.9709 7.01C21.9703 6.69396 21.887 6.3836 21.7292 6.10975C21.5715 5.83589 21.3448 5.60809 21.0718 5.44899L13.5789 1.70257C13.304 1.54947 12.9945 1.46912 12.6798 1.46912C12.3651 1.46912 12.0556 1.54947 11.7807 1.70257L4.28781 5.44899C4.01475 5.60809 3.78809 5.83589 3.63035 6.10975C3.47261 6.3836 3.38929 6.69396 3.38867 7.01V15.7516C3.38929 16.0677 3.47261 16.378 3.63035 16.6519C3.78809 16.9257 4.01475 17.1535 4.28781 17.3126L11.7807 21.0591C12.0556 21.2122 12.3651 21.2925 12.6798 21.2925C12.9945 21.2925 13.304 21.2122 13.5789 21.0591L21.0718 17.3126C21.3448 17.1535 21.5715 16.9257 21.7292 16.6519C21.887 16.378 21.9703 16.0677 21.9709 15.7516V7.01ZM12.6423 16.7257C12.3953 16.7257 12.1539 16.6525 11.9485 16.5152C11.7432 16.378 11.5831 16.183 11.4886 15.9548C11.3941 15.7266 11.3693 15.4755 11.4175 15.2333C11.4657 14.991 11.5846 14.7685 11.7593 14.5939C11.9339 14.4192 12.1565 14.3003 12.3987 14.2521C12.6409 14.2039 12.892 14.2286 13.1202 14.3232C13.3484 14.4177 13.5434 14.5777 13.6807 14.7831C13.8179 14.9885 13.8911 15.2299 13.8911 15.4769C13.8911 15.8081 13.7596 16.1257 13.5254 16.3599C13.2912 16.5941 12.9735 16.7257 12.6423 16.7257ZM13.8911 12.9793H11.3935V6.08588H13.8911V12.9793Z",fill:"#F14D4D"}))}r.defaultProps={width:"25",height:"25",viewBox:"0 0 25 25",fill:"none"},e.exports=r,r.default=r},iAO3:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Upload url generated",\n  "data": {\n    "signedUrl": "https://s3.eu-west-1.amazonaws.com/files.paystack.co/qesp8a4df1xejihd9x5q?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAI7CL5IZL2DJHOPPA%2F20191009%2Feu-west-1%2Fs3%2Faws4_request&X-Amz-Date=20191009T220931Z&X-Amz-Expires=1800&X-Amz-Signature=f5cc387949f3520982886e70ab2e08721a82a9fa9e26b696b91471f36453867a&X-Amz-SignedHeaders=host",\n    "fileName": "qesp8a4df1xejihd9x5q"\n  }\n}\n'},iZwC:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transactions retrieved",\n  "data": [{\n    "id": 5833,\n    "domain": "test",\n    "status": "failed",\n    "reference": "icy9ma6jd1",\n    "amount": 100,\n    "message": null,\n    "gateway_response": "Declined",\n    "paid_at": null,\n    "created_at": "2016-09-29T00:00:05.000Z",\n    "channel": "card",\n    "currency": "NGN",\n    "ip_address": null,\n    "metadata": null,\n    "timeline": null,\n    "customer": {\n      "first_name": "Ezra",\n      "last_name": "Olubi",\n      "email": "ezra@cfezra.com",\n      "phone": "16504173147",\n      "metadata": null,\n      "customer_code": "CUS_1uld4hluw0g2gn0"\n    },\n    "authorization": {},\n    "plan": {},\n    "requested_amount": 100\n  },\n  {\n    "id": 298126,\n    "domain": "live",\n    "status": "failed",\n    "reference": "z1gsnks86e6kfo8",\n    "amount": 10000,\n    "message": null,\n    "gateway_response": "Declined",\n    "paid_at": null,\n    "created_at": "2016-09-29T00:03:22.000Z",\n    "channel": "card",\n    "currency": "NGN",\n    "ip_address": null,\n    "metadata": {\n      "custom_fields": [{\n        "display_name": "Mobile Number",\n        "variable_name": "mobile_number",\n        "value": "+2348012345678"\n      }]\n    },\n    "log": null,\n    "fees": null,\n    "paidAt": "2016-09-29T00:03:25.000Z",\n    "createdAt": "2016-09-29T00:03:22.000Z",\n    "authorization": {\n      "authorization_code": "AUTH_86gs11dr",\n      "bin": "539983",\n      "last4": "0061",\n      "exp_month": "08",\n      "exp_year": "2018",\n      "card_type": "mastercard DEBIT",\n      "bank": "Guaranty Trust Bank",\n      "country_code": "NG",\n      "brand": "mastercard",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 8279,\n      "first_name": "Ezra",\n      "last_name": "Olubi",\n      "email": "ezra@cfezra.com",\n      "phone": "16504173147",\n      "customer_code": "CUS_1uld4hluw0g2gn0",\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "requested_amount": 10000\n  }],\n  "meta": {\n   "total": 1,\n   "skipped": 0,\n   "perPage": 50,\n   "page": 1,\n   "pageCount": 1\n  }\n}'},ieMM:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page/:id_or_slug\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page/:id_or_slug',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/page/:id_or_slug",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},ii9E:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Customer updated",\n  "data": {\n    "integration": 100032,\n    "first_name": "BoJack",\n    "last_name": "Horseman",\n    "email": "bojack@horsinaround.com",\n    "phone": null,\n    "metadata": {\n      "photos": [\n        {\n          "type": "twitter",\n          "typeId": "twitter",\n          "typeName": "Twitter",\n          "url": "https://d2ojpxxtu63wzl.cloudfront.net/static/61b1a0a1d4dda2c9fe9e165fed07f812_a722ae7148870cc2e33465d1807dfdc6efca33ad2c4e1f8943a79eead3c21311",\n          "isPrimary": true\n        }\n      ]\n    },\n    "identified": false,\n    "identifications":null,\n    "domain": "test",\n    "customer_code": "CUS_xnxdt6s1zg1f4nx",\n    "id": 1173,\n    "transactions": [],\n    "subscriptions": [],\n    "authorizations": [],\n    "createdAt": "2016-03-29T20:03:09.000Z",\n    "updatedAt": "2016-03-29T20:03:10.000Z"\n  }\n}'},"il+G":function(e){e.exports=JSON.parse('{"create":{"id":"customer-create","title":"Create Customer","route":"/customer","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"email","type":"String","description":"Customer\'s email address","required":true},{"param":"first_name","type":"String","description":"Customer\'s first name","required":true},{"param":"last_name","type":"String","description":"Customer\'s last name","required":true},{"param":"phone","type":"String","description":"Customer\'s phone number","required":false},{"param":"metadata","type":"Object","description":"A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format.","required":false}],"query":[],"path":[]},"list":{"id":"customer-list","title":"List Customers","route":"/customer","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing customers e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing customers e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"customer-fetch","title":"Fetch Customer","route":"/customer/:email_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"email_or_code","type":"String","description":"An <code>email</code> or <code>customer code</code> for the customer you want to fetch","required":true}]},"update":{"id":"customer-update","title":"Update Customer","route":"/customer/:code","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"first_name","type":"String","description":"Customer\'s first name","required":true},{"param":"last_name","type":"String","description":"Customer\'s last name","required":true},{"param":"phone","type":"String","description":"Customer\'s phone number","required":false},{"param":"metadata","type":"Object","description":"A set of key/value pairs that you can attach to the customer. It can be used to store additional information in a structured format.","required":false}],"query":[],"path":[{"param":"code","type":"String","description":"Customer\'s code","required":true}]},"validate":{"id":"customer-validate","title":"Validate Customer","route":"/customer/:code/identification","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"first_name","type":"String","description":"Customer\'s first name","required":true},{"param":"last_name","type":"String","description":"Customer\'s last name","required":true},{"param":"type","type":"String","description":"Predefined types of identification. Valid values: <code>bvn</code>","required":true},{"param":"value","type":"String","description":"Customer\'s identification number","required":true},{"param":"country","type":"String","description":"2 letter country code of identification issuer ","required":true}],"query":[],"path":[{"param":"code","type":"String","description":"Email, or customer code of customer to be identified","required":true}]},"whitelist-blacklist":{"id":"customer-whitelist-blacklist","title":"Whitelist/Blacklist Customer","route":"/customer/set_risk_action","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer\'s code, or email address","required":true},{"param":"risk_action","type":"String","description":"One of the possible risk actions [ <code>default</code>, <code>allow</code>, <code>deny</code> ]. <code>allow</code> to whitelist. <code>deny</code> to blacklist. Customers start with a <code>default</code> risk action.","required":false}],"query":[],"path":[]},"deactivate-authorization":{"id":"customer-deactivate-authorization","title":"Deactivate Authorization","route":"/customer/deactivate_authorization","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"authorization_code","type":"String","description":"Authorization code to be deactivated","required":true}],"query":[],"path":[]}}')},jC1y:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccount created",\n  "data": {\n    "integration": 100973,\n    "domain": "test",\n    "subaccount_code": "ACCT_4hl4xenwpjy5wb",\n    "business_name": "Sunshine Studios",\n    "description": null,\n    "primary_contact_name": null,\n    "primary_contact_email": null,\n    "primary_contact_phone": null,\n    "metadata": null,\n    "percentage_charge": 18.2,\n    "is_verified": false,\n    "settlement_bank": "Access Bank",\n    "account_number": "0193274682",\n    "settlement_schedule": "AUTO",\n    "active": true,\n    "migrate": false,\n    "id": 55,\n    "createdAt": "2016-10-05T13:22:04.000Z",\n    "updatedAt": "2016-10-21T02:19:47.000Z"\n  }\n}'},jJEH:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "OTP requirement for transfers has been disabled"\n}'},jYxI:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/partial_debit\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ \n      authorization_code: "AUTH_72btv547", \n      currency: "NGN", \n      amount: "20000",\n      email: "customer@email.com"\n }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"authorization_code\": \"AUTH_72btv547\",\n  \"currency\": \"NGN\",\n  \"amount\": \"20000\",\n  \"email\": \"customer@email.com\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/partial_debit',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transaction/partial_debit";\n\n  $fields = [\n    \'authorization_code_code\' => "AUTH_72btv547",\n    \'currency\' => "NGN",\n    \'amount\' => "20000",\n    \'email\' => "customer@email.com"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},jcg5:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_404",(function(){return r}));var a='{\n  "status": true,\n  "message": "Authorization has been deactivated"\n}',r='{\n  "status": false,\n  "message": "Authorization code not found."\n}'},jwPA:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bin resolved",\n  "data": {\n    "bin": "539983",\n    "brand": "Mastercard",\n    "sub_brand": "",\n    "country_code": "NG",\n    "country_name": "Nigeria",\n    "card_type": "DEBIT",\n    "bank": "Guaranty Trust Bank",\n    "linked_bank_id": 9\n  }\n}'},k2AB:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r}));var a='{\n  "status": true,\n  "message": "Customer Identification in progress"\n}',r='{\n  "status": false,\n  "message": "Invalid BVN"\n}'},k2fg:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request has been archived"\n}'},khQH:function(e){e.exports=JSON.parse('{"create":{"id":"dedicated-nuban-create","title":"Create Dedicated Account","route":"/dedicated_account","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer ID or code","required":true},{"param":"preferred_bank","type":"String","description":"The bank slug for preferred bank. To get a list of available banks, use the <a href=\\"#miscellaneous-providers\\">List Providers</a> endpoint","required":false},{"param":"subaccount","type":"String","description":"Subaccount code of the account you want to split the transaction with","required":false},{"param":"split_code","type":"String","description":"Split code consisting of the lists of accounts you want to split the transaction with","required":false}],"query":[],"path":[]},"list":{"id":"dedicated-nuban-list","title":"List Dedicated Accounts","route":"/dedicated_account","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"active","type":"Boolean","description":"Status of the dedicated account","required":true},{"param":"currency","type":"String","description":"Dedicated amount currency","required":true},{"param":"provider_slug","type":"String","description":"The bank\'s slug in lowercase, without spaces e.g. <code>wema-bank</code>","required":false},{"param":"bank_id","type":"String","description":"The bank\'s ID e.g. <code>035</code>","required":false},{"param":"customer","type":"String","description":"The customer\'s ID","required":false}],"path":[]},"fetch":{"id":"dedicated-nuban-fetch","title":"Fetch Dedicated Account","route":"/dedicated_account/:dedicated_account_id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"dedicated_account_id","type":"Integer","description":"ID of dedicated account","required":true}]},"deactivate":{"id":"dedicated-nuban-deactivate","title":"Deactivate Dedicated Account","route":"/dedicated_account/:dedicated_account_id","method":"DEL","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"dedicated_account_id","type":"Integer","description":"ID of dedicated account","required":true}]},"add-split":{"id":"dedicated-nuban-add-split","title":"Split Dedicated Account Transaction","route":"/dedicated_account/split","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer ID or code","required":true},{"param":"subaccount","type":"String","description":"Subaccount code of the account you want to split the transaction with","required":false},{"param":"split_code","type":"String","description":"Split code consisting of the lists of accounts you want to split the transaction with","required":false},{"param":"preferred_bank","type":"String","description":"The bank slug for preferred bank. To get a list of available banks, use the <a href=\\"#miscellaneous-providers\\">List Providers</a> endpoint","required":false}],"query":[],"path":[]},"remove-split":{"id":"dedicated-nuban-remove-split","title":"Remove Split from Dedicated Account","route":"/dedicated_account/split","method":"DEL","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"account_number","type":"String","description":"Dedicated Account Number","required":true}],"query":[],"path":[]},"providers":{"id":"dedicated-nuban-providers","title":"Fetch Bank Providers","route":"/dedicated_account/available_providers","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]}}')},"kn/q":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer/:email_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/:email_or_code',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/customer/:email_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},l48b:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/page/:id_or_slug\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name": "Buttercup Brunch", "amount": 500000\n      "description": "Gather your friends for the ritual that is brunch",\n    }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Buttercup Brunch\",\n  \"description\": \"Gather your friends for the ritual that is brunch\",\n  \"amount\": 500000\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/page/:id_or_slug',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/page/:id_or_slug";\n\n  $fields = [\n    \'name\' => "Buttercup Brunch",\n    \'description\' => "Gather your friends for the ritual that is brunch",\n    \'amount\' => 500000\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},"lPj/":function(e,t,n){},lWWd:function(e,t,n){},lWae:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request updated",\n  "data": {\n    "id": 3136496,\n    "domain": "test",\n    "amount": 45000,\n    "currency": "NGN",\n    "due_date": "2020-06-30T22:59:59.000Z",\n    "has_invoice": true,\n    "invoice_number": 2,\n    "description": "Update Testing",\n    "pdf_url": null,\n    "line_items": [\n      {\n        "name": "Water",\n        "amount": 15000,\n        "quantity": 1\n      },\n      {\n        "name": "Bread",\n        "amount": 30000,\n        "quantity": 1\n      }\n    ],\n    "tax": [],\n    "request_code": "PRQ_rtjkfk1tpmvqo40",\n    "status": "pending",\n    "paid": false,\n    "paid_at": null,\n    "metadata": null,\n    "notifications": [],\n    "offline_reference": "4286263136496",\n    "customer": {\n      "id": 25833615,\n      "first_name": "Damilola",\n      "last_name": "Odujoko",\n      "email": "damilola.odujoko@paystack.com",\n      "customer_code": "CUS_xwaj0txjryg393b",\n      "phone": null,\n      "metadata": {\n        "calling_code": "+234"\n      },\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "created_at": "2020-06-29T16:22:35.000Z"\n  }\n}'},lfNR:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/product/:id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "description": "Product Six Description", "name": "Product Six",\n      "price": 500000, "currency": "USD", "limited": false, \n      "quantity": 100 \n    }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"description\": \"Product Six Description\",\n  \"name\": \"Product Six\",\n  \"price\": 500000,\n  \"currency\": \"USD\",\n  \"limited\": false,\n  \"quantity\": 100\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/product/:id',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/product/:id";\n\n  $fields = [\n    \'description\' => "Product Six Description",\n    \'name\' => "Product Six",\n    \'price\' => 500000,\n    \'currency\' => "USD",\n    \'limited\' => false,\n    \'quantity\' => 100,\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},m4Hx:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bank\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bank,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bank",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},mSAH:function(e,t,n){"use strict";n.r(t),n.d(t,"json",(function(){return a}));var a='{\n  "status": [boolean],  // Only true if the details provided could be processed and no error occured while processing\n  "message": [string], // Explains why status is false... Entirely informational. Please only log this but do not use for your checks\n  "data": [object]    // contains actionable result of processing if present\n}'},"mm+n":function(e){e.exports=JSON.parse('{"initialize":{"id":"transaction-initialize","title":"Initialize Transaction","route":"/transaction/initialize","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"amount","type":"String","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"email","type":"String","description":"Customer\'s email address","required":true},{"param":"currency","type":"String","description":"The transaction currency (NGN, GHS, ZAR or USD). Defaults to your integration currency.","required":false},{"param":"reference","type":"String","description":"Unique transaction reference. Only <code>-</code>, <code>.</code>, <code>=</code> and alphanumeric characters allowed.","required":false},{"param":"callback_url","type":"String","description":"Fully qualified url, e.g. https://example.com/ . Use this to override the callback url provided on the dashboard for this transaction","required":false},{"param":"plan","type":"String","description":"If transaction is to create a subscription to a predefined plan, provide plan code here. This would invalidate the value provided in <code>amount</code>","required":false},{"param":"invoice_limit","type":"Integer","description":"Number of times to charge customer during subscription to plan","required":false},{"param":"metadata","type":"String","description":"Stringified JSON object of custom data. Kindly check the <a href=\\"/docs/payments/metadata\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Metadata</a> page for more information.</code>","required":false},{"param":"channels","type":"Array","description":"An array of payment channels to control what channels you want to make available to the user to make a payment with. Available channels include: <code>[\'card\', \'bank\', \'ussd\', \'qr\', \'mobile_money\', \'bank_transfer\']</code>","required":false},{"param":"split_code","type":"String","description":"The split code of the transaction split. e.g. <code>SPL_98WF13Eb3w</code>","required":false},{"param":"subaccount","type":"String","description":"The code for the subaccount that owns the payment. e.g. <code>ACCT_8f4s1eq7ml6rlzj</code>","required":false},{"param":"transaction_charge","type":"Integer","description":"A flat fee to charge the subaccount for this transaction (). This overrides the split percentage set when the subaccount was created. Ideally, you will need to use this if you are splitting in flat rates (since subaccount creation only allows for percentage split). e.g. <code>7000</code> for a 70 naira flat fee.","required":false},{"param":"bearer","type":"String","description":"Who bears Paystack charges? <code>account</code> or <code>subaccount</code> (defaults to <code>account</code>).","required":false}],"query":[],"path":[]},"verify":{"id":"transaction-verify","title":"Verify Transaction","route":"/transaction/verify/:reference","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"reference","type":"String","description":"The transaction reference used to intiate the transaction","required":true}]},"list":{"id":"transaction-list","title":"List Transactions","route":"/transaction","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"customer","type":"Integer","description":"Specify an ID for the customer whose transactions you want to retrieve","required":false},{"param":"status","type":"String","description":"Filter transactions by status (\'failed\', \'success\', \'abandoned\')","required":false},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"amount","type":"Integer","description":"Filter transactions by amount. Specify the amount (in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>)","required":false}],"path":[]},"fetch":{"id":"transaction-fetch","title":"Fetch Transaction","route":"/transaction/:id","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id","type":"Integer","description":"An ID for the transaction to fetch","required":true}]},"charge-authorization":{"id":"transaction-charge-authorization","title":"Charge Authorization","route":"/transaction/charge_authorization","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"amount","type":"String","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"email","type":"String","description":"Customer\'s email address","required":true},{"param":"authorization_code","type":"String","description":"Valid authorization code to charge","required":true},{"param":"reference","type":"String","description":"Unique transaction reference. Only <code>-</code>, <code>.</code>, <code>=</code> and alphanumeric characters allowed.","required":false},{"param":"currency","type":"String","description":"Currency in which amount should be charged. Allowed values are: NGN, GHS, ZAR or USD","required":false},{"param":"metadata","type":"String","description":"Stringified JSON object. Add a <code>custom_fields</code> attribute which has an array of objects if you would like the fields to be added to your transaction when displayed on the dashboard. Sample: <code>{\\"custom_fields\\":[{\\"display_name\\":\\"Cart ID\\",\\"variable_name\\": \\"cart_id\\",\\"value\\": \\"8393\\"}]}</code>","required":false},{"param":"channels","type":"Array","description":"Send us \'card\' or \'bank\' or \'card\',\'bank\' as an array to specify what options to show the user paying","required":false},{"param":"subaccount","type":"String","description":"The code for the subaccount that owns the payment. e.g. <code>ACCT_8f4s1eq7ml6rlzj</code>","required":false},{"param":"transaction_charge","type":"Integer","description":"A flat fee to charge the subaccount for this transaction (in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>). This overrides the split percentage set when the subaccount was created. Ideally, you will need to use this if you are splitting in flat rates (since subaccount creation only allows for percentage split). e.g. <code>7000</code> for a 70 naira flat fee.","required":false},{"param":"bearer","type":"String","description":"Who bears Paystack charges? <code>account</code> or <code>subaccount</code> (defaults to <code>account</code>).","required":false},{"param":"queue","type":"Boolean","description":"If you are making a scheduled charge call, it is a good idea to queue them so the processing system does not get overloaded causing transaction processing errors. Send <code>queue:true</code> to take advantage of our queued charging.","required":false}],"query":[],"path":[]},"check-authorization":{"id":"transaction-check-authorization","title":"Check Authorization","route":"/transaction/check_authorization","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"amount","type":"String","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"email","type":"String","description":"Customer\'s email address","required":true},{"param":"authorization_code","type":"String","description":"Valid authorization code to charge","required":true},{"param":"currency","type":"String","description":"Currency in which amount should be charged. Allowed values are: NGN, GHS, ZAR or USD","required":false}],"query":[],"path":[]},"view-timeline":{"id":"transaction-view-timeline","title":"View Transaction Timeline","route":"/transaction/timeline/:id_or_reference","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_reference","type":"String","description":"The ID or the reference of the transaction","required":true}]},"totals":{"id":"transaction-totals","title":"Transaction Totals","route":"/transaction/totals","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"export":{"id":"transaction-export","title":"Export Transactions","route":"/transaction/export","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing transaction e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"customer","type":"Integer","description":"Specify an ID for the customer whose transactions you want to retrieve","required":false},{"param":"status","type":"String","description":"Filter transactions by status (\'failed\', \'success\', \'abandoned\')","required":false},{"param":"currency","type":"String","description":"Specify the transaction currency to export. Allowed values are: in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":false},{"param":"amount","type":"Integer","description":"Filter transactions by amount. Specify the amount, in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":false},{"param":"settled","type":"Boolean","description":"Set to <code>true</code> to export only settled transactions. <code>false</code> for pending transactions. Leave undefined to export all transactions","required":false},{"param":"settlement","type":"Integer","description":"An ID for the settlement whose transactions we should export","required":false},{"param":"payment_page","type":"Integer","description":"Specify a payment page\'s id to export only transactions conducted on said page","required":false}],"body":[],"path":[]},"partial-debit":{"id":"transaction-partial-debit","title":"Partial Debit","route":"/transaction/partial_debit","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"authorization_code","type":"String","description":"Authorization Code","required":true},{"param":"currency","type":"String","description":"Specify the currency you want to debit. Allowed values are NGN, GHS, ZAR or USD.","required":true},{"param":"amount","type":"String","description":"Amount should be in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code>","required":true},{"param":"email","type":"String","description":"Customer\'s email address (attached to the authorization code)","required":true},{"param":"reference","type":"String","description":"Unique transaction reference. Only <code>-</code>, <code>.</code>, <code>=</code> and alphanumeric characters allowed.","required":false},{"param":"at_least","type":"String","description":"Minimum amount to charge","required":false}],"query":[],"path":[]}}')},nWCd:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/settlement\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/settlement,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/settlement,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},njS0:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction/totals\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction/totals,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction/totals,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},nygo:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Bulk charge retrieved",\n  "data": {\n    "domain": "test",\n    "batch_code": "BCH_180tl7oq7cayggh",\n    "status": "complete",\n    "id": 17,\n    "total_charges": 0,\n    "pending_charges": 0,\n    "createdAt": "2017-02-04T05:44:19.000Z",\n    "updatedAt": "2017-02-04T05:45:02.000Z"\n  }\n}'},oVg5:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/charge/submit_birthday\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ birthday: "1961-09-21", reference: "5bwib5v6anhe9xa" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"birthday\": \"1961-09-21\",\n  \"reference\": \"5bwib5v6anhe9xa\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/charge/submit_birthday',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/charge/submit_birthday";\n\n  $fields = [\n    \'birthday\' => "1961-09-21",\n    \'reference\' => "5bwib5v6anhe9xa"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},ok49:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Transfers retrieved",\n  "data": [\n    {\n      "integration": 100073,\n      "recipient": {\n        "domain": "test",\n        "type": "nuban",\n        "currency": "NGN",\n        "name": "Flesh",\n        "details": {\n          "account_number": "olounje",\n          "account_name": null,\n          "bank_code": "044",\n          "bank_name": "Access Bank"\n        },\n        "description": "Eater",\n        "metadata": null,\n        "recipient_code": "RCP_2x5j67tnnw1t98k",\n        "active": true,\n        "id": 28,\n        "integration": 100073,\n        "createdAt": "2017-02-02T19:39:04.000Z",\n        "updatedAt": "2017-02-02T19:39:04.000Z"\n      },\n      "domain": "test",\n      "amount": 4400,\n      "currency": "NGN",\n      "source": "balance",\n      "source_details": null,\n      "reason": "Eater",\n      "status": "otp",\n      "failures": null,\n      "transfer_code": "TRF_1ptvuv321ahaa7q",\n      "id": 14,\n      "createdAt": "2017-02-03T17:21:54.000Z",\n      "updatedAt": "2017-02-03T17:21:54.000Z"\n    },\n    {\n      "integration": 100073,\n      "recipient": {\n        "domain": "test",\n        "type": "nuban",\n        "currency": "USD",\n        "name": "FleshUSD",\n        "details": {\n          "account_number": "1111111111",\n          "account_name": null,\n          "bank_code": "044",\n          "bank_name": "Access Bank"\n        },\n        "description": "EaterUSD",\n        "metadata": null,\n        "recipient_code": "RCP_bi84k5gguakuqmg",\n        "active": true,\n        "id": 22,\n        "integration": 100073,\n        "createdAt": "2017-01-23T16:52:48.000Z",\n        "updatedAt": "2017-01-23T16:52:48.000Z"\n      },\n      "domain": "test",\n      "amount": 3300,\n      "currency": "NGN",\n      "source": "balance",\n      "source_details": null,\n      "reason": "I love you",\n      "status": "otp",\n      "failures": null,\n      "transfer_code": "TRF_5pr8ypzb0htx0cn",\n      "id": 13,\n      "createdAt": "2017-01-23T16:55:59.000Z",\n      "updatedAt": "2017-01-23T16:55:59.000Z"\n    }\n  ],\n  "meta": {\n    "total": 2,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},onRE:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Settlements retrieved",\n  "data": [\n    {\n      "integration": 199999,\n      "settled_by": null,\n      "settlement_date": "2016-11-04T00:00:00.000Z",\n      "domain": "live",\n      "total_amount": 28350,\n      "status": "pending",\n      "id": 8597,\n      "createdAt": "2016-11-04T00:00:00.000Z",\n      "updatedAt": null\n    },\n    {\n      "integration": 199999,\n      "subaccount": {\n        "domain": "live",\n        "subaccount_code": "ACCT_83uhio98ueej",\n        "business_name": "Someone, Somewhere",\n        "description": null,\n        "primary_contact_name": null,\n        "primary_contact_email": null,\n        "primary_contact_phone": null,\n        "metadata": null,\n        "percentage_charge": 1,\n        "is_verified": false,\n        "settlement_bank": "Guaranty Trust Bank",\n        "account_number": "0909090909",\n        "settlement_schedule": "WEEKLY",\n        "active": true,\n        "migrate": null,\n        "id": 23,\n        "integration": 199999,\n        "createdAt": "2016-10-03T13:14:36.000Z",\n        "updatedAt": "2016-11-03T14:21:52.000Z"\n      },\n      "settled_by": null,\n      "settlement_date": "2016-11-04T00:00:00.000Z",\n      "domain": "live",\n      "total_amount": 80000,\n      "status": "pending",\n      "id": 8598,\n      "createdAt": "2016-11-04T00:00:00.000Z",\n      "updatedAt": null\n    },\n    {\n      "integration": 199999,\n      "settled_by": null,\n      "settlement_date": "2016-09-12T00:00:00.000Z",\n      "domain": null,\n      "total_amount": 9850,\n      "status": "success",\n      "id": 5625,\n      "createdAt": "2016-09-12T00:00:00.000Z",\n      "updatedAt": null\n    }\n  ],\n  "meta": {\n    "total": 4,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},p7PI:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_404",(function(){return r}));var a='{\n  "status": true,\n  "message": "2 transfers queued.",\n  "data": [\n    {\n      "recipient": "RCP_db342dvqvz9qcrn",\n      "amount": 50000,\n      "transfer_code": "TRF_jblmryckdrc6zq4",\n      "currency": "NGN"\n    },\n    {\n      "recipient": "RCP_db342dvqvz9qcrn",\n      "amount": 50000,\n      "transfer_code": "TRF_yqs7t2w2xndexy7",\n      "currency": "NGN"\n    }\n  ]\n}',r='{\n  "status": false,\n  "message": "The customer specified has no saved authorizations"\n}'},pNO7:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Plan created",\n  "data": {\n    "name": "Monthly retainer",\n    "amount": 500000,\n    "interval": "monthly",\n    "integration": 100032,\n    "domain": "test",\n    "plan_code": "PLN_gx2wn530m0i3w3m",\n    "send_invoices": true,\n    "send_sms": true,\n    "hosted_page": false,\n    "currency": "NGN",\n    "id": 28,\n    "createdAt": "2016-03-29T22:42:50.811Z",\n    "updatedAt": "2016-03-29T22:42:50.811Z"\n  }\n}'},pv0b:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/paymentrequest/finalize/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X POST',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/paymentrequest/finalize/:id_or_code',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/paymentrequest/finalize/:id_or_code",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "POST",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},qIBN:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Evidence created",\n  "data": {\n    "customer_email": "cus@gmail.com",\n    "customer_name": "Mensah King",\n    "customer_phone": "0802345167",\n    "service_details": "claim for buying product",\n    "delivery_address": "3a ladoke street ogbomoso",\n    "dispute": 624,\n    "id": 21,\n    "createdAt": "2019-08-28T15:36:13.783Z",\n    "updatedAt": "2019-08-28T15:39:39.153Z"\n  }\n}'},qofJ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_otp",(function(){return a})),n.d(t,"stat_200_pending",(function(){return r})),n.d(t,"stat_200_pin",(function(){return s})),n.d(t,"stat_200_failed",(function(){return o})),n.d(t,"stat_200",(function(){return i})),n.d(t,"stat_200_bank_auth",(function(){return c})),n.d(t,"stat_200_phone",(function(){return u})),n.d(t,"stat_200_birthday",(function(){return l})),n.d(t,"stat_200_ussd",(function(){return d})),n.d(t,"stat_200_mobile_money",(function(){return p})),n.d(t,"stat_200_address",(function(){return h})),n.d(t,"stat_400",(function(){return m}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_otp",\n    "display_text": "Please send OTP"\n  }\n}',r='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "5bwib5v6anhe9xa",\n    "status": "pending"\n  }\n}',s='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "status": "send_pin"\n  }\n}',o='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "bc9w93gh629a4d7",\n    "status": "failed",\n    "message": "Transaction declined. Please use the test card."\n  }\n}',i='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 200,\n    "currency": "NGN",\n    "transaction_date": "2017-05-24T05:56:12.000Z",\n    "status": "success",\n    "reference": "zuvbpizfcf2fs7y",\n    "domain": "test",\n    "metadata": {\n   \t"custom_fields":[\n   \t\t{\n   \t\t\t"display_name":"Merchant name",\n   \t\t\t"variable_name":"merchant_name",\n   \t\t\t"value":"Van Damme"\n\t\t},\n\t\t{\n   \t\t\t"display_name":"Paid Via",\n   \t\t\t"variable_name":"paid_via",\n   \t\t\t"value":"API call"\n\t\t}\n   \t]\n   },\n    "gateway_response": "Successful",\n    "message": null,\n    "channel": "card",\n    "ip_address": "54.154.89.28, 162.158.38.82, 172.31.38.35",\n    "log": null,\n    "fees": 3,\n    "authorization": {\n      "authorization_code": "AUTH_6tmt288t0o",\n      "bin": "408408",\n      "last4": "4081",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa visa",\n      "bank": "TEST BANK",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 14571,\n      "first_name": null,\n      "last_name": null,\n      "email": "ibrahim@paystack.co",\n      "customer_code": "CUS_hns72vhhtos0f0k",\n      "phone": null,\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": null\n  }\n}',c='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "apg8mnjf5yg7zp8",\n    "url":"https://standard.paystack.co/close",\n    "status": "open_url"\n  }\n}',u='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_phone",\n    "display_text": "Please send phone"\n  }\n}',l='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "reference": "0t4gwo2ft6q0n9h",\n    "status": "send_birthday",\n    "display_text": "Please send your birthday"\n  }\n}',d='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n      "reference": "2ofkbk0yie6dvzb",\n      "status": "pay_offline",\n      "display_text": "Please dial *737*33*4*453441# on your mobile phone to complete the transaction",\n      "ussd_code": "*737*33*4*453441#"\n  }\n}',p='{\n  "message": "Charge attempted",\n  "status": true,\n  "data": {\n    "amount": 100,\n    "channel": "mobile_money",\n    "created_at": "2018-11-17T14:39:56.000Z",\n    "currency": "GHS",\n    "domain": "live",\n    "fees": 153,\n    "gateway_response": "Approved",\n    "id": 59333,\n    "ip_address": "35.177.189.123, 162.158.155.220",\n    "message": "madePayment",\n    "paid_at": "2018-11-17T14:40:18.000Z",\n    "reference": "l7lvu4y3xcka6zu",\n    "status": "success",\n    "transaction_date": "2018-11-17T14:39:56.000Z",\n    "authorization": {\n      "authorization_code": "AUTH_33lz7ev5tq",\n      "bank": "MTN Mobile Money",\n      "bin": "055XXX",\n      "brand": "Mtn mobile money",\n      "channel": "mobile_money",\n      "country_code": "GH",\n      "exp_month": 12,\n      "exp_year": 9999,\n      "last4": "X149",\n      "reusable": false,\n      "account_name": "BoJack Horseman"\n     },\n     "customer": {\n       "customer_code": "CUS_s3aa4mx0yyvrqye",\n       "email": "customer@email.com",\n       "id": 16763,\n       "risk_action": "default"\n     }\n  }\n}',h='{\n  "message": "Charge attempted",\n  "status": true,\n  "data": {\n    "display_text": "Please send details for address verification",\n    "reference": "7c7rpkqpc0tijs8",\n    "status": "send_address",\n    "country_code": "CA"\n  }\n}',m='{\n  "status": false,\n  "message": "Email address is required for association with card"\n}'},qwGz:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccount added",\n  "data": {\n    "id": 143,\n    "name": "Test Doc",\n    "type": "percentage",\n    "currency": "NGN",\n    "integration": 428626,\n    "domain": "test",\n    "split_code": "SPL_UO2vBzEqHW",\n    "active": true,\n    "bearer_type": "subaccount",\n    "bearer_subaccount": 40809,\n    "createdAt": "2020-06-30T11:52:24.000Z",\n    "updatedAt": "2020-06-30T11:52:24.000Z",\n    "subaccounts": [\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_sv6roe394nkpu6j",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "1234567890"\n        },\n        "share": 30\n      },\n      {\n        "subaccount": {\n          "id": 40811,\n          "subaccount_code": "ACCT_7i76qpjh7rr6q3z",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "0123456789"\n        },\n        "share": 30\n      }\n    ],\n    "total_subaccounts": 2\n  }\n}'},r3hh:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "type": "nuban",\n      "name": "Zombie",\n      "description": "Zombier",\n      "account_number": "01000000010",\n      "bank_code": "044",\n      "currency": "NGN"\n    }\'\n-X POST',r='const https = require(\'https\')\n\nconst params = JSON.stringify({\n  "type": "nuban",\n  "name": "Zombie",\n  "description": "Zombier",\n  "account_number": "01000000010",\n  "bank_code": "044",\n  "currency": "NGN"\n})\n\nconst options = {\n  hostname: \'api.paystack.co\',\n  port: 443,\n  path: \'/transferrecipient\',\n  method: \'POST\',\n  headers: {\n    Authorization: \'Bearer SECRET_KEY\',\n    \'Content-Type\': \'application/json\'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = \'\'\n\n  res.on(\'data\', (chunk) => {\n    data += chunk\n  });\n\n  res.on(\'end\', () => {\n    console.log(JSON.parse(data))\n  })\n}).on(\'error\', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()',s='<?php\n  $url = "https://api.paystack.co/transferrecipient";\n\n  $fields = [\n    "type" => "nuban",\n    "name" => "Zombie",\n    "description" => "Zombier",\n    "account_number" => "01000000010",\n    "bank_code" => "044",\n    "currency" => "NGN"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},rMen:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transaction\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transaction,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/transaction,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},s5iQ:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Split created",\n  "data": {\n    "id": 142,\n    "name": "Test Doc",\n    "type": "percentage",\n    "currency": "NGN",\n    "integration": 428626,\n    "domain": "test",\n    "split_code": "SPL_e7jnRLtzla",\n    "active": true,\n    "bearer_type": "subaccount",\n    "bearer_subaccount": 40809,\n    "createdAt": "2020-06-30T11:42:29.150Z",\n    "updatedAt": "2020-06-30T11:42:29.150Z",\n    "subaccounts": [\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_z3x6z3nbo14xsil",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "1234567890"\n        },\n        "share": 20\n      },\n      {\n        "subaccount": {\n          "id": 40809,\n          "subaccount_code": "ACCT_pwwualwty4nhq9d",\n          "business_name": "Business Name",\n          "description": "Business Description",\n          "primary_contact_name": null,\n          "primary_contact_email": null,\n          "primary_contact_phone": null,\n          "metadata": null,\n          "percentage_charge": 20,\n          "settlement_bank": "Business Bank",\n          "account_number": "0123456789"\n        },\n        "share": 30\n      }\n    ],\n    "total_subaccounts": 2\n  }\n}'},s5u1:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subscriptions retrieved",\n  "data": [\n    {\n      "customer": {\n        "first_name": "BoJack",\n        "last_name": "Horseman",\n        "email": "bojack@horseman.com",\n        "phone": "",\n        "metadata": null,\n        "domain": "test",\n        "customer_code": "CUS_hdhye17yj8qd2tx",\n        "risk_action": "default",\n        "id": 84312,\n        "integration": 100073,\n        "createdAt": "2016-10-01T10:59:52.000Z",\n        "updatedAt": "2016-10-01T10:59:52.000Z"\n      },\n      "plan": {\n        "domain": "test",\n        "name": "Weekly small chops",\n        "plan_code": "PLN_0as2m9n02cl0kp6",\n        "description": "Small chops delivered every week",\n        "amount": 27000,\n        "interval": "weekly",\n        "send_invoices": true,\n        "send_sms": true,\n        "hosted_page": false,\n        "hosted_page_url": null,\n        "hosted_page_summary": null,\n        "currency": "NGN",\n        "migrate": null,\n        "id": 1716,\n        "integration": 100073,\n        "createdAt": "2016-10-01T10:59:11.000Z",\n        "updatedAt": "2016-10-01T10:59:11.000Z"\n      },\n      "integration": 123456,\n      "authorization": {\n        "authorization_code": "AUTH_6tmt288t0o",\n        "bin": "408408",\n        "last4": "4081",\n        "exp_month": "12",\n        "exp_year": "2020",\n        "channel": "card",\n        "card_type": "visa visa",\n        "bank": "TEST BANK",\n        "country_code": "NG",\n        "brand": "visa",\n        "reusable": true,\n        "signature": "SIG_uSYN4fv1adlAuoij8QXh",\n        "account_name": "BoJack Horseman"\n      },\n      "domain": "test",\n      "start": 1475319599,\n      "status": "active",\n      "quantity": 1,\n      "amount": 27000,\n      "subscription_code": "SUB_6phdx225bavuwtb",\n      "email_token": "ore84lyuwcv2esu",\n      "easy_cron_id": "275226",\n      "cron_expression": "0 0 * * 6",\n      "next_payment_date": "2016-10-15T00:00:00.000Z",\n      "open_invoice": "INV_qc875pkxpxuyodf",\n      "id": 4192,\n      "createdAt": "2016-10-01T10:59:59.000Z",\n      "updatedAt": "2016-10-12T07:45:14.000Z"\n    }\n  ],\n  "meta": {\n    "total": 1,\n    "skipped": 0,\n    "perPage": 50,\n    "page": 1,\n    "pageCount": 1\n  }\n}'},sOB7:function(e){e.exports=JSON.parse('{"create":{"id":"refund-create","title":"Create Refund","route":"/refund","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"transaction","type":"String","description":"Transaction reference or id","required":true},{"param":"amount","type":"Integer","description":"Amount ( in <strong>kobo</strong> if currency is <code>NGN</code>, <strong>pesewas</strong>, if currency is <code>GHS</code>, and <strong>cents</strong>, if currency is <code>ZAR</code> ) to be refunded to the customer. Amount is optional(defaults to original transaction amount) and cannot be more than the original transaction amount.","required":false},{"param":"currency","type":"String","description":"Three-letter ISO currency. Allowed values are: NGN, GHS, ZAR or USD","required":false},{"param":"customer_note","type":"String","description":"Customer reason","required":false},{"param":"merchant_note","type":"String","description":"Merchant reason","required":false}],"query":[],"path":[]},"list":{"id":"refund-list","title":"List Refunds","route":"/refund","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"reference","type":"String","description":"Identifier for transaction to be refunded","required":true},{"param":"currency","type":"String","description":"Three-letter ISO currency. Allowed values are: NGN, GHS, ZAR or USD","required":true},{"param":"from","type":"Date","description":"A timestamp from which to start listing refund e.g. <code>2016-09-21</code>","required":false},{"param":"to","type":"Date","description":"A timestamp at which to stop listing refund e.g. <code>2016-09-21</code>","required":false},{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":false},{"param":"page","type":"Integer","description":"Specify exactly what refund you want to page. If not specify we use a default value of 1.","required":false}],"path":[]},"fetch":{"id":"refund-fetch","title":"Fetch Refund","route":"/refund/:reference","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"reference","type":"String","description":"Identifier for transaction to be refunded","required":true}]}}')},slfs:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "OTP has been sent to mobile number ending with 4321"\n}'},sx8e:function(e,t,n){},tUV0:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dedicated_account/:dedicated_account_id\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X DELETE',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dedicated_account/:dedicated_account_id',\n  method: 'DELETE',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dedicated_account/:dedicated_account_id",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "DELETE",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},te2E:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/plan\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "name": "Monthly retainer", "interval": "monthly", "amount": "500000" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Monthly retainer\",\n  \"interval\": \"monthly\", \n  \"amount\": \"500000\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/plan',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/plan";\n\n  $fields = [\n    \'name\' => "Monthly retainer",\n    \'interval\' => "monthly", \n    \'amount\' => "500000"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},tqvS:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/refund\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "transaction": 1641 }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"transaction\": 1641\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/refund',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/refund";\n\n  $fields = [\n    \'transaction\' => 1641\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},ty29:function(e){e.exports=JSON.parse('{"create":{"id":"invoice-create","title":"Create Invoice","route":"/paymentrequest","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer id or code","required":true},{"param":"amount","type":"Integer","description":"Payment request amount. Only useful if line items and tax values are ignored. endpoint will throw a friendly warning if neither is available.","required":true},{"param":"due_date","type":"Datetime","description":"ISO 8601 representation of request due date","required":true},{"param":"description","type":"Object","description":"A short description of the payment request","required":false},{"param":"line_items","type":"Array of Strings","description":"Array of line items int the format <code>[{\\"name\\":\\"item 1\\", \\"amount\\":2000}]</code>","required":false},{"param":"tax","type":"Array of Strings","description":"Array of taxes to be charged in the format <code>[{\\"name\\":\\"VAT\\", \\"amount\\":2000}]</code>","required":false},{"param":"currency","type":"String","description":"Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD. Defaults to NGN","required":false},{"param":"send_notification","type":"Boolean","description":"Indicates whether Paystack sends an email notification to customer. Defaults to <code>true</code>","required":false},{"param":"draft","type":"Boolean","description":"Indicate if request should be saved as draft. Defaults to false and overrides send_notification","required":false},{"param":"has_invoice","type":"Boolean","description":"Set to <code>true</code> to create a draft invoice (adds an auto incrementing invoice number if none is provided) even if there are no <code>line_items</code> or <code>tax</code> passed","required":false},{"param":"invoice_number","type":"Integer","description":"Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help override whatever value Paystack decides. Auto increment for subsequent invoices continue from this point.","required":false}],"query":[],"path":[]},"list":{"id":"invoice-list","title":"List Invoices","route":"/paymentrequest","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what invoice you want to page. If not specify we use a default value of 1.","required":true},{"param":"customer","type":"String","description":"Filter by customer ID","required":true},{"param":"status","type":"String","description":"Filter by invoice status","required":true},{"param":"currency","type":"String","description":"Filter by currency. Allowed values are NGN, GHS, ZAR and USD.","required":true},{"param":"include_archive","type":"String","description":"Show archived invoices","required":true},{"param":"from","type":"Datetime","description":"A timestamp from which to start listing invoice e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false},{"param":"to","type":"Datetime","description":"A timestamp at which to stop listing invoice e.g. <code>2016-09-24T00:00:05.000Z</code>, <code>2016-09-21</code>","required":false}],"path":[]},"fetch":{"id":"invoice-view","title":"View Invoice","route":"/paymentrequest/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"The invoice <code>ID</code> or <code>code</code> you want to fetch","required":true}]},"update":{"id":"invoice-update","title":"Update Invoice","route":"/paymentrequest/:id_or_code","method":"PUT","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer id or code","required":true},{"param":"amount","type":"Integer","description":"Payment request amount. Only useful if line items and tax values are ignored. endpoint will throw a friendly warning if neither is available.","required":true},{"param":"due_date","type":"Datetime","description":"ISO 8601 representation of request due date","required":false},{"param":"description","type":"Object","description":"A short description of the payment request","required":false},{"param":"line_items","type":"Array of Strings","description":"Array of line items int the format <code>[{\\"name\\":\\"item 1\\", \\"amount\\":2000}]</code>","required":false},{"param":"tax","type":"Array of Strings","description":"Array of taxes to be charged in the format <code>[{\\"name\\":\\"VAT\\", \\"amount\\":2000}]</code>","required":false},{"param":"currency","type":"String","description":"Specify the currency of the invoice. Allowed values are NGN, GHS, ZAR and USD Defaults to NGN","required":false},{"param":"send_notification","type":"Boolean","description":"Indicates whether Paystack sends an email notification to customer. Defaults to <code>true</code>","required":false},{"param":"draft","type":"Boolean","description":"Indicate if request should be saved as draft. Defaults to false and overrides send_notification","required":false},{"param":"invoice_number","type":"Integer","description":"Numeric value of invoice. Invoice will start from 1 and auto increment from there. This field is to help override whatever value Paystack decides. Auto increment for subsequent invoices continue from this point.","required":false}],"query":[],"path":[{"param":"id_or_code","type":"String","description":"Invoice ID or slug","required":true}]},"verify":{"id":"invoice-verify","title":"Verify Invoice","route":"/paymentrequest/verify/:code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"code","type":"String","description":"Invoice code","required":true}]},"send-notification":{"id":"invoice-send-notification","title":"Send Notification","route":"/paymentrequest/notify/:code","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"code","type":"String","description":"Invoice code","required":true}]},"total":{"id":"invoice-total","title":"Invoice Total","route":"/paymentrequest/totals","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[]},"finalize":{"id":"invoice-finalize","title":"Finalize Invoice","route":"/paymentrequest/finalize/:code","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[{"param":"send_notification","type":"Boolean","description":"Indicates whether Paystack sends an email notification to customer. Defaults to <code>true</code>","required":true}],"query":[],"path":[{"param":"code","type":"String","description":"Invoice code","required":true}]},"archive":{"id":"invoice-archive","title":"Archive Invoice","route":"/paymentrequest/archive/:code","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"code","type":"String","description":"Invoice code","required":true}]}}')},"u/L6":function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge/:id_or_code/charges\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge/:id_or_code/charges',\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bulkcharge/:id_or_code/charges",\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},u4V8:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transferrecipient/:id_or_code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ name: "Rick Sanchez" }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"name\": \"Rick Sanchez\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transferrecipient/:id_or_code',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transferrecipient/:id_or_code";\n\n  $fields = [\n    \'name\' => "Rick Sanchez"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},uOuR:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/split/:id/subaccount/remove\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ "subaccount": "ACCT_hdl8abxl8drhrl3" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"subaccount\": \"ACCT_hdl8abxl8drhrl3\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/split/:id/subaccount/remove',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/split/:id/subaccount/remove";\n\n  $fields = [\n    "subaccount" => "ACCT_hdl8abxl8drhrl3"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},v29Y:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n    "status": true,\n    "message": "Transfer recipient set as inactive"\n  }'},vCUy:function(e,t,n){"use strict";var a=n("q1tI"),r=n.n(a),s=(n("3ot7"),n("Xo++")),o=n.n(s),i=n("hgqN"),c=n.n(i),u=n("0I2F"),l=n.n(u),d=n("0zjK"),p=n.n(d);t.a=function(e){var t=e.type,n=e.title,a=e.children,s="summary"===t?"In a nutshell":n,i={warning:r.a.createElement(o.a,null),info:r.a.createElement(p.a,null),danger:r.a.createElement(c.a,null),summary:r.a.createElement(l.a,null)};return r.a.createElement("div",{className:"callout callout--"+t},r.a.createElement("div",{className:"callout__header",title:t},r.a.createElement("span",{className:"callout__icon"},i[t]),r.a.createElement("h5",{className:"callout__header-text"},s)),r.a.createElement("div",null,a))}},vM9H:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Page updated",\n  "data": {\n    "domain": "test",\n    "name": "Buttercup Brunch",\n    "description": "Gather your friends for the ritual that is brunch",\n    "amount": null,\n    "currency": "NGN",\n    "slug": "5nApBwZkvY",\n    "active": true,\n    "id": 18,\n    "integration": 100032,\n    "createdAt": "2016-03-30T00:49:57.000Z",\n    "updatedAt": "2016-03-30T04:44:35.000Z"\n  }\n}'},vQVd:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer/:code\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ first_name: "BoJack" }\'\n-X PUT',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"first_name\": \"BoJack\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer/:code',\n  method: 'PUT',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/customer/:code";\n\n  $fields = [\n    \'first_name\' => "BoJack"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "PUT");\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},vVa9:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Payment request retrieved",\n  "data": {\n    "id": 3136406,\n    "domain": "test",\n    "amount": 42000,\n    "currency": "NGN",\n    "due_date": "2020-07-08T00:00:00.000Z",\n    "has_invoice": true,\n    "invoice_number": 1,\n    "description": "a test invoice",\n    "pdf_url": null,\n    "line_items": [\n      {\n        "name": "item 1",\n        "amount": 20000\n      },\n      {\n        "name": "item 2",\n        "amount": 20000\n      }\n    ],\n    "tax": [\n      {\n        "name": "VAT",\n        "amount": 2000\n      }\n    ],\n    "request_code": "PRQ_1weqqsn2wwzgft8",\n    "status": "pending",\n    "paid": false,\n    "paid_at": null,\n    "metadata": null,\n    "notifications": [],\n    "offline_reference": "4286263136406",\n    "customer": {\n      "id": 25833615,\n      "first_name": "Damilola",\n      "last_name": "Odujoko",\n      "email": "damilola@example.com",\n      "customer_code": "CUS_xwaj0txjryg393b",\n      "phone": null,\n      "metadata": {\n        "calling_code": "+234"\n      },\n      "risk_action": "default",\n      "international_format_phone": null\n    },\n    "created_at": "2020-06-29T16:07:33.000Z",\n    "integration": {\n      "key": "pk_test_xxxxxxxx",\n      "name": "Paystack Documentation",\n      "logo": "https://s3-eu-west-1.amazonaws.com/pstk-integration-logos/paystack.jpg",\n      "allowed_currencies": [\n        "NGN",\n        "USD"\n      ]\n    },\n    "pending_amount": 42000\n  }\n}'},wZJq:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/dispute\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/dispute,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/dispute,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},"wr/o":function(e,t,n){},xTgc:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/bulkcharge\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-X GET',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/bulkcharge,\n  method: 'GET',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY'\n  }\n}\n\nhttps.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})",s='<?php\n  $curl = curl_init();\n  \n  curl_setopt_array($curl, array(\n    CURLOPT_URL => "https://api.paystack.co/bulkcharge,\n    CURLOPT_RETURNTRANSFER => true,\n    CURLOPT_ENCODING => "",\n    CURLOPT_MAXREDIRS => 10,\n    CURLOPT_TIMEOUT => 30,\n    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,\n    CURLOPT_CUSTOMREQUEST => "GET",\n    CURLOPT_HTTPHEADER => array(\n      "Authorization: Bearer SECRET_KEY",\n      "Cache-Control: no-cache",\n    ),\n  ));\n  \n  $response = curl_exec($curl);\n  $err = curl_error($curl);\n\n  curl_close($curl);\n  \n  if ($err) {\n    echo "cURL Error #:" . $err;\n  } else {\n    echo $response;\n  }\n?>'},xZLy:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "BVN resolved",\n  "data": {\n    "first_name": "WES",\n    "last_name": "GIBSONS",\n    "dob": "14-OCT-96",\n    "mobile": "09022092102",\n    "bvn": "21212917741"\n  },\n  "meta": {\n    "calls_this_month": 1,\n    "free_calls_left": 9\n  }\n}'},xggl:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Subaccount retrieved",\n  "data": {\n    "integration": 100973,\n    "domain": "test",\n    "subaccount_code": "ACCT_4hl4xenwpjy5wb",\n    "business_name": "Sunshine Studios",\n    "description": null,\n    "primary_contact_name": null,\n    "primary_contact_email": "dafe@aba.com",\n    "primary_contact_phone": null,\n    "metadata": null,\n    "percentage_charge": 18.9,\n    "is_verified": false,\n    "settlement_bank": "Access Bank",\n    "account_number": "0193274682",\n    "settlement_schedule": "AUTO",\n    "active": true,\n    "migrate": false,\n    "id": 55,\n    "createdAt": "2016-10-05T13:22:04.000Z",\n    "updatedAt": "2016-10-21T02:19:47.000Z"\n  }\n}'},yJtx:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "Refund created",\n  "data": {\n    "dispute": 14030,\n    "transaction": {\n      "id": 1641,\n      "domain": "live",\n      "status": "reversed",\n      "reference": "x7g15k5iye",\n      "amount": 2500,\n      "message": null,\n      "gateway_response": "Approved",\n      "paid_at": "2018-06-27T09:50:55.000Z",\n      "created_at": "2018-06-27T09:50:00.000Z",\n      "channel": "card",\n      "currency": "NGN",\n      "ip_address": "54.162.150.5, 172.68.65.71, 172.31.7.148",\n      "metadata": {\n        "custom_fields": [\n          {\n            "display_name": "Started From",\n            "variable_name": "started_from",\n            "value": "sample charge card backend"\n          },\n          {\n            "display_name": "Requested by",\n            "variable_name": "requested_by",\n            "value": "Mr. Akinlade"\n          },\n          {\n            "display_name": "Server",\n            "variable_name": "server",\n            "value": "infinite-peak-60063.herokuapp.com"\n          }\n        ]\n      },\n      "log": null,\n      "fees": 38,\n      "fees_split": null,\n      "authorization": 7430322,\n      "customer": 22421,\n      "plan": {},\n      "subaccount": {},\n      "paidAt": "2018-06-27T09:50:55.000Z",\n      "createdAt": "2018-06-27T09:50:00.000Z"\n    },\n    "currency": "NGN",\n    "amount": 2500,\n    "channel": null,\n    "customer_note": "I love people",\n    "merchant_note": "People are awesome",\n    "integration": 100073,\n    "domain": "live",\n    "status": "pending",\n    "refunded_by": "refunds@paystack.co",\n    "refunded_at": "2018-07-05T12:03:26.269Z",\n    "expected_at": "2018-07-12T12:03:26.000Z",\n    "fully_deducted": false,\n    "id": 5679,\n    "createdAt": "2018-07-05T12:03:26.269Z",\n    "updatedAt": "2018-07-05T12:03:26.269Z"\n  }\n}'},ylwN:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "OTP requirement for transfers has been enabled"\n}'},ywUy:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_401_unauthorized",(function(){return r})),n.d(t,"stat_404_not_found",(function(){return s}));var a='{\n  "status": true,\n  "message": "Customer retrieved",\n  "data": {\n    "integration": 100032,\n    "first_name": "Bojack",\n    "last_name": "Horseman",\n    "email": "bojack@horsinaround.com",\n    "phone": null,\n    "identified": true,\n    "identifications": [{\n      "country": "NG",\n      "type": "bvn",\n      "value": "200*****677"\n    }],\n    "metadata": {\n      "photos": [\n        {\n          "type": "twitter",\n          "typeId": "twitter",\n          "typeName": "Twitter",\n          "url": "https://d2ojpxxtu63wzl.cloudfront.net/static/61b1a0a1d4dda2c9fe9e165fed07f812_a722ae7148870cc2e33465d1807dfdc6efca33ad2c4e1f8943a79eead3c21311",\n          "isPrimary": true\n        }\n      ]\n    "domain": "test",\n    "customer_code": "CUS_xnxdt6s1zg1f4nx",\n    "id": 1173,\n    "transactions": [],\n    "subscriptions": [],\n    "authorizations": [],\n    "createdAt": "2016-03-29T20:03:09.000Z",\n    "updatedAt": "2016-03-29T20:03:10.000Z"\n  }\n}',r='{  \n  "status":false,\n  "message":"Invalid key"\n}',s='{\n  "status": false,\n  "message": "Customer email is invalid for your live domain."\n}'},z1db:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_404",(function(){return r}));var a='{\n  "status": true,\n  "message": "Transfer requires OTP to continue",\n  "data": {\n    "integration": 100073,\n    "domain": "test",\n    "amount": 3794800,\n    "currency": "NGN",\n    "source": "balance",\n    "reason": "Calm down",\n    "recipient": 28,\n    "status": "otp",\n    "transfer_code": "TRF_1ptvuv321ahaa7q",\n    "id": 14,\n    "createdAt": "2017-02-03T17:21:54.508Z",\n    "updatedAt": "2017-02-03T17:21:54.508Z"\n  }\n}',r='{\n  "status": false,\n  "message": "The customer specified has no saved authorizations"\n}'},zaJs:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/customer\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\n-d \'{ email: "customer@email.com" }\'\n-X POST',r="const https = require('https')\n\nconst params = JSON.stringify({\n  \"email\": \"customer@email.com\"\n})\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/customer',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.write(params)\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/customer";\n\n  $fields = [\n    \'email\' => "customer@email.com"\n  ];\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch,CURLOPT_POSTFIELDS, $fields_string);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},zabS:function(e,t,n){},zcxC:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200_ok",(function(){return a})),n.d(t,"stat_400_invalid",(function(){return r}));var a='{\n  "status": true,\n  "message": "Authorization is valid for this amount",\n  "data": {\n    "amount": "400",\n    "currency": "NGN"\n  }\n}',r='{\n  "status": false,\n  "message": "Insufficient Funds"\n}'},zdca:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a}));var a='{\n  "status": true,\n  "message": "BVN lookup successful",\n  "data": {\n    "bvn": "000000000000",\n    "is_blacklisted": false,\n    "account_number": true,\n    "first_name": true,\n    "last_name": true\n  },\n  "meta": {\n    "calls_this_month": 1,\n    "free_calls_left": 9\n  }\n}'},zfCk:function(e){e.exports=JSON.parse('{"create":{"id":"subscription-create","title":"Create Subscription","route":"/subscription","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"customer","type":"String","description":"Customer\'s email address or customer code","required":true},{"param":"plan","type":"String","description":"Plan code","required":true},{"param":"authorization","type":"String","description":"If customer has multiple authorizations, you can set the desired authorization you wish to use for this subscription here. If this is not supplied, the customer\'s most recent authorization would be used","required":true},{"param":"start_date","type":"String","description":"Set the date for the first debit. (ISO 8601 format) e.g. <code>2017-05-16T00:30:13+01:00</code>","required":false}],"query":[],"path":[]},"list":{"id":"subscription-list","title":"List Subscriptions","route":"/subscription","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[{"param":"perPage","type":"Integer","description":"Specify how many records you want to retrieve per page. If not specify we use a default value of 50.","required":true},{"param":"page","type":"Integer","description":"Specify exactly what page you want to retrieve. If not specify we use a default value of 1.","required":true},{"param":"customer","type":"Integer","description":"Filter by Customer ID","required":false},{"param":"plan","type":"Integer","description":"Filter by Plan ID","required":false}],"path":[]},"fetch":{"id":"subscription-fetch","title":"Fetch Subscription","route":"/subscription/:id_or_code","method":"GET","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true}],"body":[],"query":[],"path":[{"param":"id_or_code","type":"String","description":"The subscription <code>ID</code> or <code>code</code> you want to fetch","required":true}]},"enable":{"id":"subscription-enable","title":"Enable Subscription","route":"/subscription/enable","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"code","type":"String","description":"Subscription code","required":true},{"param":"token","type":"String","description":"Email token","required":true}],"query":[],"path":[]},"disable":{"id":"subscription-disable","title":"Disable Subscription","route":"/subscription/disable","method":"POST","header":[{"param":"authorization","type":"String","description":"Set value to <code>Bearer SECRET_KEY</code>","required":true},{"param":"content-type","type":"String","description":"Set value to <code>application/json</code>","required":true}],"body":[{"param":"code","type":"String","description":"Subscription code","required":true},{"param":"token","type":"String","description":"Email token","required":true}],"query":[],"path":[]}}')},zkoo:function(e,t,n){"use strict";n.r(t),n.d(t,"bash",(function(){return a})),n.d(t,"js",(function(){return r})),n.d(t,"php",(function(){return s}));var a='curl https://api.paystack.co/transfer/enable_otp\n-H "Authorization: Bearer YOUR_SECRET_KEY"\n-H "Content-Type: application/json"\'\n-X POST',r="const https = require('https')\n\nconst options = {\n  hostname: 'api.paystack.co',\n  port: 443,\n  path: '/transfer/enable_otp',\n  method: 'POST',\n  headers: {\n    Authorization: 'Bearer SECRET_KEY',\n    'Content-Type': 'application/json'\n  }\n}\n\nconst req = https.request(options, res => {\n  let data = ''\n\n  res.on('data', (chunk) => {\n    data += chunk\n  });\n\n  res.on('end', () => {\n    console.log(JSON.parse(data))\n  })\n}).on('error', error => {\n  console.error(error)\n})\n\nreq.end()",s='<?php\n  $url = "https://api.paystack.co/transfer/enable_otp";\n\n  $fields_string = http_build_query($fields);\n\n  //open connection\n  $ch = curl_init();\n  \n  //set the url, number of POST vars, POST data\n  curl_setopt($ch,CURLOPT_URL, $url);\n  curl_setopt($ch,CURLOPT_POST, true);\n  curl_setopt($ch, CURLOPT_HTTPHEADER, array(\n    "Authorization: Bearer SECRET_KEY",\n    "Cache-Control: no-cache",\n  ));\n  \n  //So that curl_exec returns the contents of the cURL; rather than echoing it\n  curl_setopt($ch,CURLOPT_RETURNTRANSFER, true); \n  \n  //execute post\n  $result = curl_exec($ch);\n  echo $result;\n?>'},zwvs:function(e,t,n){"use strict";n.r(t),n.d(t,"stat_200",(function(){return a})),n.d(t,"stat_400",(function(){return r}));var a='{\n  "status": true,\n  "message": "Charge attempted",\n  "data": {\n    "amount": 2000,\n    "currency": "NGN",\n    "transaction_date": "2020-01-23T14:39:37.000Z",\n    "status": "success",\n    "reference": "REF_0000000001",\n    "domain": "test",\n    "metadata": "",\n    "gateway_response": "Approved",\n    "message": null,\n    "channel": "card",\n    "ip_address": null,\n    "log": null,\n    "fees": 30,\n    "authorization": {\n      "authorization_code": "AUTH_72btv547",\n      "bin": "408408",\n      "last4": "0409",\n      "exp_month": "12",\n      "exp_year": "2020",\n      "channel": "card",\n      "card_type": "visa DEBIT",\n      "bank": "Test Bank",\n      "country_code": "NG",\n      "brand": "visa",\n      "reusable": true,\n      "signature": "SIG_GfJIf2Dg1N1BwN5ddXmh",\n      "account_name": "BoJack Horseman"\n    },\n    "customer": {\n      "id": 16702,\n      "first_name": "",\n      "last_name": "",\n      "email": "customer@email.com",\n      "customer_code": "CUS_096t7vsogztygg4",\n      "phone": "",\n      "metadata": null,\n      "risk_action": "default"\n    },\n    "plan": 0,\n    "amount": 2000\n  }\n}',r='{\n  "status": false,\n  "message": "merchant is not enabled for Partial Debit"\n}'}}]);
//# sourceMappingURL=component---src-pages-api-js-9bfcf8c97959a8788d05.js.map